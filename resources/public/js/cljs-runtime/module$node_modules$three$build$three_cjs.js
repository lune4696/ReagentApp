shadow$provide.module$node_modules$three$build$three_cjs=function(global,require,module,exports){function generateUUID(){var d0=4294967295*Math.random()|0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return(_lut[d0&255]+_lut[d0>>8&255]+_lut[d0>>16&255]+_lut[d0>>24&255]+"-"+_lut[d1&255]+_lut[d1>>8&255]+"-"+_lut[d1>>16&15|64]+_lut[d1>>24&255]+"-"+_lut[d2&63|128]+_lut[d2>>8&255]+"-"+_lut[d2>>16&255]+_lut[d2>>24&255]+_lut[d3&255]+_lut[d3>>8&255]+_lut[d3>>16&
255]+_lut[d3>>24&255]).toLowerCase()}function clamp(value,min,max){return Math.max(min,Math.min(max,value))}function euclideanModulo(n,m){return(n%m+m)%m}function lerp(x,y,t){return(1-t)*x+t*y}function denormalize(value,array){switch(array.constructor){case Float32Array:return value;case Uint32Array:return value/4294967295;case Uint16Array:return value/65535;case Uint8Array:return value/255;case Int32Array:return Math.max(value/2147483647,-1);case Int16Array:return Math.max(value/32767,-1);case Int8Array:return Math.max(value/
127,-1);default:throw Error("Invalid component type.");}}function normalize(value,array){switch(array.constructor){case Float32Array:return value;case Uint32Array:return Math.round(4294967295*value);case Uint16Array:return Math.round(65535*value);case Uint8Array:return Math.round(255*value);case Int32Array:return Math.round(2147483647*value);case Int16Array:return Math.round(32767*value);case Int8Array:return Math.round(127*value);default:throw Error("Invalid component type.");}}function arrayNeedsUint32(array){for(var i=
array.length-1;0<=i;--i)if(65535<=array[i])return!0;return!1}function createElementNS(name){return document.createElementNS("http://www.w3.org/1999/xhtml",name)}function createCanvasElement(){var canvas=createElementNS("canvas");canvas.style.display="block";return canvas}function warnOnce(message){message in _cache||(_cache[message]=!0,console.warn(message))}function probeAsync(gl,sync,interval){return new Promise(function(resolve,reject){function probe(){switch(gl.clientWaitSync(sync,gl.SYNC_FLUSH_COMMANDS_BIT,
0)){case gl.WAIT_FAILED:reject();break;case gl.TIMEOUT_EXPIRED:setTimeout(probe,interval);break;default:resolve()}}setTimeout(probe,interval)})}function SRGBToLinear(c){return.04045>c?.0773993808*c:Math.pow(.9478672986*c+.0521327014,2.4)}function LinearToSRGB(c){return.0031308>c?12.92*c:1.055*Math.pow(c,.41666)-.055}function serializeImage(image){if("undefined"!==typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||
"undefined"!==typeof ImageBitmap&&image instanceof ImageBitmap)return ImageUtils.getDataURL(image);if(image.data)return{data:Array.from(image.data),width:image.width,height:image.height,type:image.data.constructor.name};console.warn("THREE.Texture: Unable to serialize Texture.");return{}}function satForAxes(axes,v0,v1,v2,extents){for(var i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);var r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z),
p0=v0.dot(_testAxis),p1=v1.dot(_testAxis),p2=v2.dot(_testAxis);if(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r)return!1}return!0}function hue2rgb(p,q,t){0>t&&(t+=1);1<t&&--t;return t<1/6?p+6*(q-p)*t:.5>t?q:t<2/3?p+6*(q-p)*(2/3-t):p}function toHalfFloat(val){65504<Math.abs(val)&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range.");val=clamp(val,-65504,65504);_tables.floatView[0]=val;val=_tables.uint32View[0];var e=val>>23&511;return _tables.baseTable[e]+((val&8388607)>>_tables.shiftTable[e])}
function fromHalfFloat(val){var m=val>>10;_tables.uint32View[0]=_tables.mantissaTable[_tables.offsetTable[m]+(val&1023)]+_tables.exponentTable[m];return _tables.floatView[0]}function checkGeometryIntersection(object,material,raycaster,ray,uv,uv1,normal,a,b,c){object.getVertexPosition(a,_vA$1);object.getVertexPosition(b,_vB$1);object.getVertexPosition(c,_vC$1);null===(1===material.side?ray.intersectTriangle(_vC$1,_vB$1,_vA$1,!0,_intersectionPoint):ray.intersectTriangle(_vA$1,_vB$1,_vC$1,0===material.side,
_intersectionPoint))?object=null:(_intersectionPointWorld.copy(_intersectionPoint),_intersectionPointWorld.applyMatrix4(object.matrixWorld),material=raycaster.ray.origin.distanceTo(_intersectionPointWorld),object=material<raycaster.near||material>raycaster.far?null:{distance:material,point:_intersectionPointWorld.clone(),object:object});object&&(raycaster=new Vector3,Triangle.getBarycoord(_intersectionPoint,_vA$1,_vB$1,_vC$1,raycaster),uv&&(object.uv=Triangle.getInterpolatedAttribute(uv,a,b,c,raycaster,
new Vector2)),uv1&&(object.uv1=Triangle.getInterpolatedAttribute(uv1,a,b,c,raycaster,new Vector2)),normal&&(object.normal=Triangle.getInterpolatedAttribute(normal,a,b,c,raycaster,new Vector3),0<object.normal.dot(ray.direction)&&object.normal.multiplyScalar(-1)),ray={a:a,b:b,c:c,normal:new Vector3,materialIndex:0},Triangle.getNormal(_vA$1,_vB$1,_vC$1,ray.normal),object.face=ray,object.barycoord=raycaster);return object}function cloneUniforms(src){var dst={},u;for(u in src){dst[u]={};for(var p in src[u]){var property=
src[u][p];property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)?property.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),dst[u][p]=null):dst[u][p]=property.clone():Array.isArray(property)?dst[u][p]=property.slice():dst[u][p]=property}}return dst}function mergeUniforms(uniforms){for(var merged=
{},u=0;u<uniforms.length;u++){var tmp$105=cloneUniforms(uniforms[u]),p;for(p in tmp$105)merged[p]=tmp$105[p]}return merged}function getUnlitUniformColorSpace(renderer){var currentRenderTarget=renderer.getRenderTarget();return null===currentRenderTarget?renderer.outputColorSpace:!0===currentRenderTarget.isXRRenderTarget?currentRenderTarget.texture.colorSpace:ColorManagement.workingColorSpace}function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){_alignedPosition.subVectors(vertexPosition,
center).addScalar(.5).multiply(scale);void 0!==sin?(_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y,_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition);vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;vertexPosition.applyMatrix4(_viewWorldMatrix)}function ascIdSort(a,b){return a-b}function sortOpaque(a,b){return a.z-b.z}function sortTransparent(a,b){return b.z-a.z}function copyArrayContents(src,
target){if(src.constructor!==target.constructor)for(var len=Math.min(src.length,target.length),i=0;i<len;i++)target[i]=src[i];else target.set(new src.constructor(src.buffer,0,Math.min(src.length,target.length)))}function checkIntersection(object,raycaster,ray,thresholdSq,a,b,i){var positionAttribute=object.geometry.attributes.position;_vStart.fromBufferAttribute(positionAttribute,a);_vEnd.fromBufferAttribute(positionAttribute,b);if(!(ray.distanceSqToSegment(_vStart,_vEnd,_intersectPointOnRay,_intersectPointOnSegment)>
thresholdSq||(_intersectPointOnRay.applyMatrix4(object.matrixWorld),ray=raycaster.ray.origin.distanceTo(_intersectPointOnRay),ray<raycaster.near||ray>raycaster.far)))return{distance:ray,point:_intersectPointOnSegment.clone().applyMatrix4(object.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:object}}function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){var rayPointDistanceSq=_ray.distanceSqToPoint(point);rayPointDistanceSq<localThresholdSq&&(localThresholdSq=
new Vector3,_ray.closestPointToPoint(point,localThresholdSq),localThresholdSq.applyMatrix4(matrixWorld),point=raycaster.ray.origin.distanceTo(localThresholdSq),point<raycaster.near||point>raycaster.far||intersects.push({distance:point,distanceToRay:Math.sqrt(rayPointDistanceSq),point:localThresholdSq,index:index,face:null,faceIndex:null,barycoord:null,object:object}))}function CubicPoly(){var c0=0,c1=0,c2=0,c3=0;return{initCatmullRom:function(x0,x1,x2,x3,tension){x0=tension*(x2-x0);x3=tension*(x3-
x1);c0=x1;c1=x0;c2=-3*x1+3*x2-2*x0-x3;c3=2*x1-2*x2+x0+x3},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){x0=((x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1)*dt1;x3=((x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2)*dt1;c0=x1;c1=x0;c2=-3*x1+3*x2-2*x0-x3;c3=2*x1-2*x2+x0+x3},calc:function(t){var t2=t*t;return c0+c1*t+c2*t2+c3*t2*t}}}function CatmullRom(t,p0,p1,p2,p3){p0=.5*(p2-p0);p3=.5*(p3-p1);var t2=t*t;return(2*p1-2*p2+p0+p3)*t*t2+(-3*p1+3*p2-2*p0-p3)*t2+p0*t+p1}function QuadraticBezier(t,p0,p1,p2){var k=
1-t;return k*k*p0+2*(1-t)*t*p1+t*t*p2}function CubicBezier(t,p0,p1,p2,p3){var k=1-t,k$jscomp$0=1-t;return k*k*k*p0+3*k$jscomp$0*k$jscomp$0*t*p1+3*(1-t)*t*t*p2+t*t*t*p3}function linkedList(data,start,end,dim,clockwise){for(var last,sum=0,i=start,j=end-dim;i<end;i+=dim)sum+=(data[j]-data[i])*(data[i+1]+data[j+1]),j=i;if(clockwise===0<sum)for(;start<end;start+=dim)last=insertNode(start/dim|0,data[start],data[start+1],last);else for(end-=dim;end>=start;end-=dim)last=insertNode(end/dim|0,data[end],data[end+
1],last);last&&equals(last,last.next)&&(removeNode(last),last=last.next);return last}function filterPoints(start,end){if(!start)return start;end||(end=start);do{var again=!1;if(start.steiner||!equals(start,start.next)&&0!==area(start.prev,start,start.next))start=start.next;else{removeNode(start);start=end=start.prev;if(start===start.next)break;again=!0}}while(again||start!==end);return end}function earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(ear){if(!pass&&invSize){var start=ear,p=start;
do 0===p.z&&(p.z=zOrder(p.x,p.y,minX,minY,invSize)),p.prevZ=p.prev,p=p.nextZ=p.next;while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;start=p;var inSize=1;do{var p$jscomp$0=start,e,tail=start=null;for(p=0;p$jscomp$0;){p++;var q=p$jscomp$0,pSize=0;for(e=0;e<inSize&&(pSize++,q=q.nextZ,q);e++);for(var qSize=inSize;0<pSize||0<qSize&&q;)0!==pSize&&(0===qSize||!q||p$jscomp$0.z<=q.z)?(e=p$jscomp$0,p$jscomp$0=p$jscomp$0.nextZ,pSize--):(e=q,q=q.nextZ,qSize--),tail?tail.nextZ=e:start=e,e.prevZ=tail,tail=e;p$jscomp$0=
q}tail.nextZ=null;inSize*=2}while(1<p)}for(start=ear;ear.prev!==ear.next;){p=ear.prev;inSize=ear.next;if(invSize)p$jscomp$0=isEarHashed(ear,minX,minY,invSize);else a:{p$jscomp$0=ear.prev;var b=ear;qSize=ear.next;if(0<=area(p$jscomp$0,b,qSize))p$jscomp$0=!1;else{tail=p$jscomp$0.x;q=b.x;pSize=qSize.x;e=p$jscomp$0.y;b=b.y;var cy=qSize.y,x0=Math.min(tail,q,pSize),y0=Math.min(e,b,cy),x1=Math.max(tail,q,pSize),y1=Math.max(e,b,cy);for(qSize=qSize.next;qSize!==p$jscomp$0;){if(qSize.x>=x0&&qSize.x<=x1&&qSize.y>=
y0&&qSize.y<=y1&&pointInTriangleExceptFirst(tail,e,q,b,pSize,cy,qSize.x,qSize.y)&&0<=area(qSize.prev,qSize,qSize.next)){p$jscomp$0=!1;break a}qSize=qSize.next}p$jscomp$0=!0}}if(p$jscomp$0)triangles.push(p.i,ear.i,inSize.i),removeNode(ear),start=ear=inSize.next;else if(ear=inSize,ear===start){if(!pass)earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);else if(1===pass){ear=filterPoints(ear);pass=triangles;start=ear;do p=start.prev,inSize=start.next.next,!equals(p,inSize)&&intersects(p,
start,start.next,inSize)&&locallyInside(p,inSize)&&locallyInside(inSize,p)&&(pass.push(p.i,start.i,inSize.i),removeNode(start),removeNode(start.next),start=ear=inSize),start=start.next;while(start!==ear);ear=filterPoints(start);earcutLinked(ear,triangles,dim,minX,minY,invSize,2)}else if(2===pass)a:{pass=ear;do{for(start=pass.next.next;start!==pass.prev;){if(p=pass.i!==start.i){p=pass;inSize=start;if(p$jscomp$0=p.next.i!==inSize.i&&p.prev.i!==inSize.i){b:{p$jscomp$0=p;do{if(p$jscomp$0.i!==p.i&&p$jscomp$0.next.i!==
p.i&&p$jscomp$0.i!==inSize.i&&p$jscomp$0.next.i!==inSize.i&&intersects(p$jscomp$0,p$jscomp$0.next,p,inSize)){p$jscomp$0=!0;break b}p$jscomp$0=p$jscomp$0.next}while(p$jscomp$0!==p);p$jscomp$0=!1}p$jscomp$0=!p$jscomp$0}if(p$jscomp$0){if(p$jscomp$0=locallyInside(p,inSize)&&locallyInside(inSize,p)){p$jscomp$0=p;tail=!1;q=(p.x+inSize.x)/2;pSize=(p.y+inSize.y)/2;do p$jscomp$0.y>pSize!==p$jscomp$0.next.y>pSize&&p$jscomp$0.next.y!==p$jscomp$0.y&&q<(p$jscomp$0.next.x-p$jscomp$0.x)*(pSize-p$jscomp$0.y)/(p$jscomp$0.next.y-
p$jscomp$0.y)+p$jscomp$0.x&&(tail=!tail),p$jscomp$0=p$jscomp$0.next;while(p$jscomp$0!==p);p$jscomp$0=tail}p$jscomp$0=p$jscomp$0&&(area(p.prev,p,inSize.prev)||area(p,inSize.prev,inSize))||equals(p,inSize)&&0<area(p.prev,p,p.next)&&0<area(inSize.prev,inSize,inSize.next)}p=p$jscomp$0}if(p){ear=splitPolygon(pass,start);pass=filterPoints(pass,pass.next);ear=filterPoints(ear,ear.next);earcutLinked(pass,triangles,dim,minX,minY,invSize,0);earcutLinked(ear,triangles,dim,minX,minY,invSize,0);break a}start=
start.next}pass=pass.next}while(pass!==ear)}break}}}}function isEarHashed(ear,minX,minY,invSize){var a=ear.prev,c=ear.next;if(0<=area(a,ear,c))return!1;var ax=a.x,bx=ear.x,cx=c.x,ay=a.y,by=ear.y,cy=c.y,x0=Math.min(ax,bx,cx),y0=Math.min(ay,by,cy),x1=Math.max(ax,bx,cx),y1=Math.max(ay,by,cy),minZ=zOrder(x0,y0,minX,minY,invSize);minX=zOrder(x1,y1,minX,minY,invSize);minY=ear.prevZ;for(ear=ear.nextZ;minY&&minY.z>=minZ&&ear&&ear.z<=minX;){if(minY.x>=x0&&minY.x<=x1&&minY.y>=y0&&minY.y<=y1&&minY!==a&&minY!==
c&&pointInTriangleExceptFirst(ax,ay,bx,by,cx,cy,minY.x,minY.y)&&0<=area(minY.prev,minY,minY.next))return!1;minY=minY.prevZ;if(ear.x>=x0&&ear.x<=x1&&ear.y>=y0&&ear.y<=y1&&ear!==a&&ear!==c&&pointInTriangleExceptFirst(ax,ay,bx,by,cx,cy,ear.x,ear.y)&&0<=area(ear.prev,ear,ear.next))return!1;ear=ear.nextZ}for(;minY&&minY.z>=minZ;){if(minY.x>=x0&&minY.x<=x1&&minY.y>=y0&&minY.y<=y1&&minY!==a&&minY!==c&&pointInTriangleExceptFirst(ax,ay,bx,by,cx,cy,minY.x,minY.y)&&0<=area(minY.prev,minY,minY.next))return!1;
minY=minY.prevZ}for(;ear&&ear.z<=minX;){if(ear.x>=x0&&ear.x<=x1&&ear.y>=y0&&ear.y<=y1&&ear!==a&&ear!==c&&pointInTriangleExceptFirst(ax,ay,bx,by,cx,cy,ear.x,ear.y)&&0<=area(ear.prev,ear,ear.next))return!1;ear=ear.nextZ}return!0}function compareXYSlope(a,b){var result=a.x-b.x;0===result&&(result=a.y-b.y,0===result&&(result=(a.next.y-a.y)/(a.next.x-a.x)-(b.next.y-b.y)/(b.next.x-b.x)));return result}function findHoleBridge(hole,outerNode){var p=outerNode,hx=hole.x,hy=hole.y,qx=-Infinity;if(equals(hole,
p))return p;do{if(equals(hole,p.next))return p.next;if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;var m=p.x<p.next.x?p:p.next;if(x===hx)return m}}p=p.next}while(p!==outerNode);if(!m)return null;outerNode=m;x=m.x;var my=m.y,tanMin=Infinity;p=m;do{if(hx>=p.x&&p.x>=x&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,x,my,hy<my?qx:hx,hy,p.x,p.y)){var tan=Math.abs(hy-p.y)/(hx-p.x),JSCompiler_temp;if((JSCompiler_temp=locallyInside(p,hole))&&!(JSCompiler_temp=
tan<tanMin)&&(JSCompiler_temp=tan===tanMin)&&!(JSCompiler_temp=p.x>m.x)&&(JSCompiler_temp=p.x===m.x)){JSCompiler_temp=m;var p$jscomp$0=p;JSCompiler_temp=0>area(JSCompiler_temp.prev,JSCompiler_temp,p$jscomp$0.prev)&&0>area(p$jscomp$0.next,JSCompiler_temp,JSCompiler_temp.next)}JSCompiler_temp&&(m=p,tanMin=tan)}p=p.next}while(p!==outerNode);return m}function zOrder(x,y,minX,minY,invSize){x=(x-minX)*invSize|0;y=(y-minY)*invSize|0;x=(x|x<<8)&16711935;x=(x|x<<4)&252645135;x=(x|x<<2)&858993459;y=(y|y<<8)&
16711935;y=(y|y<<4)&252645135;y=(y|y<<2)&858993459;return(x|x<<1)&1431655765|((y|y<<1)&1431655765)<<1}function getLeftmost(start){var p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next}while(p!==start);return leftmost}function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)>=(ax-px)*(cy-py)&&(ax-px)*(by-py)>=(bx-px)*(ay-py)&&(bx-px)*(cy-py)>=(cx-px)*(by-py)}function pointInTriangleExceptFirst(ax,ay,bx,by,cx,cy,px,py){return!(ax===px&&ay===
py)&&pointInTriangle(ax,ay,bx,by,cx,cy,px,py)}function area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y)}function equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y}function intersects(p1,q1,p2,q2){var o1=sign(area(p1,q1,p2)),o2=sign(area(p1,q1,q2)),o3=sign(area(p2,q2,p1)),o4=sign(area(p2,q2,q1));return o1!==o2&&o3!==o4||0===o1&&onSegment(p1,p2,q1)||0===o2&&onSegment(p1,q2,q1)||0===o3&&onSegment(p2,p1,q2)||0===o4&&onSegment(p2,q1,q2)?!0:!1}function onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&
q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y)}function sign(num){return 0<num?1:0>num?-1:0}function locallyInside(a,b){return 0>area(a.prev,a,a.next)?0<=area(a,b,a.next)&&0<=area(a,a.prev,b):0>area(a,b,a.prev)||0>area(a,a.next,b)}function splitPolygon(a,b){var a2=createNode(a.i,a.x,a.y),b2=createNode(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2}function insertNode(i,x,y,last){i=createNode(i,
x,y);last?(i.next=last.next,i.prev=last,last.next.prev=i,last.next=i):(i.prev=i,i.next=i);return i}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;p.prevZ&&(p.prevZ.nextZ=p.nextZ);p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function createNode(i,x,y){return{i:i,x:x,y:y,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function removeDupEndPts(points){var l=points.length;2<l&&points[l-1].equals(points[0])&&points.pop()}function addContour(vertices,contour){for(var i=0;i<contour.length;i++)vertices.push(contour[i].x),
vertices.push(contour[i].y)}function isUniqueEdge(start,end,edges){var hash1=start.x+","+start.y+","+start.z+"-"+end.x+","+end.y+","+end.z;start=end.x+","+end.y+","+end.z+"-"+start.x+","+start.y+","+start.z;if(!0===edges.has(hash1)||!0===edges.has(start))return!1;edges.add(hash1);edges.add(start);return!0}function convertArray(array,type){return array&&array.constructor!==type?"number"===typeof type.BYTES_PER_ELEMENT?new type(array):Array.prototype.slice.call(array):array}function isTypedArray(object){return ArrayBuffer.isView(object)&&
!(object instanceof DataView)}function getKeyframeOrder(times){for(var n=times.length,result=Array(n),i$jscomp$0=0;i$jscomp$0!==n;++i$jscomp$0)result[i$jscomp$0]=i$jscomp$0;result.sort(function(i,j){return times[i]-times[j]});return result}function sortedArray(values,stride,order){for(var nValues=values.length,result=new values.constructor(nValues),i=0,dstOffset=0;dstOffset!==nValues;++i)for(var srcOffset=order[i]*stride,j=0;j!==stride;++j)result[dstOffset++]=values[srcOffset+j];return result}function flattenJSON(jsonKeys,
times,values,valuePropertyName){for(var i=1,key=jsonKeys[0];void 0!==key&&void 0===key[valuePropertyName];)key=jsonKeys[i++];if(void 0!==key){var value=key[valuePropertyName];if(void 0!==value)if(Array.isArray(value)){do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push.apply(values,$jscomp.arrayFromIterable(value))),key=jsonKeys[i++];while(void 0!==key)}else if(void 0!==value.toArray){do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),value.toArray(values,
values.length)),key=jsonKeys[i++];while(void 0!==key)}else{do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push(value)),key=jsonKeys[i++];while(void 0!==key)}}}function makeClipAdditive(targetClip,referenceFrame,referenceClip,fps){referenceClip=void 0===referenceClip?targetClip:referenceClip;fps=void 0===fps?30:fps;0>=fps&&(fps=30);var numTracks=referenceClip.tracks.length;referenceFrame=(void 0===referenceFrame?0:referenceFrame)/fps;fps={};for(var i=0;i<numTracks;fps=
{$jscomp$loop$prop$referenceTrack$384:fps.$jscomp$loop$prop$referenceTrack$384,$jscomp$loop$prop$referenceTrackType$385:fps.$jscomp$loop$prop$referenceTrackType$385},++i)if(fps.$jscomp$loop$prop$referenceTrack$384=referenceClip.tracks[i],fps.$jscomp$loop$prop$referenceTrackType$385=fps.$jscomp$loop$prop$referenceTrack$384.ValueTypeName,"bool"!==fps.$jscomp$loop$prop$referenceTrackType$385&&"string"!==fps.$jscomp$loop$prop$referenceTrackType$385){var targetTrack=targetClip.tracks.find(function($jscomp$loop$383){return function(track){return track.name===
$jscomp$loop$383.$jscomp$loop$prop$referenceTrack$384.name&&track.ValueTypeName===$jscomp$loop$383.$jscomp$loop$prop$referenceTrackType$385}}(fps));if(void 0!==targetTrack){var referenceOffset=0,referenceValueSize=fps.$jscomp$loop$prop$referenceTrack$384.getValueSize();fps.$jscomp$loop$prop$referenceTrack$384.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(referenceOffset=referenceValueSize/3);var targetOffset=0,targetValueSize=targetTrack.getValueSize();targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&
(targetOffset=targetValueSize/3);var lastIndex=fps.$jscomp$loop$prop$referenceTrack$384.times.length-1,referenceValue=void 0;referenceFrame<=fps.$jscomp$loop$prop$referenceTrack$384.times[0]?referenceValue=fps.$jscomp$loop$prop$referenceTrack$384.values.slice(referenceOffset,referenceValueSize-referenceOffset):referenceFrame>=fps.$jscomp$loop$prop$referenceTrack$384.times[lastIndex]?(referenceValue=lastIndex*referenceValueSize+referenceOffset,referenceValue=fps.$jscomp$loop$prop$referenceTrack$384.values.slice(referenceValue,
referenceValue+referenceValueSize-referenceOffset)):(referenceValue=fps.$jscomp$loop$prop$referenceTrack$384.createInterpolant(),lastIndex=referenceOffset,referenceOffset=referenceValueSize-referenceOffset,referenceValue.evaluate(referenceFrame),referenceValue=referenceValue.resultBuffer.slice(lastIndex,referenceOffset));"quaternion"===fps.$jscomp$loop$prop$referenceTrackType$385&&(new Quaternion).fromArray(referenceValue).normalize().conjugate().toArray(referenceValue);referenceOffset=targetTrack.times.length;
for(referenceValueSize=0;referenceValueSize<referenceOffset;++referenceValueSize)if(lastIndex=referenceValueSize*targetValueSize+targetOffset,"quaternion"===fps.$jscomp$loop$prop$referenceTrackType$385)Quaternion.multiplyQuaternionsFlat(targetTrack.values,lastIndex,referenceValue,0,targetTrack.values,lastIndex);else for(var valueEnd=targetValueSize-2*targetOffset,k=0;k<valueEnd;++k)targetTrack.values[lastIndex+k]-=referenceValue[k]}}targetClip.blendMode=2501;return targetClip}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return NumberKeyframeTrack;
case "vector":case "vector2":case "vector3":case "vector4":return VectorKeyframeTrack;case "color":return ColorKeyframeTrack;case "quaternion":return QuaternionKeyframeTrack;case "bool":case "boolean":return BooleanKeyframeTrack;case "string":return StringKeyframeTrack}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+typeName);}function parseKeyframeTrack(json){if(void 0===json.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");var trackType=getTrackTypeForValueTypeName(json.type);
if(void 0===json.times){var times=[],values=[];flattenJSON(json.keys,times,values,"value");json.times=times;json.values=values}return void 0!==trackType.parse?trackType.parse(json):new trackType(json.name,json.times,json.values,json.interpolation)}function ascSort(a,b){return a.distance-b.distance}function intersect(object,raycaster,intersects,recursive){var propagate=!0;object.layers.test(raycaster.layers)&&!1===object.raycast(raycaster,intersects)&&(propagate=!1);if(!0===propagate&&!0===recursive)for(object=
object.children,recursive=0,propagate=object.length;recursive<propagate;recursive++)intersect(object[recursive],raycaster,intersects,!0)}function handleVisibilityChange(){!1===this._document.hidden&&this.reset()}function getBoneList(object){var boneList=[];!0===object.isBone&&boneList.push(object);for(var i=0;i<object.children.length;i++)boneList.push.apply(boneList,$jscomp.arrayFromIterable(getBoneList(object.children[i])));return boneList}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector.set(x,
y,z).unproject(camera);point=pointMap[point];if(void 0!==point)for(geometry=geometry.getAttribute("position"),pointMap=0,camera=point.length;pointMap<camera;pointMap++)geometry.setXYZ(point[pointMap],_vector.x,_vector.y,_vector.z)}function getByteLength(width,height,format,type){type=getTextureTypeByteLength(type);switch(format){case 1021:return width*height;case 1028:return width*height/type.components*type.byteLength;case 1029:return width*height/type.components*type.byteLength;case 1030:return width*
height*2/type.components*type.byteLength;case 1031:return width*height*2/type.components*type.byteLength;case 1022:return width*height*3/type.components*type.byteLength;case 1023:return width*height*4/type.components*type.byteLength;case 1033:return width*height*4/type.components*type.byteLength;case 33776:case 33777:return Math.floor((width+3)/4)*Math.floor((height+3)/4)*8;case 33778:case 33779:return Math.floor((width+3)/4)*Math.floor((height+3)/4)*16;case 35841:case 35843:return Math.max(width,
16)*Math.max(height,8)/4;case 35840:case 35842:return Math.max(width,8)*Math.max(height,8)/2;case 36196:case 37492:return Math.floor((width+3)/4)*Math.floor((height+3)/4)*8;case 37496:return Math.floor((width+3)/4)*Math.floor((height+3)/4)*16;case 37808:return Math.floor((width+3)/4)*Math.floor((height+3)/4)*16;case 37809:return Math.floor((width+4)/5)*Math.floor((height+3)/4)*16;case 37810:return Math.floor((width+4)/5)*Math.floor((height+4)/5)*16;case 37811:return Math.floor((width+5)/6)*Math.floor((height+
4)/5)*16;case 37812:return Math.floor((width+5)/6)*Math.floor((height+5)/6)*16;case 37813:return Math.floor((width+7)/8)*Math.floor((height+4)/5)*16;case 37814:return Math.floor((width+7)/8)*Math.floor((height+5)/6)*16;case 37815:return Math.floor((width+7)/8)*Math.floor((height+7)/8)*16;case 37816:return Math.floor((width+9)/10)*Math.floor((height+4)/5)*16;case 37817:return Math.floor((width+9)/10)*Math.floor((height+5)/6)*16;case 37818:return Math.floor((width+9)/10)*Math.floor((height+7)/8)*16;
case 37819:return Math.floor((width+9)/10)*Math.floor((height+9)/10)*16;case 37820:return Math.floor((width+11)/12)*Math.floor((height+9)/10)*16;case 37821:return Math.floor((width+11)/12)*Math.floor((height+11)/12)*16;case 36492:case 36494:case 36495:return Math.ceil(width/4)*Math.ceil(height/4)*16;case 36283:case 36284:return Math.ceil(width/4)*Math.ceil(height/4)*8;case 36285:case 36286:return Math.ceil(width/4)*Math.ceil(height/4)*16}throw Error("Unable to determine texture byte length for "+
format+" format.");}function getTextureTypeByteLength(type){switch(type){case 1009:case 1010:return{byteLength:1,components:1};case 1012:case 1011:case 1016:return{byteLength:2,components:1};case 1017:case 1018:return{byteLength:2,components:4};case 1014:case 1013:case 1015:return{byteLength:4,components:1};case 35902:case 35899:return{byteLength:4,components:3}}throw Error("Unknown texture type "+type+".");}function WebGLAnimation(){function onAnimationFrame(time,frame){animationLoop(time,frame);
requestId=context.requestAnimationFrame(onAnimationFrame)}var context=null,isAnimating=!1,animationLoop=null,requestId=null;return{start:function(){!0!==isAnimating&&null!==animationLoop&&(requestId=context.requestAnimationFrame(onAnimationFrame),isAnimating=!0)},stop:function(){context.cancelAnimationFrame(requestId);isAnimating=!1},setAnimationLoop:function(callback){animationLoop=callback},setContext:function(value){context=value}}}function WebGLAttributes(gl){function createBuffer(attribute,bufferType){var array=
attribute.array,usage=attribute.usage,size=array.byteLength,buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();if(array instanceof Float32Array)bufferType=gl.FLOAT;else if("undefined"!==typeof Float16Array&&array instanceof Float16Array)bufferType=gl.HALF_FLOAT;else if(array instanceof Uint16Array)bufferType=attribute.isFloat16BufferAttribute?gl.HALF_FLOAT:gl.UNSIGNED_SHORT;else if(array instanceof Int16Array)bufferType=gl.SHORT;
else if(array instanceof Uint32Array)bufferType=gl.UNSIGNED_INT;else if(array instanceof Int32Array)bufferType=gl.INT;else if(array instanceof Int8Array)bufferType=gl.BYTE;else if(array instanceof Uint8Array)bufferType=gl.UNSIGNED_BYTE;else if(array instanceof Uint8ClampedArray)bufferType=gl.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+array);return{buffer:buffer,type:bufferType,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version,size:size}}
function updateBuffer(buffer,attribute,bufferType){var array=attribute.array,updateRanges=attribute.updateRanges;gl.bindBuffer(bufferType,buffer);if(0===updateRanges.length)gl.bufferSubData(bufferType,0,array);else{updateRanges.sort(function(a,b){return a.start-b.start});buffer=0;for(var i=1;i<updateRanges.length;i++){var previousRange=updateRanges[buffer],range=updateRanges[i];range.start<=previousRange.start+previousRange.count+1?previousRange.count=Math.max(previousRange.count,range.start+range.count-
previousRange.start):(++buffer,updateRanges[buffer]=range)}updateRanges.length=buffer+1;buffer=0;for(i=updateRanges.length;buffer<i;buffer++)previousRange=updateRanges[buffer],gl.bufferSubData(bufferType,previousRange.start*array.BYTES_PER_ELEMENT,array,previousRange.start,previousRange.count);attribute.clearUpdateRanges()}attribute.onUploadCallback()}var buffers=new WeakMap;return{get:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);return buffers.get(attribute)},
remove:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);var data=buffers.get(attribute);data&&(gl.deleteBuffer(data.buffer),buffers.delete(attribute))},update:function(attribute,bufferType){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);if(attribute.isGLBufferAttribute)bufferType=buffers.get(attribute),(!bufferType||bufferType.version<attribute.version)&&buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,
version:attribute.version});else{var data=buffers.get(attribute);if(void 0===data)buffers.set(attribute,createBuffer(attribute,bufferType));else if(data.version<attribute.version){if(data.size!==attribute.array.byteLength)throw Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version}}}}}function WebGLBackground(renderer$jscomp$0,
cubemaps,cubeuvmaps,state,objects,alpha$jscomp$0,premultipliedAlpha){function getBackground(scene){var background=!0===scene.isScene?scene.background:null;background&&background.isTexture&&(background=(0<scene.backgroundBlurriness?cubeuvmaps:cubemaps).get(background));return background}function setClear(color,alpha){color.getRGB(_rgb,getUnlitUniformColorSpace(renderer$jscomp$0));state.buffers.color.setClear(_rgb.r,_rgb.g,_rgb.b,alpha,premultipliedAlpha)}var clearColor=new Color(0),clearAlpha=!0===
alpha$jscomp$0?0:1,planeMesh,boxMesh,currentBackground=null,currentBackgroundVersion=0,currentTonemapping=null;return{getClearColor:function(){return clearColor},setClearColor:function(color,alpha){alpha=void 0===alpha?1:alpha;clearColor.set(color);clearAlpha=alpha;setClear(clearColor,clearAlpha)},getClearAlpha:function(){return clearAlpha},setClearAlpha:function(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha)},render:function(scene){var forceClear=!1;scene=getBackground(scene);null===scene?
setClear(clearColor,clearAlpha):scene&&scene.isColor&&(setClear(scene,1),forceClear=!0);scene=renderer$jscomp$0.xr.getEnvironmentBlendMode();"additive"===scene?state.buffers.color.setClear(0,0,0,1,premultipliedAlpha):"alpha-blend"===scene&&state.buffers.color.setClear(0,0,0,0,premultipliedAlpha);if(renderer$jscomp$0.autoClear||forceClear)state.buffers.depth.setTest(!0),state.buffers.depth.setMask(!0),state.buffers.color.setMask(!0),renderer$jscomp$0.clear(renderer$jscomp$0.autoClearColor,renderer$jscomp$0.autoClearDepth,
renderer$jscomp$0.autoClearStencil)},addToRenderList:function(renderList,scene$jscomp$0){var background=getBackground(scene$jscomp$0);if(background&&(background.isCubeTexture||306===background.mapping)){void 0===boxMesh&&(boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.backgroundCube.uniforms),vertexShader:ShaderLib.backgroundCube.vertexShader,fragmentShader:ShaderLib.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,
fog:!1,allowOverride:!1})),boxMesh.geometry.deleteAttribute("normal"),boxMesh.geometry.deleteAttribute("uv"),boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld)},Object.defineProperty(boxMesh.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),objects.update(boxMesh));_e1$1.copy(scene$jscomp$0.backgroundRotation);_e1$1.x*=-1;_e1$1.y*=-1;_e1$1.z*=-1;background.isCubeTexture&&!1===background.isRenderTargetTexture&&(_e1$1.y*=-1,
_e1$1.z*=-1);boxMesh.material.uniforms.envMap.value=background;boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&!1===background.isRenderTargetTexture?-1:1;boxMesh.material.uniforms.backgroundBlurriness.value=scene$jscomp$0.backgroundBlurriness;boxMesh.material.uniforms.backgroundIntensity.value=scene$jscomp$0.backgroundIntensity;boxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4(_m1$1.makeRotationFromEuler(_e1$1));boxMesh.material.toneMapped="srgb"!==ColorManagement.getTransfer(background.colorSpace);
if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer$jscomp$0.toneMapping)boxMesh.material.needsUpdate=!0,currentBackground=background,currentBackgroundVersion=background.version,currentTonemapping=renderer$jscomp$0.toneMapping;boxMesh.layers.enableAll();renderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null)}else if(background&&background.isTexture){void 0===planeMesh&&(planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",
uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),planeMesh.geometry.deleteAttribute("normal"),Object.defineProperty(planeMesh.material,"map",{get:function(){return this.uniforms.t2D.value}}),objects.update(planeMesh));planeMesh.material.uniforms.t2D.value=background;planeMesh.material.uniforms.backgroundIntensity.value=scene$jscomp$0.backgroundIntensity;
planeMesh.material.toneMapped="srgb"!==ColorManagement.getTransfer(background.colorSpace);!0===background.matrixAutoUpdate&&background.updateMatrix();planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer$jscomp$0.toneMapping)planeMesh.material.needsUpdate=!0,currentBackground=background,currentBackgroundVersion=background.version,currentTonemapping=renderer$jscomp$0.toneMapping;
planeMesh.layers.enableAll();renderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null)}},dispose:function(){void 0!==boxMesh&&(boxMesh.geometry.dispose(),boxMesh.material.dispose(),boxMesh=void 0);void 0!==planeMesh&&(planeMesh.geometry.dispose(),planeMesh.material.dispose(),planeMesh=void 0)}}}function WebGLBindingStates(gl,attributes){function createBindingState(vao){for(var newAttributes=[],enabledAttributes=[],attributeDivisors=[],i=0;i<maxVertexAttributes;i++)newAttributes[i]=
0,enabledAttributes[i]=0,attributeDivisors[i]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{},index:null}}function initAttributes(){for(var newAttributes=currentState.newAttributes,i=0,il=newAttributes.length;i<il;i++)newAttributes[i]=0}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0)}function enableAttributeAndDivisor(attribute,meshPerAttribute){var enabledAttributes=
currentState.enabledAttributes,attributeDivisors=currentState.attributeDivisors;currentState.newAttributes[attribute]=1;0===enabledAttributes[attribute]&&(gl.enableVertexAttribArray(attribute),enabledAttributes[attribute]=1);attributeDivisors[attribute]!==meshPerAttribute&&(gl.vertexAttribDivisor(attribute,meshPerAttribute),attributeDivisors[attribute]=meshPerAttribute)}function disableUnusedAttributes(){for(var newAttributes=currentState.newAttributes,enabledAttributes=currentState.enabledAttributes,
i=0,il=enabledAttributes.length;i<il;i++)enabledAttributes[i]!==newAttributes[i]&&(gl.disableVertexAttribArray(i),enabledAttributes[i]=0)}function reset(){resetDefaultState();forceUpdate=!0;currentState!==defaultState&&(currentState=defaultState,gl.bindVertexArray(currentState.object))}function resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=!1}var maxVertexAttributes=gl.getParameter(gl.MAX_VERTEX_ATTRIBS),bindingStates={},defaultState=createBindingState(null),
currentState=defaultState,forceUpdate=!1;return{setup:function(object,material,program,geometry,index){var JSCompiler_inline_result=!0===material.wireframe;var programMap=bindingStates[geometry.id];void 0===programMap&&(programMap={},bindingStates[geometry.id]=programMap);var stateMap=programMap[program.id];void 0===stateMap&&(stateMap={},programMap[program.id]=stateMap);programMap=stateMap[JSCompiler_inline_result];void 0===programMap&&(programMap=createBindingState(gl.createVertexArray()),stateMap[JSCompiler_inline_result]=
programMap);JSCompiler_inline_result=programMap;currentState!==JSCompiler_inline_result&&(currentState=JSCompiler_inline_result,gl.bindVertexArray(currentState.object));a:{JSCompiler_inline_result=currentState.attributes;stateMap=geometry.attributes;programMap=0;var programAttributes=program.getAttributes();for(updateBuffers in programAttributes)if(0<=programAttributes[updateBuffers].location){var cachedAttribute=JSCompiler_inline_result[updateBuffers],geometryAttribute=stateMap[updateBuffers];void 0===
geometryAttribute&&("instanceMatrix"===updateBuffers&&object.instanceMatrix&&(geometryAttribute=object.instanceMatrix),"instanceColor"===updateBuffers&&object.instanceColor&&(geometryAttribute=object.instanceColor));if(void 0===cachedAttribute||cachedAttribute.attribute!==geometryAttribute||geometryAttribute&&cachedAttribute.data!==geometryAttribute.data){var updateBuffers=!0;break a}programMap++}updateBuffers=currentState.attributesNum!==programMap||currentState.index!==index?!0:!1}if(updateBuffers){JSCompiler_inline_result=
{};stateMap=geometry.attributes;programMap=0;programAttributes=program.getAttributes();for(var name in programAttributes)0<=programAttributes[name].location&&(cachedAttribute=stateMap[name],void 0===cachedAttribute&&("instanceMatrix"===name&&object.instanceMatrix&&(cachedAttribute=object.instanceMatrix),"instanceColor"===name&&object.instanceColor&&(cachedAttribute=object.instanceColor)),geometryAttribute={},(geometryAttribute.attribute=cachedAttribute)&&cachedAttribute.data&&(geometryAttribute.data=
cachedAttribute.data),JSCompiler_inline_result[name]=geometryAttribute,programMap++);currentState.attributes=JSCompiler_inline_result;currentState.attributesNum=programMap;currentState.index=index}null!==index&&attributes.update(index,gl.ELEMENT_ARRAY_BUFFER);if(updateBuffers||forceUpdate){forceUpdate=!1;initAttributes();name=geometry.attributes;program=program.getAttributes();material=material.defaultAttributeValues;for(var name$jscomp$0 in program)if(updateBuffers=program[name$jscomp$0],0<=updateBuffers.location){var geometryAttribute$jscomp$0=
name[name$jscomp$0];void 0===geometryAttribute$jscomp$0&&("instanceMatrix"===name$jscomp$0&&object.instanceMatrix&&(geometryAttribute$jscomp$0=object.instanceMatrix),"instanceColor"===name$jscomp$0&&object.instanceColor&&(geometryAttribute$jscomp$0=object.instanceColor));if(void 0!==geometryAttribute$jscomp$0){if(JSCompiler_inline_result=geometryAttribute$jscomp$0.normalized,stateMap=geometryAttribute$jscomp$0.itemSize,programAttributes=attributes.get(geometryAttribute$jscomp$0),void 0!==programAttributes){var buffer=
programAttributes.buffer;programMap=programAttributes.type;programAttributes=programAttributes.bytesPerElement;cachedAttribute=programMap===gl.INT||programMap===gl.UNSIGNED_INT||1013===geometryAttribute$jscomp$0.gpuType;if(geometryAttribute$jscomp$0.isInterleavedBufferAttribute){var data=geometryAttribute$jscomp$0.data;geometryAttribute=data.stride;geometryAttribute$jscomp$0=geometryAttribute$jscomp$0.offset;if(data.isInstancedInterleavedBuffer){for(var i=0;i<updateBuffers.locationSize;i++)enableAttributeAndDivisor(updateBuffers.location+
i,data.meshPerAttribute);!0!==object.isInstancedMesh&&void 0===geometry._maxInstanceCount&&(geometry._maxInstanceCount=data.meshPerAttribute*data.count)}else for(data=0;data<updateBuffers.locationSize;data++)enableAttribute(updateBuffers.location+data);gl.bindBuffer(gl.ARRAY_BUFFER,buffer);for(buffer=0;buffer<updateBuffers.locationSize;buffer++){data=updateBuffers.location+buffer;i=stateMap/updateBuffers.locationSize;var stride=geometryAttribute*programAttributes,offset=(geometryAttribute$jscomp$0+
stateMap/updateBuffers.locationSize*buffer)*programAttributes;!0===cachedAttribute?gl.vertexAttribIPointer(data,i,programMap,stride,offset):gl.vertexAttribPointer(data,i,programMap,JSCompiler_inline_result,stride,offset)}}else{if(geometryAttribute$jscomp$0.isInstancedBufferAttribute){for(geometryAttribute=0;geometryAttribute<updateBuffers.locationSize;geometryAttribute++)enableAttributeAndDivisor(updateBuffers.location+geometryAttribute,geometryAttribute$jscomp$0.meshPerAttribute);!0!==object.isInstancedMesh&&
void 0===geometry._maxInstanceCount&&(geometry._maxInstanceCount=geometryAttribute$jscomp$0.meshPerAttribute*geometryAttribute$jscomp$0.count)}else for(geometryAttribute=0;geometryAttribute<updateBuffers.locationSize;geometryAttribute++)enableAttribute(updateBuffers.location+geometryAttribute);gl.bindBuffer(gl.ARRAY_BUFFER,buffer);for(geometryAttribute=0;geometryAttribute<updateBuffers.locationSize;geometryAttribute++)geometryAttribute$jscomp$0=updateBuffers.location+geometryAttribute,buffer=stateMap/
updateBuffers.locationSize,data=stateMap*programAttributes,i=stateMap/updateBuffers.locationSize*geometryAttribute*programAttributes,!0===cachedAttribute?gl.vertexAttribIPointer(geometryAttribute$jscomp$0,buffer,programMap,data,i):gl.vertexAttribPointer(geometryAttribute$jscomp$0,buffer,programMap,JSCompiler_inline_result,data,i)}}}else if(void 0!==material&&(JSCompiler_inline_result=material[name$jscomp$0],void 0!==JSCompiler_inline_result))switch(JSCompiler_inline_result.length){case 2:gl.vertexAttrib2fv(updateBuffers.location,
JSCompiler_inline_result);break;case 3:gl.vertexAttrib3fv(updateBuffers.location,JSCompiler_inline_result);break;case 4:gl.vertexAttrib4fv(updateBuffers.location,JSCompiler_inline_result);break;default:gl.vertexAttrib1fv(updateBuffers.location,JSCompiler_inline_result)}}disableUnusedAttributes();null!==index&&gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,attributes.get(index).buffer)}},reset:reset,resetDefaultState:resetDefaultState,dispose:function(){reset();for(var geometryId in bindingStates){var programMap=
bindingStates[geometryId],programId;for(programId in programMap){var stateMap=programMap[programId],wireframe;for(wireframe in stateMap)gl.deleteVertexArray(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[programId]}delete bindingStates[geometryId]}},releaseStatesOfGeometry:function(geometry){if(void 0!==bindingStates[geometry.id]){var programMap=bindingStates[geometry.id],programId;for(programId in programMap){var stateMap=programMap[programId],wireframe;for(wireframe in stateMap)gl.deleteVertexArray(stateMap[wireframe].object),
delete stateMap[wireframe];delete programMap[programId]}delete bindingStates[geometry.id]}},releaseStatesOfProgram:function(program){for(var geometryId in bindingStates){var programMap=bindingStates[geometryId];if(void 0!==programMap[program.id]){var stateMap=programMap[program.id],wireframe;for(wireframe in stateMap)gl.deleteVertexArray(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[program.id]}}},initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes}}
function WebGLBufferRenderer(gl,extensions,info){function renderInstances(start,count,primcount){0!==primcount&&(gl.drawArraysInstanced(mode,start,count,primcount),info.update(count,mode,primcount))}var mode;this.setMode=function(value){mode=value};this.render=function(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1)};this.renderInstances=renderInstances;this.renderMultiDraw=function(starts,counts,drawCount){if(0!==drawCount){extensions.get("WEBGL_multi_draw").multiDrawArraysWEBGL(mode,
starts,0,counts,0,drawCount);for(var i=starts=0;i<drawCount;i++)starts+=counts[i];info.update(starts,mode,1)}};this.renderMultiDrawInstances=function(starts,counts,drawCount,primcount){if(0!==drawCount){var extension=extensions.get("WEBGL_multi_draw");if(null===extension)for(drawCount=0;drawCount<starts.length;drawCount++)renderInstances(starts[drawCount],counts[drawCount],primcount[drawCount]);else{extension.multiDrawArraysInstancedWEBGL(mode,starts,0,counts,0,primcount,0,drawCount);for(extension=
starts=0;extension<drawCount;extension++)starts+=counts[extension]*primcount[extension];info.update(starts,mode,1)}}}}function WebGLCapabilities(gl,extensions,parameters,utils){function getMaxPrecision(precision){if("highp"===precision){if(0<gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT).precision&&0<gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT).precision)return"highp";precision="mediump"}return"mediump"===precision&&0<gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT).precision&&
0<gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT).precision?"mediump":"lowp"}var maxAnisotropy,precision$jscomp$0=void 0!==parameters.precision?parameters.precision:"highp",maxPrecision=getMaxPrecision(precision$jscomp$0);maxPrecision!==precision$jscomp$0&&(console.warn("THREE.WebGLRenderer:",precision$jscomp$0,"not supported, using",maxPrecision,"instead."),precision$jscomp$0=maxPrecision);maxPrecision=!0===parameters.logarithmicDepthBuffer;parameters=!0===parameters.reversedDepthBuffer&&
extensions.has("EXT_clip_control");var maxTextures=gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS),maxVertexTextures=gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxTextureSize=gl.getParameter(gl.MAX_TEXTURE_SIZE),maxCubemapSize=gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes=gl.getParameter(gl.MAX_VERTEX_ATTRIBS),maxVertexUniforms=gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings=gl.getParameter(gl.MAX_VARYING_VECTORS),maxFragmentUniforms=gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS),
vertexTextures=0<maxVertexTextures,maxSamples=gl.getParameter(gl.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==maxAnisotropy)return maxAnisotropy;if(!0===extensions.has("EXT_texture_filter_anisotropic")){var extension=extensions.get("EXT_texture_filter_anisotropic");maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else maxAnisotropy=0;return maxAnisotropy},getMaxPrecision:getMaxPrecision,textureFormatReadable:function(textureFormat){return 1023!==textureFormat&&
utils.convert(textureFormat)!==gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_FORMAT)?!1:!0},textureTypeReadable:function(textureType){var halfFloatSupportedByExt=1016===textureType&&(extensions.has("EXT_color_buffer_half_float")||extensions.has("EXT_color_buffer_float"));return 1009===textureType||utils.convert(textureType)===gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_TYPE)||1015===textureType||halfFloatSupportedByExt?!0:!1},precision:precision$jscomp$0,logarithmicDepthBuffer:maxPrecision,reversedDepthBuffer:parameters,
maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,maxSamples:maxSamples}}function WebGLClipping(properties){function projectPlanes(planes,camera,dstOffset,skipTransform){var nPlanes=null!==planes?planes.length:0,dstArray=null;if(0!==nPlanes){dstArray=uniform.value;if(!0!==
skipTransform||null===dstArray){skipTransform=dstOffset+4*nPlanes;camera=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(camera);if(null===dstArray||dstArray.length<skipTransform)dstArray=new Float32Array(skipTransform);for(skipTransform=0;skipTransform!==nPlanes;++skipTransform,dstOffset+=4)plane.copy(planes[skipTransform]).applyMatrix4(camera,viewNormalMatrix),plane.normal.toArray(dstArray,dstOffset),dstArray[dstOffset+3]=plane.constant}uniform.value=dstArray;uniform.needsUpdate=!0}scope.numPlanes=
nPlanes;scope.numIntersection=0;return dstArray}var scope=this,globalState=null,numGlobalPlanes=0,localClippingEnabled=!1,renderingShadows=!1,plane=new Plane,viewNormalMatrix=new Matrix3,uniform={value:null,needsUpdate:!1};this.uniform=uniform;this.numIntersection=this.numPlanes=0;this.init=function(planes,enableLocalClipping){var enabled=0!==planes.length||enableLocalClipping||0!==numGlobalPlanes||localClippingEnabled;localClippingEnabled=enableLocalClipping;numGlobalPlanes=planes.length;return enabled};
this.beginShadows=function(){renderingShadows=!0;projectPlanes(null)};this.endShadows=function(){renderingShadows=!1};this.setGlobalState=function(planes,camera){globalState=projectPlanes(planes,camera,0)};this.setState=function(material,camera,useCache){var planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows;material=properties.get(material);if(!localClippingEnabled||null===planes||0===planes.length||renderingShadows&&!clipShadows)renderingShadows?
projectPlanes(null):(uniform.value!==globalState&&(uniform.value=globalState,uniform.needsUpdate=0<numGlobalPlanes),scope.numPlanes=numGlobalPlanes,scope.numIntersection=0);else{clipShadows=renderingShadows?0:numGlobalPlanes;var lGlobal=4*clipShadows,dstArray=material.clippingState||null;uniform.value=dstArray;dstArray=projectPlanes(planes,camera,lGlobal,useCache);for(camera=0;camera!==lGlobal;++camera)dstArray[camera]=globalState[camera];material.clippingState=dstArray;this.numIntersection=clipIntersection?
this.numPlanes:0;this.numPlanes+=clipShadows}}}function WebGLCubeMaps(renderer){function mapTextureMapping(texture,mapping){303===mapping?texture.mapping=301:304===mapping&&(texture.mapping=302);return texture}function onTextureDispose(event){event=event.target;event.removeEventListener("dispose",onTextureDispose);var cubemap=cubemaps.get(event);void 0!==cubemap&&(cubemaps.delete(event),cubemap.dispose())}var cubemaps=new WeakMap;return{get:function(texture){if(texture&&texture.isTexture){var mapping=
texture.mapping;if(303===mapping||304===mapping)return cubemaps.has(texture)?(mapping=cubemaps.get(texture).texture,mapTextureMapping(mapping,texture.mapping)):(mapping=texture.image)&&0<mapping.height?(mapping=new WebGLCubeRenderTarget(mapping.height),mapping.fromEquirectangularTexture(renderer,texture),cubemaps.set(texture,mapping),texture.addEventListener("dispose",onTextureDispose),mapTextureMapping(mapping.texture,texture.mapping)):null}return texture},dispose:function(){cubemaps=new WeakMap}}}
function _createRenderTarget(width,height,params){width=new WebGLRenderTarget(width,height,params);width.texture.mapping=306;width.texture.name="PMREM.cubeUv";width.scissorTest=!0;return width}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height)}function _getEquirectMaterial(){return new ShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include \x3ccommon\x3e\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection \x3d normalize( vOutputDirection );\n\t\t\t\tvec2 uv \x3d equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor \x3d vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",
blending:0,depthTest:!1,depthWrite:!1})}function _getCubemapMaterial(){return new ShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor \x3d textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",
blending:0,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv \x3d 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction \x3d vec3( uv, 1.0 );\n\n\t\t\tif ( face \x3d\x3d 0.0 ) {\n\n\t\t\t\tdirection \x3d direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face \x3d\x3d 1.0 ) {\n\n\t\t\t\tdirection \x3d direction.xzy;\n\t\t\t\tdirection.xz *\x3d -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face \x3d\x3d 2.0 ) {\n\n\t\t\t\tdirection.x *\x3d -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face \x3d\x3d 3.0 ) {\n\n\t\t\t\tdirection \x3d direction.zyx;\n\t\t\t\tdirection.xz *\x3d -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face \x3d\x3d 4.0 ) {\n\n\t\t\t\tdirection \x3d direction.xzy;\n\t\t\t\tdirection.xy *\x3d -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face \x3d\x3d 5.0 ) {\n\n\t\t\t\tdirection.z *\x3d -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection \x3d getDirection( uv, faceIndex );\n\t\t\tgl_Position \x3d vec4( position, 1.0 );\n\n\t\t}\n\t"}
function WebGLCubeUVMaps(renderer){function onTextureDispose(event){event=event.target;event.removeEventListener("dispose",onTextureDispose);var cubemapUV=cubeUVmaps.get(event);void 0!==cubemapUV&&(cubeUVmaps.delete(event),cubemapUV.dispose())}var cubeUVmaps=new WeakMap,pmremGenerator=null;return{get:function(texture){if(texture&&texture.isTexture){var mapping=texture.mapping,isEquirectMap=303===mapping||304===mapping,isCubeMap=301===mapping||302===mapping;if(isEquirectMap||isCubeMap){mapping=cubeUVmaps.get(texture);
var currentPMREMVersion=void 0!==mapping?mapping.texture.pmremVersion:0;if(texture.isRenderTargetTexture&&texture.pmremVersion!==currentPMREMVersion)return null===pmremGenerator&&(pmremGenerator=new PMREMGenerator(renderer)),mapping=isEquirectMap?pmremGenerator.fromEquirectangular(texture,mapping):pmremGenerator.fromCubemap(texture,mapping),mapping.texture.pmremVersion=texture.pmremVersion,cubeUVmaps.set(texture,mapping),mapping.texture;if(void 0!==mapping)return mapping.texture;mapping=texture.image;
if(!(currentPMREMVersion=isEquirectMap&&mapping&&0<mapping.height)){if(isCubeMap=isCubeMap&&mapping){for(currentPMREMVersion=isCubeMap=0;6>currentPMREMVersion;currentPMREMVersion++)void 0!==mapping[currentPMREMVersion]&&isCubeMap++;isCubeMap=6===isCubeMap}currentPMREMVersion=isCubeMap}return currentPMREMVersion?(null===pmremGenerator&&(pmremGenerator=new PMREMGenerator(renderer)),mapping=isEquirectMap?pmremGenerator.fromEquirectangular(texture):pmremGenerator.fromCubemap(texture),mapping.texture.pmremVersion=
texture.pmremVersion,cubeUVmaps.set(texture,mapping),texture.addEventListener("dispose",onTextureDispose),mapping.texture):null}}return texture},dispose:function(){cubeUVmaps=new WeakMap;null!==pmremGenerator&&(pmremGenerator.dispose(),pmremGenerator=null)}}}function WebGLExtensions(gl){function getExtension(name){if(void 0!==extensions[name])return extensions[name];switch(name){case "WEBGL_depth_texture":var extension=gl.getExtension("WEBGL_depth_texture")||gl.getExtension("MOZ_WEBGL_depth_texture")||
gl.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":extension=gl.getExtension("EXT_texture_filter_anisotropic")||gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":extension=gl.getExtension("WEBGL_compressed_texture_s3tc")||gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case "WEBGL_compressed_texture_pvrtc":extension=
gl.getExtension("WEBGL_compressed_texture_pvrtc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:extension=gl.getExtension(name)}return extensions[name]=extension}var extensions={};return{has:function(name){return null!==getExtension(name)},init:function(){getExtension("EXT_color_buffer_float");getExtension("WEBGL_clip_cull_distance");getExtension("OES_texture_float_linear");getExtension("EXT_color_buffer_half_float");getExtension("WEBGL_multisampled_render_to_texture");getExtension("WEBGL_render_shared_exponent")},
get:function(name){var extension=getExtension(name);null===extension&&warnOnce("THREE.WebGLRenderer: "+name+" extension not supported.");return extension}}}function WebGLGeometries(gl,attributes,info,bindingStates){function onGeometryDispose(event){event=event.target;null!==event.index&&attributes.remove(event.index);for(var name in event.attributes)attributes.remove(event.attributes[name]);event.removeEventListener("dispose",onGeometryDispose);delete geometries[event.id];if(name=wireframeAttributes.get(event))attributes.remove(name),
wireframeAttributes.delete(event);bindingStates.releaseStatesOfGeometry(event);!0===event.isInstancedBufferGeometry&&delete event._maxInstanceCount;info.memory.geometries--}function updateWireframeAttribute(geometry){var indices=[],geometryIndex=geometry.index,geometryPosition=geometry.attributes.position;if(null!==geometryIndex){geometryPosition=geometryIndex.array;geometryIndex=geometryIndex.version;for(var i=0,l=geometryPosition.length;i<l;i+=3){var a=geometryPosition[i+0],b=geometryPosition[i+
1],c=geometryPosition[i+2];indices.push(a,b,b,c,c,a)}}else if(void 0!==geometryPosition)for(i=geometryPosition.array,geometryIndex=geometryPosition.version,geometryPosition=0,i=i.length/3-1;geometryPosition<i;geometryPosition+=3)l=geometryPosition+0,a=geometryPosition+1,b=geometryPosition+2,indices.push(l,a,a,b,b,l);else return;indices=new (arrayNeedsUint32(indices)?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);indices.version=geometryIndex;(geometryIndex=wireframeAttributes.get(geometry))&&
attributes.remove(geometryIndex);wireframeAttributes.set(geometry,indices)}var geometries={},wireframeAttributes=new WeakMap;return{get:function(object,geometry){if(!0===geometries[geometry.id])return geometry;geometry.addEventListener("dispose",onGeometryDispose);geometries[geometry.id]=!0;info.memory.geometries++;return geometry},update:function(geometry){geometry=geometry.attributes;for(var name in geometry)attributes.update(geometry[name],gl.ARRAY_BUFFER)},getWireframeAttribute:function(geometry){var currentAttribute=
wireframeAttributes.get(geometry);if(currentAttribute){var geometryIndex=geometry.index;null!==geometryIndex&&currentAttribute.version<geometryIndex.version&&updateWireframeAttribute(geometry)}else updateWireframeAttribute(geometry);return wireframeAttributes.get(geometry)}}}function WebGLIndexedBufferRenderer(gl,extensions,info){function renderInstances(start,count,primcount){0!==primcount&&(gl.drawElementsInstanced(mode,count,type,start*bytesPerElement,primcount),info.update(count,mode,primcount))}
var mode,type,bytesPerElement;this.setMode=function(value){mode=value};this.setIndex=function(value){type=value.type;bytesPerElement=value.bytesPerElement};this.render=function(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode,1)};this.renderInstances=renderInstances;this.renderMultiDraw=function(starts,counts,drawCount){if(0!==drawCount){extensions.get("WEBGL_multi_draw").multiDrawElementsWEBGL(mode,counts,0,type,starts,0,drawCount);for(var i=starts=0;i<drawCount;i++)starts+=
counts[i];info.update(starts,mode,1)}};this.renderMultiDrawInstances=function(starts,counts,drawCount,primcount){if(0!==drawCount){var extension=extensions.get("WEBGL_multi_draw");if(null===extension)for(drawCount=0;drawCount<starts.length;drawCount++)renderInstances(starts[drawCount]/bytesPerElement,counts[drawCount],primcount[drawCount]);else{extension.multiDrawElementsInstancedWEBGL(mode,counts,0,type,starts,0,primcount,0,drawCount);for(extension=starts=0;extension<drawCount;extension++)starts+=
counts[extension]*primcount[extension];info.update(starts,mode,1)}}}}function WebGLInfo(gl){var render={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:render,programs:null,autoReset:!0,reset:function(){render.calls=0;render.triangles=0;render.points=0;render.lines=0},update:function(count,mode,instanceCount){render.calls++;switch(mode){case gl.TRIANGLES:render.triangles+=count/3*instanceCount;break;case gl.LINES:render.lines+=count/2*instanceCount;break;
case gl.LINE_STRIP:render.lines+=instanceCount*(count-1);break;case gl.LINE_LOOP:render.lines+=instanceCount*count;break;case gl.POINTS:render.points+=instanceCount*count;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",mode)}}}}function WebGLMorphtargets(gl,capabilities,textures){var morphTextures=new WeakMap,morph=new Vector4;return{update:function(object,geometry,program){var objectInfluences=object.morphTargetInfluences,morphAttribute=geometry.morphAttributes.position||geometry.morphAttributes.normal||
geometry.morphAttributes.color;morphAttribute=void 0!==morphAttribute?morphAttribute.length:0;var entry=morphTextures.get(geometry);if(void 0===entry||entry.count!==morphAttribute){var disposeTexture=function(){texture.dispose();morphTextures.delete(geometry);geometry.removeEventListener("dispose",disposeTexture)};void 0!==entry&&entry.texture.dispose();entry=void 0!==geometry.morphAttributes.position;var hasMorphNormals=void 0!==geometry.morphAttributes.normal,hasMorphColors=void 0!==geometry.morphAttributes.color,
morphTargets=geometry.morphAttributes.position||[],morphNormals=geometry.morphAttributes.normal||[],morphColors=geometry.morphAttributes.color||[],vertexDataCount=0;!0===entry&&(vertexDataCount=1);!0===hasMorphNormals&&(vertexDataCount=2);!0===hasMorphColors&&(vertexDataCount=3);var width=geometry.attributes.position.count*vertexDataCount,height=1;width>capabilities.maxTextureSize&&(height=Math.ceil(width/capabilities.maxTextureSize),width=capabilities.maxTextureSize);var buffer=new Float32Array(width*
height*4*morphAttribute),texture=new DataArrayTexture(buffer,width,height,morphAttribute);texture.type=1015;texture.needsUpdate=!0;vertexDataCount*=4;for(var i=0;i<morphAttribute;i++)for(var morphTarget=morphTargets[i],morphNormal=morphNormals[i],morphColor=morphColors[i],offset=width*height*4*i,j=0;j<morphTarget.count;j++){var stride=j*vertexDataCount;!0===entry&&(morph.fromBufferAttribute(morphTarget,j),buffer[offset+stride+0]=morph.x,buffer[offset+stride+1]=morph.y,buffer[offset+stride+2]=morph.z,
buffer[offset+stride+3]=0);!0===hasMorphNormals&&(morph.fromBufferAttribute(morphNormal,j),buffer[offset+stride+4]=morph.x,buffer[offset+stride+5]=morph.y,buffer[offset+stride+6]=morph.z,buffer[offset+stride+7]=0);!0===hasMorphColors&&(morph.fromBufferAttribute(morphColor,j),buffer[offset+stride+8]=morph.x,buffer[offset+stride+9]=morph.y,buffer[offset+stride+10]=morph.z,buffer[offset+stride+11]=4===morphColor.itemSize?morph.w:1)}entry={count:morphAttribute,texture:texture,size:new Vector2(width,height)};
morphTextures.set(geometry,entry);geometry.addEventListener("dispose",disposeTexture)}if(!0===object.isInstancedMesh&&null!==object.morphTexture)program.getUniforms().setValue(gl,"morphTexture",object.morphTexture,textures);else{for(morphAttribute=object=0;morphAttribute<objectInfluences.length;morphAttribute++)object+=objectInfluences[morphAttribute];object=geometry.morphTargetsRelative?1:1-object;program.getUniforms().setValue(gl,"morphTargetBaseInfluence",object);program.getUniforms().setValue(gl,
"morphTargetInfluences",objectInfluences)}program.getUniforms().setValue(gl,"morphTargetsTexture",entry.texture,textures);program.getUniforms().setValue(gl,"morphTargetsTextureSize",entry.size)}}}function WebGLObjects(gl,geometries,attributes,info){function onInstancedMeshDispose(event){event=event.target;event.removeEventListener("dispose",onInstancedMeshDispose);attributes.remove(event.instanceMatrix);null!==event.instanceColor&&attributes.remove(event.instanceColor)}var updateMap=new WeakMap;return{update:function(object){var frame=
info.render.frame,buffergeometry=geometries.get(object,object.geometry);updateMap.get(buffergeometry)!==frame&&(geometries.update(buffergeometry),updateMap.set(buffergeometry,frame));object.isInstancedMesh&&(!1===object.hasEventListener("dispose",onInstancedMeshDispose)&&object.addEventListener("dispose",onInstancedMeshDispose),updateMap.get(object)!==frame&&(attributes.update(object.instanceMatrix,gl.ARRAY_BUFFER),null!==object.instanceColor&&attributes.update(object.instanceColor,gl.ARRAY_BUFFER),
updateMap.set(object,frame)));object.isSkinnedMesh&&(object=object.skeleton,updateMap.get(object)!==frame&&(object.update(),updateMap.set(object,frame)));return buffergeometry},dispose:function(){updateMap=new WeakMap}}}function flatten(array,nBlocks,blockSize){var firstElem=array[0];if(0>=firstElem||0<firstElem)return array;var n=nBlocks*blockSize,r=arrayCacheF32[n];void 0===r&&(r=new Float32Array(n),arrayCacheF32[n]=r);if(0!==nBlocks)for(firstElem.toArray(r,0),firstElem=1,n=0;firstElem!==nBlocks;++firstElem)n+=
blockSize,array[firstElem].toArray(r,n);return r}function arraysEqual(a,b){if(a.length!==b.length)return!1;for(var i=0,l=a.length;i<l;i++)if(a[i]!==b[i])return!1;return!0}function copyArray(a,b){for(var i=0,l=b.length;i<l;i++)a[i]=b[i]}function allocTexUnits(textures,n){var r=arrayCacheI32[n];void 0===r&&(r=new Int32Array(n),arrayCacheI32[n]=r);for(var i=0;i!==n;++i)r[i]=textures.allocateTextureUnit();return r}function setValueV1f(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1f(this.addr,v),
cache[0]=v)}function setValueV2f(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y)gl.uniform2f(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y}else arraysEqual(cache,v)||(gl.uniform2fv(this.addr,v),copyArray(cache,v))}function setValueV3f(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z)gl.uniform3f(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z}else if(void 0!==v.r){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==
v.b)gl.uniform3f(this.addr,v.r,v.g,v.b),cache[0]=v.r,cache[1]=v.g,cache[2]=v.b}else arraysEqual(cache,v)||(gl.uniform3fv(this.addr,v),copyArray(cache,v))}function setValueV4f(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w)gl.uniform4f(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w}else arraysEqual(cache,v)||(gl.uniform4fv(this.addr,v),copyArray(cache,v))}function setValueM2(gl,v){var cache=this.cache,elements=
v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix2fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat2array.set(elements),gl.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(cache,elements))}function setValueM3(gl,v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix3fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat3array.set(elements),gl.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(cache,
elements))}function setValueM4(gl,v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix4fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat4array.set(elements),gl.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(cache,elements))}function setValueV1i(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1i(this.addr,v),cache[0]=v)}function setValueV2i(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y)gl.uniform2i(this.addr,
v.x,v.y),cache[0]=v.x,cache[1]=v.y}else arraysEqual(cache,v)||(gl.uniform2iv(this.addr,v),copyArray(cache,v))}function setValueV3i(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z)gl.uniform3i(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z}else arraysEqual(cache,v)||(gl.uniform3iv(this.addr,v),copyArray(cache,v))}function setValueV4i(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==
v.w)gl.uniform4i(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w}else arraysEqual(cache,v)||(gl.uniform4iv(this.addr,v),copyArray(cache,v))}function setValueV1ui(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1ui(this.addr,v),cache[0]=v)}function setValueV2ui(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y)gl.uniform2ui(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y}else arraysEqual(cache,v)||(gl.uniform2uiv(this.addr,v),copyArray(cache,
v))}function setValueV3ui(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z)gl.uniform3ui(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z}else arraysEqual(cache,v)||(gl.uniform3uiv(this.addr,v),copyArray(cache,v))}function setValueV4ui(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w)gl.uniform4ui(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w}else arraysEqual(cache,
v)||(gl.uniform4uiv(this.addr,v),copyArray(cache,v))}function setValueT1(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);this.type===gl.SAMPLER_2D_SHADOW?(emptyShadowTexture.compareFunction=515,gl=emptyShadowTexture):gl=emptyTexture;textures.setTexture2D(v||gl,unit)}function setValueT3D1(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=
unit);textures.setTexture3D(v||empty3dTexture,unit)}function setValueT6(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);textures.setTextureCube(v||emptyCubeTexture,unit)}function setValueT2DArray1(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);textures.setTexture2DArray(v||emptyArrayTexture,unit)}function getSingularSetter(type){switch(type){case 5126:return setValueV1f;
case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 36294:return setValueV2ui;case 36295:return setValueV3ui;case 36296:return setValueV4ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;
case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v)}function setValueV2fArray(gl,v){v=flatten(v,this.size,2);gl.uniform2fv(this.addr,v)}function setValueV3fArray(gl,v){v=flatten(v,this.size,3);gl.uniform3fv(this.addr,v)}function setValueV4fArray(gl,v){v=flatten(v,this.size,4);gl.uniform4fv(this.addr,v)}function setValueM2Array(gl,
v){v=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,!1,v)}function setValueM3Array(gl,v){v=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,!1,v)}function setValueM4Array(gl,v){v=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,!1,v)}function setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v)}function setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v)}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v)}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v)}function setValueV1uiArray(gl,
v){gl.uniform1uiv(this.addr,v)}function setValueV2uiArray(gl,v){gl.uniform2uiv(this.addr,v)}function setValueV3uiArray(gl,v){gl.uniform3uiv(this.addr,v)}function setValueV4uiArray(gl,v){gl.uniform4uiv(this.addr,v)}function setValueT1Array(gl,v,textures){var cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(gl=0;gl!==n;++gl)textures.setTexture2D(v[gl]||emptyTexture,units[gl])}function setValueT3DArray(gl,
v,textures){var cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(gl=0;gl!==n;++gl)textures.setTexture3D(v[gl]||empty3dTexture,units[gl])}function setValueT6Array(gl,v,textures){var cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(gl=0;gl!==n;++gl)textures.setTextureCube(v[gl]||emptyCubeTexture,units[gl])}function setValueT2DArrayArray(gl,
v,textures){var cache=this.cache,n=v.length,units=allocTexUnits(textures,n);arraysEqual(cache,units)||(gl.uniform1iv(this.addr,units),copyArray(cache,units));for(gl=0;gl!==n;++gl)textures.setTexture2DArray(v[gl]||emptyArrayTexture,units[gl])}function getPureArraySetter(type){switch(type){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;
case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 5125:return setValueV1uiArray;case 36294:return setValueV2uiArray;case 36295:return setValueV3uiArray;case 36296:return setValueV4uiArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35679:case 36299:case 36307:return setValueT3DArray;case 35680:case 36300:case 36308:case 36293:return setValueT6Array;
case 36289:case 36303:case 36311:case 36292:return setValueT2DArrayArray}}function WebGLShader(gl,type,string){type=gl.createShader(type);gl.shaderSource(type,string);gl.compileShader(type);return type}function getEncodingComponents(colorSpace){ColorManagement._getMatrix(_m0,ColorManagement.workingColorSpace,colorSpace);var encodingMatrix="mat3( "+_m0.elements.map(function(v){return v.toFixed(4)})+" )";switch(ColorManagement.getTransfer(colorSpace)){case "linear":return[encodingMatrix,"LinearTransferOETF"];
case "srgb":return[encodingMatrix,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",colorSpace),[encodingMatrix,"LinearTransferOETF"]}}function getShaderErrors(gl,shader,type){var status=gl.getShaderParameter(shader,gl.COMPILE_STATUS),errors=(gl.getShaderInfoLog(shader)||"").trim();if(status&&""===errors)return"";if(status=/ERROR: 0:(\d+)/.exec(errors)){status=parseInt(status[1]);type=type.toUpperCase()+"\n\n"+errors+"\n\n";gl=gl.getShaderSource(shader).split("\n");
shader=[];errors=Math.min(status+6,gl.length);for(var i=Math.max(status-6,0);i<errors;i++){var line=i+1;shader.push((line===status?"\x3e":" ")+" "+line+": "+gl[i])}status=shader.join("\n");return type+status}return errors}function getTexelEncodingFunction(functionName,colorSpace){colorSpace=getEncodingComponents(colorSpace);return["vec4 "+functionName+"( vec4 value ) {","\treturn "+colorSpace[1]+"( vec4( value.rgb * "+colorSpace[0]+", value.a ) );","}"].join("\n")}function getToneMappingFunction(functionName,
toneMapping){switch(toneMapping){case 1:toneMapping="Linear";break;case 2:toneMapping="Reinhard";break;case 3:toneMapping="Cineon";break;case 4:toneMapping="ACESFilmic";break;case 6:toneMapping="AgX";break;case 7:toneMapping="Neutral";break;case 5:toneMapping="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",toneMapping),toneMapping="Linear"}return"vec3 "+functionName+"( vec3 color ) { return "+toneMapping+"ToneMapping( color ); }"}function getLuminanceFunction(){ColorManagement.getLuminanceCoefficients(_v0);
var r=_v0.x.toFixed(4),g=_v0.y.toFixed(4),b=_v0.z.toFixed(4);return["float luminance( const in vec3 rgb ) {","\tconst vec3 weights \x3d vec3( "+r+", "+g+", "+b+" );","\treturn dot( weights, rgb );\n}"].join("\n")}function generateDefines(defines){var chunks=[],name;for(name in defines){var value=defines[name];!1!==value&&chunks.push("#define "+name+" "+value)}return chunks.join("\n")}function filterEmptyLine(string){return""!==string}function replaceLightNums(string,parameters){var numSpotLightCoords=
parameters.numSpotLightShadows+parameters.numSpotLightMaps-parameters.numSpotLightShadowsWithMaps;return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,parameters.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,numSpotLightCoords).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,
parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,parameters.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows)}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection)}function includeReplacer(match,
include){match=ShaderChunk[include];if(void 0===match){var newInclude=shaderChunkMap.get(include);if(void 0!==newInclude)match=ShaderChunk[newInclude],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',include,newInclude);else throw Error("Can not resolve #include \x3c"+include+"\x3e");}return match.replace(includePattern,includeReplacer)}function loopReplacer(match,start,end,snippet){match="";for(start=parseInt(start);start<parseInt(end);start++)match+=snippet.replace(/\[\s*i\s*\]/g,
"[ "+start+" ]").replace(/UNROLLED_LOOP_INDEX/g,start);return match}function generatePrecision(parameters){var precisionstring="precision "+parameters.precision+" float;\n\tprecision "+parameters.precision+" int;\n\tprecision "+parameters.precision+" sampler2D;\n\tprecision "+parameters.precision+" samplerCube;\n\tprecision "+parameters.precision+" sampler3D;\n\tprecision "+parameters.precision+" sampler2DArray;\n\tprecision "+parameters.precision+" sampler2DShadow;\n\tprecision "+parameters.precision+
" samplerCubeShadow;\n\tprecision "+parameters.precision+" sampler2DArrayShadow;\n\tprecision "+parameters.precision+" isampler2D;\n\tprecision "+parameters.precision+" isampler3D;\n\tprecision "+parameters.precision+" isamplerCube;\n\tprecision "+parameters.precision+" isampler2DArray;\n\tprecision "+parameters.precision+" usampler2D;\n\tprecision "+parameters.precision+" usampler3D;\n\tprecision "+parameters.precision+" usamplerCube;\n\tprecision "+parameters.precision+" usampler2DArray;\n\t";"highp"===
parameters.precision?precisionstring+="\n#define HIGH_PRECISION":"mediump"===parameters.precision?precisionstring+="\n#define MEDIUM_PRECISION":"lowp"===parameters.precision&&(precisionstring+="\n#define LOW_PRECISION");return precisionstring}function generateShadowMapTypeDefine(parameters){var shadowMapTypeDefine="SHADOWMAP_TYPE_BASIC";1===parameters.shadowMapType?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF":2===parameters.shadowMapType?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF_SOFT":3===parameters.shadowMapType&&
(shadowMapTypeDefine="SHADOWMAP_TYPE_VSM");return shadowMapTypeDefine}function generateEnvMapTypeDefine(parameters){var envMapTypeDefine="ENVMAP_TYPE_CUBE";if(parameters.envMap)switch(parameters.envMapMode){case 301:case 302:envMapTypeDefine="ENVMAP_TYPE_CUBE";break;case 306:envMapTypeDefine="ENVMAP_TYPE_CUBE_UV"}return envMapTypeDefine}function generateEnvMapModeDefine(parameters){var envMapModeDefine="ENVMAP_MODE_REFLECTION";if(parameters.envMap)switch(parameters.envMapMode){case 302:envMapModeDefine=
"ENVMAP_MODE_REFRACTION"}return envMapModeDefine}function generateEnvMapBlendingDefine(parameters){var envMapBlendingDefine="ENVMAP_BLENDING_NONE";if(parameters.envMap)switch(parameters.combine){case 0:envMapBlendingDefine="ENVMAP_BLENDING_MULTIPLY";break;case 1:envMapBlendingDefine="ENVMAP_BLENDING_MIX";break;case 2:envMapBlendingDefine="ENVMAP_BLENDING_ADD"}return envMapBlendingDefine}function generateCubeUVSize(parameters){parameters=parameters.envMapCubeUVHeight;if(null===parameters)return null;
var maxMip=Math.log2(parameters)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,maxMip),112)),texelHeight:1/parameters,maxMip:maxMip}}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){function onFirstUse(self){if(renderer.debug.checkShaderErrors){var programInfoLog=gl.getProgramInfoLog(program)||"",vertexShaderInfoLog=gl.getShaderInfoLog(glVertexShader)||"",fragmentShaderInfoLog=gl.getShaderInfoLog(glFragmentShader)||"";programInfoLog=programInfoLog.trim();vertexShaderInfoLog=vertexShaderInfoLog.trim();
fragmentShaderInfoLog=fragmentShaderInfoLog.trim();var runnable=!0,haveDiagnostics=!0;if(!1===gl.getProgramParameter(program,gl.LINK_STATUS))if(runnable=!1,"function"===typeof renderer.debug.onShaderError)renderer.debug.onShaderError(gl,program,glVertexShader,glFragmentShader);else{var vertexErrors=getShaderErrors(gl,glVertexShader,"vertex"),fragmentErrors=getShaderErrors(gl,glFragmentShader,"fragment");console.error("THREE.WebGLProgram: Shader Error "+gl.getError()+" - VALIDATE_STATUS "+gl.getProgramParameter(program,
gl.VALIDATE_STATUS)+"\n\nMaterial Name: "+self.name+"\nMaterial Type: "+self.type+"\n\nProgram Info Log: "+programInfoLog+"\n"+vertexErrors+"\n"+fragmentErrors)}else if(""!==programInfoLog)console.warn("THREE.WebGLProgram: Program Info Log:",programInfoLog);else if(""===vertexShaderInfoLog||""===fragmentShaderInfoLog)haveDiagnostics=!1;haveDiagnostics&&(self.diagnostics={runnable:runnable,programLog:programInfoLog,vertexShader:{log:vertexShaderInfoLog,prefix:prefixVertex},fragmentShader:{log:fragmentShaderInfoLog,
prefix:prefixFragment}})}gl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);cachedUniforms=new WebGLUniforms(gl,program);self={};programInfoLog=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);for(vertexShaderInfoLog=0;vertexShaderInfoLog<programInfoLog;vertexShaderInfoLog++)fragmentShaderInfoLog=gl.getActiveAttrib(program,vertexShaderInfoLog),runnable=fragmentShaderInfoLog.name,haveDiagnostics=1,fragmentShaderInfoLog.type===gl.FLOAT_MAT2&&(haveDiagnostics=2),fragmentShaderInfoLog.type===
gl.FLOAT_MAT3&&(haveDiagnostics=3),fragmentShaderInfoLog.type===gl.FLOAT_MAT4&&(haveDiagnostics=4),self[runnable]={type:fragmentShaderInfoLog.type,location:gl.getAttribLocation(program,runnable),locationSize:haveDiagnostics};cachedAttributes=self}var gl=renderer.getContext(),defines=parameters.defines,vertexShader=parameters.vertexShader,fragmentShader=parameters.fragmentShader,shadowMapTypeDefine=generateShadowMapTypeDefine(parameters),envMapTypeDefine=generateEnvMapTypeDefine(parameters),envMapModeDefine=
generateEnvMapModeDefine(parameters),envMapBlendingDefine=generateEnvMapBlendingDefine(parameters),envMapCubeUVSize=generateCubeUVSize(parameters),customVertexExtensions=[parameters.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",parameters.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(filterEmptyLine).join("\n"),customDefines=generateDefines(defines),program=gl.createProgram();defines=parameters.glslVersion?"#version "+parameters.glslVersion+
"\n":"";if(parameters.isRawShaderMaterial){var prefixVertex=["#define SHADER_TYPE "+parameters.shaderType,"#define SHADER_NAME "+parameters.shaderName,customDefines].filter(filterEmptyLine).join("\n");0<prefixVertex.length&&(prefixVertex+="\n");var prefixFragment=["#define SHADER_TYPE "+parameters.shaderType,"#define SHADER_NAME "+parameters.shaderName,customDefines].filter(filterEmptyLine).join("\n");0<prefixFragment.length&&(prefixFragment+="\n")}else prefixVertex=[generatePrecision(parameters),
"#define SHADER_TYPE "+parameters.shaderType,"#define SHADER_NAME "+parameters.shaderName,customDefines,parameters.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",parameters.batching?"#define USE_BATCHING":"",parameters.batchingColor?"#define USE_BATCHING_COLOR":"",parameters.instancing?"#define USE_INSTANCING":"",parameters.instancingColor?"#define USE_INSTANCING_COLOR":"",parameters.instancingMorph?"#define USE_INSTANCING_MORPH":"",parameters.useFog&&parameters.fog?"#define USE_FOG":"",
parameters.useFog&&parameters.fogExp2?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?"#define USE_AOMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",parameters.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":
"",parameters.displacementMap?"#define USE_DISPLACEMENTMAP":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.anisotropy?"#define USE_ANISOTROPY":"",parameters.anisotropyMap?"#define USE_ANISOTROPYMAP":"",parameters.clearcoatMap?"#define USE_CLEARCOATMAP":"",parameters.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",parameters.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",parameters.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",parameters.iridescenceThicknessMap?
"#define USE_IRIDESCENCE_THICKNESSMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",parameters.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.alphaHash?"#define USE_ALPHAHASH":"",parameters.transmission?"#define USE_TRANSMISSION":"",parameters.transmissionMap?
"#define USE_TRANSMISSIONMAP":"",parameters.thicknessMap?"#define USE_THICKNESSMAP":"",parameters.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",parameters.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",parameters.mapUv?"#define MAP_UV "+parameters.mapUv:"",parameters.alphaMapUv?"#define ALPHAMAP_UV "+parameters.alphaMapUv:"",parameters.lightMapUv?"#define LIGHTMAP_UV "+parameters.lightMapUv:"",parameters.aoMapUv?"#define AOMAP_UV "+parameters.aoMapUv:"",parameters.emissiveMapUv?"#define EMISSIVEMAP_UV "+
parameters.emissiveMapUv:"",parameters.bumpMapUv?"#define BUMPMAP_UV "+parameters.bumpMapUv:"",parameters.normalMapUv?"#define NORMALMAP_UV "+parameters.normalMapUv:"",parameters.displacementMapUv?"#define DISPLACEMENTMAP_UV "+parameters.displacementMapUv:"",parameters.metalnessMapUv?"#define METALNESSMAP_UV "+parameters.metalnessMapUv:"",parameters.roughnessMapUv?"#define ROUGHNESSMAP_UV "+parameters.roughnessMapUv:"",parameters.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+parameters.anisotropyMapUv:
"",parameters.clearcoatMapUv?"#define CLEARCOATMAP_UV "+parameters.clearcoatMapUv:"",parameters.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+parameters.clearcoatNormalMapUv:"",parameters.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+parameters.clearcoatRoughnessMapUv:"",parameters.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+parameters.iridescenceMapUv:"",parameters.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+parameters.iridescenceThicknessMapUv:"",parameters.sheenColorMapUv?
"#define SHEEN_COLORMAP_UV "+parameters.sheenColorMapUv:"",parameters.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+parameters.sheenRoughnessMapUv:"",parameters.specularMapUv?"#define SPECULARMAP_UV "+parameters.specularMapUv:"",parameters.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+parameters.specularColorMapUv:"",parameters.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+parameters.specularIntensityMapUv:"",parameters.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+parameters.transmissionMapUv:
"",parameters.thicknessMapUv?"#define THICKNESSMAP_UV "+parameters.thicknessMapUv:"",parameters.vertexTangents&&!1===parameters.flatShading?"#define USE_TANGENT":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.vertexAlphas?"#define USE_COLOR_ALPHA":"",parameters.vertexUv1s?"#define USE_UV1":"",parameters.vertexUv2s?"#define USE_UV2":"",parameters.vertexUv3s?"#define USE_UV3":"",parameters.pointsUvs?"#define USE_POINTS_UV":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.skinning?
"#define USE_SKINNING":"",parameters.morphTargets?"#define USE_MORPHTARGETS":"",parameters.morphNormals&&!1===parameters.flatShading?"#define USE_MORPHNORMALS":"",parameters.morphColors?"#define USE_MORPHCOLORS":"",0<parameters.morphTargetsCount?"#define MORPHTARGETS_TEXTURE_STRIDE "+parameters.morphTextureStride:"",0<parameters.morphTargetsCount?"#define MORPHTARGETS_COUNT "+parameters.morphTargetsCount:"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":
"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"",0<parameters.numLightProbes?"#define USE_LIGHT_PROBES":"",parameters.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",parameters.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;",
"uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;",
"#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),prefixFragment=[generatePrecision(parameters),"#define SHADER_TYPE "+parameters.shaderType,"#define SHADER_NAME "+parameters.shaderName,customDefines,parameters.useFog&&parameters.fog?
"#define USE_FOG":"",parameters.useFog&&parameters.fogExp2?"#define FOG_EXP2":"",parameters.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",parameters.map?"#define USE_MAP":"",parameters.matcap?"#define USE_MATCAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapTypeDefine:"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.envMap?"#define "+envMapBlendingDefine:"",envMapCubeUVSize?"#define CUBEUV_TEXEL_WIDTH "+envMapCubeUVSize.texelWidth:"",envMapCubeUVSize?
"#define CUBEUV_TEXEL_HEIGHT "+envMapCubeUVSize.texelHeight:"",envMapCubeUVSize?"#define CUBEUV_MAX_MIP "+envMapCubeUVSize.maxMip+".0":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?"#define USE_AOMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",parameters.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":
"",parameters.anisotropy?"#define USE_ANISOTROPY":"",parameters.anisotropyMap?"#define USE_ANISOTROPYMAP":"",parameters.clearcoat?"#define USE_CLEARCOAT":"",parameters.clearcoatMap?"#define USE_CLEARCOATMAP":"",parameters.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",parameters.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",parameters.dispersion?"#define USE_DISPERSION":"",parameters.iridescence?"#define USE_IRIDESCENCE":"",parameters.iridescenceMap?"#define USE_IRIDESCENCEMAP":
"",parameters.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",parameters.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.alphaTest?"#define USE_ALPHATEST":"",parameters.alphaHash?"#define USE_ALPHAHASH":
"",parameters.sheen?"#define USE_SHEEN":"",parameters.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",parameters.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",parameters.transmission?"#define USE_TRANSMISSION":"",parameters.transmissionMap?"#define USE_TRANSMISSIONMAP":"",parameters.thicknessMap?"#define USE_THICKNESSMAP":"",parameters.vertexTangents&&!1===parameters.flatShading?"#define USE_TANGENT":"",parameters.vertexColors||parameters.instancingColor||parameters.batchingColor?"#define USE_COLOR":
"",parameters.vertexAlphas?"#define USE_COLOR_ALPHA":"",parameters.vertexUv1s?"#define USE_UV1":"",parameters.vertexUv2s?"#define USE_UV2":"",parameters.vertexUv3s?"#define USE_UV3":"",parameters.pointsUvs?"#define USE_POINTS_UV":"",parameters.gradientMap?"#define USE_GRADIENTMAP":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?
"#define "+shadowMapTypeDefine:"",parameters.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",0<parameters.numLightProbes?"#define USE_LIGHT_PROBES":"",parameters.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",parameters.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",parameters.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",parameters.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",
"uniform bool isOrthographic;",0!==parameters.toneMapping?"#define TONE_MAPPING":"",0!==parameters.toneMapping?ShaderChunk.tonemapping_pars_fragment:"",0!==parameters.toneMapping?getToneMappingFunction("toneMapping",parameters.toneMapping):"",parameters.dithering?"#define DITHERING":"",parameters.opaque?"#define OPAQUE":"",ShaderChunk.colorspace_pars_fragment,getTexelEncodingFunction("linearToOutputTexel",parameters.outputColorSpace),getLuminanceFunction(),parameters.useDepthPacking?"#define DEPTH_PACKING "+
parameters.depthPacking:"","\n"].filter(filterEmptyLine).join("\n");vertexShader=vertexShader.replace(includePattern,includeReplacer);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=fragmentShader.replace(includePattern,includeReplacer);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=vertexShader.replace(unrollLoopPattern,loopReplacer);
fragmentShader=fragmentShader.replace(unrollLoopPattern,loopReplacer);!0!==parameters.isRawShaderMaterial&&(defines="#version 300 es\n",prefixVertex=[customVertexExtensions,"#define attribute in\n#define varying out\n#define texture2D texture"].join("\n")+"\n"+prefixVertex,prefixFragment=["#define varying in","300 es"===parameters.glslVersion?"":"layout(location \x3d 0) out highp vec4 pc_fragColor;","300 es"===parameters.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+
"\n"+prefixFragment);fragmentShader=defines+prefixFragment+fragmentShader;var glVertexShader=WebGLShader(gl,gl.VERTEX_SHADER,defines+prefixVertex+vertexShader),glFragmentShader=WebGLShader(gl,gl.FRAGMENT_SHADER,fragmentShader);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);void 0!==parameters.index0AttributeName?gl.bindAttribLocation(program,0,parameters.index0AttributeName):!0===parameters.morphTargets&&gl.bindAttribLocation(program,0,"position");gl.linkProgram(program);
var cachedUniforms;this.getUniforms=function(){void 0===cachedUniforms&&onFirstUse(this);return cachedUniforms};var cachedAttributes;this.getAttributes=function(){void 0===cachedAttributes&&onFirstUse(this);return cachedAttributes};var programReady=!1===parameters.rendererExtensionParallelShaderCompile;this.isReady=function(){!1===programReady&&(programReady=gl.getProgramParameter(program,37297));return programReady};this.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);
this.program=void 0};this.type=parameters.shaderType;this.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this}function WebGLPrograms(renderer,cubemaps,cubeuvmaps,extensions,capabilities,bindingStates,clipping){function getChannel(value){_activeChannels.add(value);return 0===value?"uv":"uv"+value}var _programLayers=new Layers,_customShaders=new WebGLShaderCache,
_activeChannels=new Set,programs=[],logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer,SUPPORTS_VERTEX_TEXTURES=capabilities.vertexTextures,precision=capabilities.precision,shaderIDs={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",
LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(material,lights,shadows,scene,object){var fog=scene.fog,geometry=object.geometry;scene=material.isMeshStandardMaterial?scene.environment:null;var envMapCubeUVHeight=(scene=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||scene))&&306===scene.mapping?scene.image.height:null,shaderID=shaderIDs[material.type];null!==material.precision&&(precision=
capabilities.getMaxPrecision(material.precision),precision!==material.precision&&console.warn("THREE.WebGLProgram.getParameters:",material.precision,"not supported, using",precision,"instead."));var morphAttribute=geometry.morphAttributes.position||geometry.morphAttributes.normal||geometry.morphAttributes.color;morphAttribute=void 0!==morphAttribute?morphAttribute.length:0;var morphTextureStride=0;void 0!==geometry.morphAttributes.position&&(morphTextureStride=1);void 0!==geometry.morphAttributes.normal&&
(morphTextureStride=2);void 0!==geometry.morphAttributes.color&&(morphTextureStride=3);if(shaderID){var fragmentShader=ShaderLib[shaderID];var vertexShader=fragmentShader.vertexShader;fragmentShader=fragmentShader.fragmentShader}else{vertexShader=material.vertexShader;fragmentShader=material.fragmentShader;_customShaders.update(material);var customVertexShaderID=_customShaders.getVertexShaderID(material);var customFragmentShaderID=_customShaders.getFragmentShaderID(material)}var currentRenderTarget=
renderer.getRenderTarget(),reversedDepthBuffer=renderer.state.buffers.depth.getReversed(),IS_INSTANCEDMESH=!0===object.isInstancedMesh,IS_BATCHEDMESH=!0===object.isBatchedMesh,HAS_MAP=!!material.map,HAS_MATCAP=!!material.matcap,HAS_ENVMAP=!!scene,HAS_AOMAP=!!material.aoMap,HAS_LIGHTMAP=!!material.lightMap,HAS_BUMPMAP=!!material.bumpMap,HAS_NORMALMAP=!!material.normalMap,HAS_DISPLACEMENTMAP=!!material.displacementMap,HAS_EMISSIVEMAP=!!material.emissiveMap,HAS_METALNESSMAP=!!material.metalnessMap,HAS_ROUGHNESSMAP=
!!material.roughnessMap,HAS_ANISOTROPY=0<material.anisotropy,HAS_CLEARCOAT=0<material.clearcoat,HAS_DISPERSION=0<material.dispersion,HAS_IRIDESCENCE=0<material.iridescence,HAS_SHEEN=0<material.sheen,HAS_TRANSMISSION=0<material.transmission,HAS_ANISOTROPYMAP=HAS_ANISOTROPY&&!!material.anisotropyMap,HAS_CLEARCOATMAP=HAS_CLEARCOAT&&!!material.clearcoatMap,HAS_CLEARCOAT_NORMALMAP=HAS_CLEARCOAT&&!!material.clearcoatNormalMap,HAS_CLEARCOAT_ROUGHNESSMAP=HAS_CLEARCOAT&&!!material.clearcoatRoughnessMap,HAS_IRIDESCENCEMAP=
HAS_IRIDESCENCE&&!!material.iridescenceMap,HAS_IRIDESCENCE_THICKNESSMAP=HAS_IRIDESCENCE&&!!material.iridescenceThicknessMap,HAS_SHEEN_COLORMAP=HAS_SHEEN&&!!material.sheenColorMap,HAS_SHEEN_ROUGHNESSMAP=HAS_SHEEN&&!!material.sheenRoughnessMap,HAS_SPECULARMAP=!!material.specularMap,HAS_SPECULAR_COLORMAP=!!material.specularColorMap,HAS_SPECULAR_INTENSITYMAP=!!material.specularIntensityMap,HAS_TRANSMISSIONMAP=HAS_TRANSMISSION&&!!material.transmissionMap,HAS_THICKNESSMAP=HAS_TRANSMISSION&&!!material.thicknessMap,
HAS_GRADIENTMAP=!!material.gradientMap,HAS_ALPHAMAP=!!material.alphaMap,HAS_ALPHATEST=0<material.alphaTest,HAS_ALPHAHASH=!!material.alphaHash,HAS_EXTENSIONS=!!material.extensions,toneMapping=0;!material.toneMapped||null!==currentRenderTarget&&!0!==currentRenderTarget.isXRRenderTarget||(toneMapping=renderer.toneMapping);material={shaderID:shaderID,shaderType:material.type,shaderName:material.name,vertexShader:vertexShader,fragmentShader:fragmentShader,defines:material.defines,customVertexShaderID:customVertexShaderID,
customFragmentShaderID:customFragmentShaderID,isRawShaderMaterial:!0===material.isRawShaderMaterial,glslVersion:material.glslVersion,precision:precision,batching:IS_BATCHEDMESH,batchingColor:IS_BATCHEDMESH&&null!==object._colorsTexture,instancing:IS_INSTANCEDMESH,instancingColor:IS_INSTANCEDMESH&&null!==object.instanceColor,instancingMorph:IS_INSTANCEDMESH&&null!==object.morphTexture,supportsVertexTextures:SUPPORTS_VERTEX_TEXTURES,outputColorSpace:null===currentRenderTarget?renderer.outputColorSpace:
!0===currentRenderTarget.isXRRenderTarget?currentRenderTarget.texture.colorSpace:"srgb-linear",alphaToCoverage:!!material.alphaToCoverage,map:HAS_MAP,matcap:HAS_MATCAP,envMap:HAS_ENVMAP,envMapMode:HAS_ENVMAP&&scene.mapping,envMapCubeUVHeight:envMapCubeUVHeight,aoMap:HAS_AOMAP,lightMap:HAS_LIGHTMAP,bumpMap:HAS_BUMPMAP,normalMap:HAS_NORMALMAP,displacementMap:SUPPORTS_VERTEX_TEXTURES&&HAS_DISPLACEMENTMAP,emissiveMap:HAS_EMISSIVEMAP,normalMapObjectSpace:HAS_NORMALMAP&&1===material.normalMapType,normalMapTangentSpace:HAS_NORMALMAP&&
0===material.normalMapType,metalnessMap:HAS_METALNESSMAP,roughnessMap:HAS_ROUGHNESSMAP,anisotropy:HAS_ANISOTROPY,anisotropyMap:HAS_ANISOTROPYMAP,clearcoat:HAS_CLEARCOAT,clearcoatMap:HAS_CLEARCOATMAP,clearcoatNormalMap:HAS_CLEARCOAT_NORMALMAP,clearcoatRoughnessMap:HAS_CLEARCOAT_ROUGHNESSMAP,dispersion:HAS_DISPERSION,iridescence:HAS_IRIDESCENCE,iridescenceMap:HAS_IRIDESCENCEMAP,iridescenceThicknessMap:HAS_IRIDESCENCE_THICKNESSMAP,sheen:HAS_SHEEN,sheenColorMap:HAS_SHEEN_COLORMAP,sheenRoughnessMap:HAS_SHEEN_ROUGHNESSMAP,
specularMap:HAS_SPECULARMAP,specularColorMap:HAS_SPECULAR_COLORMAP,specularIntensityMap:HAS_SPECULAR_INTENSITYMAP,transmission:HAS_TRANSMISSION,transmissionMap:HAS_TRANSMISSIONMAP,thicknessMap:HAS_THICKNESSMAP,gradientMap:HAS_GRADIENTMAP,opaque:!1===material.transparent&&1===material.blending&&!1===material.alphaToCoverage,alphaMap:HAS_ALPHAMAP,alphaTest:HAS_ALPHATEST,alphaHash:HAS_ALPHAHASH,combine:material.combine,mapUv:HAS_MAP&&getChannel(material.map.channel),aoMapUv:HAS_AOMAP&&getChannel(material.aoMap.channel),
lightMapUv:HAS_LIGHTMAP&&getChannel(material.lightMap.channel),bumpMapUv:HAS_BUMPMAP&&getChannel(material.bumpMap.channel),normalMapUv:HAS_NORMALMAP&&getChannel(material.normalMap.channel),displacementMapUv:HAS_DISPLACEMENTMAP&&getChannel(material.displacementMap.channel),emissiveMapUv:HAS_EMISSIVEMAP&&getChannel(material.emissiveMap.channel),metalnessMapUv:HAS_METALNESSMAP&&getChannel(material.metalnessMap.channel),roughnessMapUv:HAS_ROUGHNESSMAP&&getChannel(material.roughnessMap.channel),anisotropyMapUv:HAS_ANISOTROPYMAP&&
getChannel(material.anisotropyMap.channel),clearcoatMapUv:HAS_CLEARCOATMAP&&getChannel(material.clearcoatMap.channel),clearcoatNormalMapUv:HAS_CLEARCOAT_NORMALMAP&&getChannel(material.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:HAS_CLEARCOAT_ROUGHNESSMAP&&getChannel(material.clearcoatRoughnessMap.channel),iridescenceMapUv:HAS_IRIDESCENCEMAP&&getChannel(material.iridescenceMap.channel),iridescenceThicknessMapUv:HAS_IRIDESCENCE_THICKNESSMAP&&getChannel(material.iridescenceThicknessMap.channel),
sheenColorMapUv:HAS_SHEEN_COLORMAP&&getChannel(material.sheenColorMap.channel),sheenRoughnessMapUv:HAS_SHEEN_ROUGHNESSMAP&&getChannel(material.sheenRoughnessMap.channel),specularMapUv:HAS_SPECULARMAP&&getChannel(material.specularMap.channel),specularColorMapUv:HAS_SPECULAR_COLORMAP&&getChannel(material.specularColorMap.channel),specularIntensityMapUv:HAS_SPECULAR_INTENSITYMAP&&getChannel(material.specularIntensityMap.channel),transmissionMapUv:HAS_TRANSMISSIONMAP&&getChannel(material.transmissionMap.channel),
thicknessMapUv:HAS_THICKNESSMAP&&getChannel(material.thicknessMap.channel),alphaMapUv:HAS_ALPHAMAP&&getChannel(material.alphaMap.channel),vertexTangents:!!geometry.attributes.tangent&&(HAS_NORMALMAP||HAS_ANISOTROPY),vertexColors:material.vertexColors,vertexAlphas:!0===material.vertexColors&&!!geometry.attributes.color&&4===geometry.attributes.color.itemSize,pointsUvs:!0===object.isPoints&&!!geometry.attributes.uv&&(HAS_MAP||HAS_ALPHAMAP),fog:!!fog,useFog:!0===material.fog,fogExp2:!!fog&&fog.isFogExp2,
flatShading:!0===material.flatShading&&!1===material.wireframe,sizeAttenuation:!0===material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,reversedDepthBuffer:reversedDepthBuffer,skinning:!0===object.isSkinnedMesh,morphTargets:void 0!==geometry.morphAttributes.position,morphNormals:void 0!==geometry.morphAttributes.normal,morphColors:void 0!==geometry.morphAttributes.color,morphTargetsCount:morphAttribute,morphTextureStride:morphTextureStride,numDirLights:lights.directional.length,
numPointLights:lights.point.length,numSpotLights:lights.spot.length,numSpotLightMaps:lights.spotLightMap.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numSpotLightShadowsWithMaps:lights.numSpotLightShadowsWithMaps,numLightProbes:lights.numLightProbes,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,
dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&0<shadows.length,shadowMapType:renderer.shadowMap.type,toneMapping:toneMapping,decodeVideoTexture:HAS_MAP&&!0===material.map.isVideoTexture&&"srgb"===ColorManagement.getTransfer(material.map.colorSpace),decodeVideoTextureEmissive:HAS_EMISSIVEMAP&&!0===material.emissiveMap.isVideoTexture&&"srgb"===ColorManagement.getTransfer(material.emissiveMap.colorSpace),premultipliedAlpha:material.premultipliedAlpha,doubleSided:2===material.side,
flipSided:1===material.side,useDepthPacking:0<=material.depthPacking,depthPacking:material.depthPacking||0,index0AttributeName:material.index0AttributeName,extensionClipCullDistance:HAS_EXTENSIONS&&!0===material.extensions.clipCullDistance&&extensions.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(HAS_EXTENSIONS&&!0===material.extensions.multiDraw||IS_BATCHEDMESH)&&extensions.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:extensions.has("KHR_parallel_shader_compile"),customProgramCacheKey:material.customProgramCacheKey()};
material.vertexUv1s=_activeChannels.has(1);material.vertexUv2s=_activeChannels.has(2);material.vertexUv3s=_activeChannels.has(3);_activeChannels.clear();return material},getProgramCacheKey:function(parameters){var array=[];parameters.shaderID?array.push(parameters.shaderID):(array.push(parameters.customVertexShaderID),array.push(parameters.customFragmentShaderID));if(void 0!==parameters.defines)for(var name in parameters.defines)array.push(name),array.push(parameters.defines[name]);!1===parameters.isRawShaderMaterial&&
(array.push(parameters.precision),array.push(parameters.outputColorSpace),array.push(parameters.envMapMode),array.push(parameters.envMapCubeUVHeight),array.push(parameters.mapUv),array.push(parameters.alphaMapUv),array.push(parameters.lightMapUv),array.push(parameters.aoMapUv),array.push(parameters.bumpMapUv),array.push(parameters.normalMapUv),array.push(parameters.displacementMapUv),array.push(parameters.emissiveMapUv),array.push(parameters.metalnessMapUv),array.push(parameters.roughnessMapUv),array.push(parameters.anisotropyMapUv),
array.push(parameters.clearcoatMapUv),array.push(parameters.clearcoatNormalMapUv),array.push(parameters.clearcoatRoughnessMapUv),array.push(parameters.iridescenceMapUv),array.push(parameters.iridescenceThicknessMapUv),array.push(parameters.sheenColorMapUv),array.push(parameters.sheenRoughnessMapUv),array.push(parameters.specularMapUv),array.push(parameters.specularColorMapUv),array.push(parameters.specularIntensityMapUv),array.push(parameters.transmissionMapUv),array.push(parameters.thicknessMapUv),
array.push(parameters.combine),array.push(parameters.fogExp2),array.push(parameters.sizeAttenuation),array.push(parameters.morphTargetsCount),array.push(parameters.morphAttributeCount),array.push(parameters.numDirLights),array.push(parameters.numPointLights),array.push(parameters.numSpotLights),array.push(parameters.numSpotLightMaps),array.push(parameters.numHemiLights),array.push(parameters.numRectAreaLights),array.push(parameters.numDirLightShadows),array.push(parameters.numPointLightShadows),array.push(parameters.numSpotLightShadows),
array.push(parameters.numSpotLightShadowsWithMaps),array.push(parameters.numLightProbes),array.push(parameters.shadowMapType),array.push(parameters.toneMapping),array.push(parameters.numClippingPlanes),array.push(parameters.numClipIntersection),array.push(parameters.depthPacking),_programLayers.disableAll(),parameters.supportsVertexTextures&&_programLayers.enable(0),parameters.instancing&&_programLayers.enable(1),parameters.instancingColor&&_programLayers.enable(2),parameters.instancingMorph&&_programLayers.enable(3),
parameters.matcap&&_programLayers.enable(4),parameters.envMap&&_programLayers.enable(5),parameters.normalMapObjectSpace&&_programLayers.enable(6),parameters.normalMapTangentSpace&&_programLayers.enable(7),parameters.clearcoat&&_programLayers.enable(8),parameters.iridescence&&_programLayers.enable(9),parameters.alphaTest&&_programLayers.enable(10),parameters.vertexColors&&_programLayers.enable(11),parameters.vertexAlphas&&_programLayers.enable(12),parameters.vertexUv1s&&_programLayers.enable(13),parameters.vertexUv2s&&
_programLayers.enable(14),parameters.vertexUv3s&&_programLayers.enable(15),parameters.vertexTangents&&_programLayers.enable(16),parameters.anisotropy&&_programLayers.enable(17),parameters.alphaHash&&_programLayers.enable(18),parameters.batching&&_programLayers.enable(19),parameters.dispersion&&_programLayers.enable(20),parameters.batchingColor&&_programLayers.enable(21),parameters.gradientMap&&_programLayers.enable(22),array.push(_programLayers.mask),_programLayers.disableAll(),parameters.fog&&_programLayers.enable(0),
parameters.useFog&&_programLayers.enable(1),parameters.flatShading&&_programLayers.enable(2),parameters.logarithmicDepthBuffer&&_programLayers.enable(3),parameters.reversedDepthBuffer&&_programLayers.enable(4),parameters.skinning&&_programLayers.enable(5),parameters.morphTargets&&_programLayers.enable(6),parameters.morphNormals&&_programLayers.enable(7),parameters.morphColors&&_programLayers.enable(8),parameters.premultipliedAlpha&&_programLayers.enable(9),parameters.shadowMapEnabled&&_programLayers.enable(10),
parameters.doubleSided&&_programLayers.enable(11),parameters.flipSided&&_programLayers.enable(12),parameters.useDepthPacking&&_programLayers.enable(13),parameters.dithering&&_programLayers.enable(14),parameters.transmission&&_programLayers.enable(15),parameters.sheen&&_programLayers.enable(16),parameters.opaque&&_programLayers.enable(17),parameters.pointsUvs&&_programLayers.enable(18),parameters.decodeVideoTexture&&_programLayers.enable(19),parameters.decodeVideoTextureEmissive&&_programLayers.enable(20),
parameters.alphaToCoverage&&_programLayers.enable(21),array.push(_programLayers.mask),array.push(renderer.outputColorSpace));array.push(parameters.customProgramCacheKey);return array.join()},getUniforms:function(material){var shaderID=shaderIDs[material.type];return shaderID?UniformsUtils.clone(ShaderLib[shaderID].uniforms):material.uniforms},acquireProgram:function(parameters,cacheKey){for(var program,p=0,pl=programs.length;p<pl;p++){var preexistingProgram=programs[p];if(preexistingProgram.cacheKey===
cacheKey){program=preexistingProgram;++program.usedTimes;break}}void 0===program&&(program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates),programs.push(program));return program},releaseProgram:function(program){if(0===--program.usedTimes){var i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();program.destroy()}},releaseShaderCache:function(material){_customShaders.remove(material)},programs:programs,dispose:function(){_customShaders.dispose()}}}function WebGLProperties(){var properties=
new WeakMap;return{has:function(object){return properties.has(object)},get:function(object){var map=properties.get(object);void 0===map&&(map={},properties.set(object,map));return map},remove:function(object){properties.delete(object)},update:function(object,key,value){properties.get(object)[key]=value},dispose:function(){properties=new WeakMap}}}function painterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==
b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function reversePainterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function WebGLRenderList(){function getNextRenderItem(object,geometry,material,groupOrder,z,group){var renderItem=renderItems[renderItemsIndex];void 0===renderItem?(renderItem={id:object.id,object:object,geometry:geometry,material:material,groupOrder:groupOrder,
renderOrder:object.renderOrder,z:z,group:group},renderItems[renderItemsIndex]=renderItem):(renderItem.id=object.id,renderItem.object=object,renderItem.geometry=geometry,renderItem.material=material,renderItem.groupOrder=groupOrder,renderItem.renderOrder=object.renderOrder,renderItem.z=z,renderItem.group=group);renderItemsIndex++;return renderItem}var renderItems=[],renderItemsIndex=0,opaque=[],transmissive=[],transparent=[];return{opaque:opaque,transmissive:transmissive,transparent:transparent,init:function(){renderItemsIndex=
0;opaque.length=0;transmissive.length=0;transparent.length=0},push:function(object,geometry,material,groupOrder,z,group){object=getNextRenderItem(object,geometry,material,groupOrder,z,group);0<material.transmission?transmissive.push(object):!0===material.transparent?transparent.push(object):opaque.push(object)},unshift:function(object,geometry,material,groupOrder,z,group){object=getNextRenderItem(object,geometry,material,groupOrder,z,group);0<material.transmission?transmissive.unshift(object):!0===
material.transparent?transparent.unshift(object):opaque.unshift(object)},finish:function(){for(var i=renderItemsIndex,il=renderItems.length;i<il;i++){var renderItem=renderItems[i];if(null===renderItem.id)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.group=null}},sort:function(customOpaqueSort,customTransparentSort){1<opaque.length&&opaque.sort(customOpaqueSort||painterSortStable);1<transmissive.length&&transmissive.sort(customTransparentSort||
reversePainterSortStable);1<transparent.length&&transparent.sort(customTransparentSort||reversePainterSortStable)}}}function WebGLRenderLists(){var lists=new WeakMap;return{get:function(scene,renderCallDepth){var listArray=lists.get(scene);void 0===listArray?(renderCallDepth=new WebGLRenderList,lists.set(scene,[renderCallDepth])):renderCallDepth>=listArray.length?(renderCallDepth=new WebGLRenderList,listArray.push(renderCallDepth)):renderCallDepth=listArray[renderCallDepth];return renderCallDepth},
dispose:function(){lists=new WeakMap}}}function UniformsCache(){var lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];switch(light.type){case "DirectionalLight":var uniforms={direction:new Vector3,color:new Color};break;case "SpotLight":uniforms={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case "PointLight":uniforms={position:new Vector3,color:new Color,distance:0,decay:0};break;case "HemisphereLight":uniforms=
{direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case "RectAreaLight":uniforms={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return lights[light.id]=uniforms}}}function ShadowUniformsCache(){var lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];switch(light.type){case "DirectionalLight":var uniforms={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case "SpotLight":uniforms=
{shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case "PointLight":uniforms={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1E3}}return lights[light.id]=uniforms}}}function shadowCastingAndTexturingLightsFirst(lightA,lightB){return(lightB.castShadow?2:0)-(lightA.castShadow?2:0)+(lightB.map?1:0)-(lightA.map?1:0)}function WebGLLights(extensions){for(var cache=new UniformsCache,
shadowCache=ShadowUniformsCache(),state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],
pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0},i=0;9>i;i++)state.probe.push(new Vector3);var vector3=new Vector3,matrix4=new Matrix4,matrix42=new Matrix4;return{setup:function(lights){for(var r=0,g=0,b=0,i$301=0;9>i$301;i$301++)state.probe[i$301].set(0,0,0);var pointLength=i$301=0,spotLength=0,rectAreaLength=0,hemiLength=0,numDirectionalShadows=0,numPointShadows=0,numSpotShadows=0,numSpotMaps=0,numSpotShadowsWithMaps=0,numLightProbes=0;lights.sort(shadowCastingAndTexturingLightsFirst);
for(var i$302=0,l=lights.length;i$302<l;i$302++){var light=lights[i$302],color=light.color,intensity=light.intensity,distance=light.distance,shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight)r+=color.r*intensity,g+=color.g*intensity,b+=color.b*intensity;else if(light.isLightProbe){for(shadowMap=0;9>shadowMap;shadowMap++)state.probe[shadowMap].addScaledVector(light.sh.coefficients[shadowMap],intensity);numLightProbes++}else if(light.isDirectionalLight)intensity=
cache.get(light),intensity.color.copy(light.color).multiplyScalar(light.intensity),light.castShadow&&(color=light.shadow,distance=shadowCache.get(light),distance.shadowIntensity=color.intensity,distance.shadowBias=color.bias,distance.shadowNormalBias=color.normalBias,distance.shadowRadius=color.radius,distance.shadowMapSize=color.mapSize,state.directionalShadow[i$301]=distance,state.directionalShadowMap[i$301]=shadowMap,state.directionalShadowMatrix[i$301]=light.shadow.matrix,numDirectionalShadows++),
state.directional[i$301]=intensity,i$301++;else if(light.isSpotLight){var uniforms$303=cache.get(light);uniforms$303.position.setFromMatrixPosition(light.matrixWorld);uniforms$303.color.copy(color).multiplyScalar(intensity);uniforms$303.distance=distance;uniforms$303.coneCos=Math.cos(light.angle);uniforms$303.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms$303.decay=light.decay;state.spot[spotLength]=uniforms$303;intensity=light.shadow;light.map&&(state.spotLightMap[numSpotMaps]=light.map,
numSpotMaps++,intensity.updateMatrices(light),light.castShadow&&numSpotShadowsWithMaps++);state.spotLightMatrix[spotLength]=intensity.matrix;light.castShadow&&(light=shadowCache.get(light),light.shadowIntensity=intensity.intensity,light.shadowBias=intensity.bias,light.shadowNormalBias=intensity.normalBias,light.shadowRadius=intensity.radius,light.shadowMapSize=intensity.mapSize,state.spotShadow[spotLength]=light,state.spotShadowMap[spotLength]=shadowMap,numSpotShadows++);spotLength++}else light.isRectAreaLight?
(shadowMap=cache.get(light),shadowMap.color.copy(color).multiplyScalar(intensity),shadowMap.halfWidth.set(.5*light.width,0,0),shadowMap.halfHeight.set(0,.5*light.height,0),state.rectArea[rectAreaLength]=shadowMap,rectAreaLength++):light.isPointLight?(intensity=cache.get(light),intensity.color.copy(light.color).multiplyScalar(light.intensity),intensity.distance=light.distance,intensity.decay=light.decay,light.castShadow&&(color=light.shadow,distance=shadowCache.get(light),distance.shadowIntensity=
color.intensity,distance.shadowBias=color.bias,distance.shadowNormalBias=color.normalBias,distance.shadowRadius=color.radius,distance.shadowMapSize=color.mapSize,distance.shadowCameraNear=color.camera.near,distance.shadowCameraFar=color.camera.far,state.pointShadow[pointLength]=distance,state.pointShadowMap[pointLength]=shadowMap,state.pointShadowMatrix[pointLength]=light.shadow.matrix,numPointShadows++),state.point[pointLength]=intensity,pointLength++):light.isHemisphereLight&&(shadowMap=cache.get(light),
shadowMap.skyColor.copy(light.color).multiplyScalar(intensity),shadowMap.groundColor.copy(light.groundColor).multiplyScalar(intensity),state.hemi[hemiLength]=shadowMap,hemiLength++)}0<rectAreaLength&&(!0===extensions.has("OES_texture_float_linear")?(state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1,state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2):(state.rectAreaLTC1=UniformsLib.LTC_HALF_1,state.rectAreaLTC2=UniformsLib.LTC_HALF_2));state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;lights=state.hash;if(lights.directionalLength!==
i$301||lights.pointLength!==pointLength||lights.spotLength!==spotLength||lights.rectAreaLength!==rectAreaLength||lights.hemiLength!==hemiLength||lights.numDirectionalShadows!==numDirectionalShadows||lights.numPointShadows!==numPointShadows||lights.numSpotShadows!==numSpotShadows||lights.numSpotMaps!==numSpotMaps||lights.numLightProbes!==numLightProbes)state.directional.length=i$301,state.spot.length=spotLength,state.rectArea.length=rectAreaLength,state.point.length=pointLength,state.hemi.length=hemiLength,
state.directionalShadow.length=numDirectionalShadows,state.directionalShadowMap.length=numDirectionalShadows,state.pointShadow.length=numPointShadows,state.pointShadowMap.length=numPointShadows,state.spotShadow.length=numSpotShadows,state.spotShadowMap.length=numSpotShadows,state.directionalShadowMatrix.length=numDirectionalShadows,state.pointShadowMatrix.length=numPointShadows,state.spotLightMatrix.length=numSpotShadows+numSpotMaps-numSpotShadowsWithMaps,state.spotLightMap.length=numSpotMaps,state.numSpotLightShadowsWithMaps=
numSpotShadowsWithMaps,state.numLightProbes=numLightProbes,lights.directionalLength=i$301,lights.pointLength=pointLength,lights.spotLength=spotLength,lights.rectAreaLength=rectAreaLength,lights.hemiLength=hemiLength,lights.numDirectionalShadows=numDirectionalShadows,lights.numPointShadows=numPointShadows,lights.numSpotShadows=numSpotShadows,lights.numSpotMaps=numSpotMaps,lights.numLightProbes=numLightProbes,state.version=nextVersion++},setupView:function(lights,camera){var directionalLength=0,pointLength=
0,spotLength=0,rectAreaLength=0,hemiLength=0;camera=camera.matrixWorldInverse;for(var i$311=0,l=lights.length;i$311<l;i$311++){var light=lights[i$311];if(light.isDirectionalLight){var uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(camera);directionalLength++}else light.isSpotLight?(uniforms=state.spot[spotLength],uniforms.position.setFromMatrixPosition(light.matrixWorld),
uniforms.position.applyMatrix4(camera),uniforms.direction.setFromMatrixPosition(light.matrixWorld),vector3.setFromMatrixPosition(light.target.matrixWorld),uniforms.direction.sub(vector3),uniforms.direction.transformDirection(camera),spotLength++):light.isRectAreaLight?(uniforms=state.rectArea[rectAreaLength],uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.position.applyMatrix4(camera),matrix42.identity(),matrix4.copy(light.matrixWorld),matrix4.premultiply(camera),matrix42.extractRotation(matrix4),
uniforms.halfWidth.set(.5*light.width,0,0),uniforms.halfHeight.set(0,.5*light.height,0),uniforms.halfWidth.applyMatrix4(matrix42),uniforms.halfHeight.applyMatrix4(matrix42),rectAreaLength++):light.isPointLight?(uniforms=state.point[pointLength],uniforms.position.setFromMatrixPosition(light.matrixWorld),uniforms.position.applyMatrix4(camera),pointLength++):light.isHemisphereLight&&(uniforms=state.hemi[hemiLength],uniforms.direction.setFromMatrixPosition(light.matrixWorld),uniforms.direction.transformDirection(camera),
hemiLength++)}},state:state}}function WebGLRenderState(extensions){var lights=new WebGLLights(extensions),lightsArray=[],shadowsArray=[],state={lightsArray:lightsArray,shadowsArray:shadowsArray,camera:null,lights:lights,transmissionRenderTarget:{}};return{init:function(camera){state.camera=camera;lightsArray.length=0;shadowsArray.length=0},state:state,setupLights:function(){lights.setup(lightsArray)},setupLightsView:function(camera){lights.setupView(lightsArray,camera)},pushLight:function(light){lightsArray.push(light)},
pushShadow:function(shadowLight){shadowsArray.push(shadowLight)}}}function WebGLRenderStates(extensions){var renderStates=new WeakMap;return{get:function(scene,renderCallDepth){renderCallDepth=void 0===renderCallDepth?0:renderCallDepth;var renderStateArray=renderStates.get(scene);void 0===renderStateArray?(renderCallDepth=new WebGLRenderState(extensions),renderStates.set(scene,[renderCallDepth])):renderCallDepth>=renderStateArray.length?(renderCallDepth=new WebGLRenderState(extensions),renderStateArray.push(renderCallDepth)):
renderCallDepth=renderStateArray[renderCallDepth];return renderCallDepth},dispose:function(){renderStates=new WeakMap}}}function WebGLShadowMap(renderer,objects,capabilities){function getDepthMaterial(object,material,light,type){object=!0===light.isPointLight?object.customDistanceMaterial:object.customDepthMaterial;if(void 0===object&&(object=!0===light.isPointLight?_distanceMaterial:_depthMaterial,renderer.localClippingEnabled&&!0===material.clipShadows&&Array.isArray(material.clippingPlanes)&&0!==
material.clippingPlanes.length||material.displacementMap&&0!==material.displacementScale||material.alphaMap&&0<material.alphaTest||material.map&&0<material.alphaTest||!0===material.alphaToCoverage)){var keyA=object.uuid,keyB=material.uuid,materialsForVariant=_materialCache[keyA];void 0===materialsForVariant&&(materialsForVariant={},_materialCache[keyA]=materialsForVariant);keyA=materialsForVariant[keyB];void 0===keyA&&(keyA=object.clone(),materialsForVariant[keyB]=keyA,material.addEventListener("dispose",
onMaterialDispose));object=keyA}object.visible=material.visible;object.wireframe=material.wireframe;object.side=3===type?null!==material.shadowSide?material.shadowSide:material.side:null!==material.shadowSide?material.shadowSide:shadowSide[material.side];object.alphaMap=material.alphaMap;object.alphaTest=!0===material.alphaToCoverage?.5:material.alphaTest;object.map=material.map;object.clipShadows=material.clipShadows;object.clippingPlanes=material.clippingPlanes;object.clipIntersection=material.clipIntersection;
object.displacementMap=material.displacementMap;object.displacementScale=material.displacementScale;object.displacementBias=material.displacementBias;object.wireframeLinewidth=material.wireframeLinewidth;object.linewidth=material.linewidth;!0===light.isPointLight&&!0===object.isMeshDistanceMaterial&&(renderer.properties.get(object).light=light);return object}function renderObject(object,camera,shadowCamera,light,type){if(!1!==object.visible){if(object.layers.test(camera.layers)&&(object.isMesh||object.isLine||
object.isPoints)&&(object.castShadow||object.receiveShadow&&3===type)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);var geometry=objects.update(object),material=object.material;if(Array.isArray(material))for(var groups=geometry.groups,k=0,kl=groups.length;k<kl;k++){var group=groups[k],groupMaterial=material[group.materialIndex];groupMaterial&&groupMaterial.visible&&(groupMaterial=getDepthMaterial(object,
groupMaterial,light,type),object.onBeforeShadow(renderer,object,camera,shadowCamera,geometry,groupMaterial,group),renderer.renderBufferDirect(shadowCamera,null,geometry,groupMaterial,object,group),object.onAfterShadow(renderer,object,camera,shadowCamera,geometry,groupMaterial,group))}else material.visible&&(material=getDepthMaterial(object,material,light,type),object.onBeforeShadow(renderer,object,camera,shadowCamera,geometry,material,null),renderer.renderBufferDirect(shadowCamera,null,geometry,material,
object,null),object.onAfterShadow(renderer,object,camera,shadowCamera,geometry,material,null))}object=object.children;geometry=0;for(material=object.length;geometry<material;geometry++)renderObject(object[geometry],camera,shadowCamera,light,type)}}function onMaterialDispose(event){event.target.removeEventListener("dispose",onMaterialDispose);for(var id in _materialCache){var cache=_materialCache[id],uuid=event.target.uuid;uuid in cache&&(cache[uuid].dispose(),delete cache[uuid])}}var _frustum=new Frustum,
_shadowMapSize=new Vector2,_viewportSize=new Vector2,_viewport=new Vector4,_depthMaterial=new MeshDepthMaterial({depthPacking:3201}),_distanceMaterial=new MeshDistanceMaterial,_materialCache={},_maxTextureSize=capabilities.maxTextureSize;capabilities={};var shadowSide=(capabilities[0]=1,capabilities[1]=0,capabilities[2]=2,capabilities),shadowMaterialVertical=new ShaderMaterial({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position \x3d vec4( position, 1.0 );\n}",
fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include \x3cpacking\x3e\nvoid main() {\n\tconst float samples \x3d float( VSM_SAMPLES );\n\tfloat mean \x3d 0.0;\n\tfloat squared_mean \x3d 0.0;\n\tfloat uvStride \x3d samples \x3c\x3d 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart \x3d samples \x3c\x3d 1.0 ? 0.0 : - 1.0;\n\tfor ( float i \x3d 0.0; i \x3c samples; i ++ ) {\n\t\tfloat uvOffset \x3d uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution \x3d unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean +\x3d distribution.x;\n\t\t\tsquared_mean +\x3d distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth \x3d unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean +\x3d depth;\n\t\t\tsquared_mean +\x3d depth * depth;\n\t\t#endif\n\t}\n\tmean \x3d mean / samples;\n\tsquared_mean \x3d squared_mean / samples;\n\tfloat std_dev \x3d sqrt( squared_mean - mean * mean );\n\tgl_FragColor \x3d pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),
shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;capabilities=new BufferGeometry;capabilities.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var fullScreenMesh=new Mesh(capabilities,shadowMaterialVertical),scope=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;var _previousType=this.type=1;this.render=function(lights,scene,camera){if(!1!==scope.enabled&&(!1!==scope.autoUpdate||!1!==scope.needsUpdate)&&
0!==lights.length){var currentRenderTarget=renderer.getRenderTarget(),activeCubeFace=renderer.getActiveCubeFace(),activeMipmapLevel=renderer.getActiveMipmapLevel(),_state=renderer.state;_state.setBlending(0);!0===_state.buffers.depth.getReversed()?_state.buffers.color.setClear(0,0,0,0):_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(!0);_state.setScissorTest(!1);for(var toVSM=3!==_previousType&&3===this.type,fromVSM=3===_previousType&&3!==this.type,i=0,il=lights.length;i<il;i++){var light=
lights[i],shadow=light.shadow;if(void 0===shadow)console.warn("THREE.WebGLShadowMap:",light,"has no shadow.");else if(!1!==shadow.autoUpdate||!1!==shadow.needsUpdate){_shadowMapSize.copy(shadow.mapSize);var shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>_maxTextureSize||_shadowMapSize.y>_maxTextureSize)_shadowMapSize.x>_maxTextureSize&&(_viewportSize.x=Math.floor(_maxTextureSize/shadowFrameExtents.x),_shadowMapSize.x=
_viewportSize.x*shadowFrameExtents.x,shadow.mapSize.x=_viewportSize.x),_shadowMapSize.y>_maxTextureSize&&(_viewportSize.y=Math.floor(_maxTextureSize/shadowFrameExtents.y),_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y,shadow.mapSize.y=_viewportSize.y);if(null===shadow.map||!0===toVSM||!0===fromVSM)shadowFrameExtents=3!==this.type?{minFilter:1003,magFilter:1003}:{},null!==shadow.map&&shadow.map.dispose(),shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,shadowFrameExtents),
shadow.map.texture.name=light.name+".shadowMap",shadow.camera.updateProjectionMatrix();renderer.setRenderTarget(shadow.map);renderer.clear();shadowFrameExtents=shadow.getViewportCount();for(var vp=0;vp<shadowFrameExtents;vp++){var viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,
light,this.type)}!0!==shadow.isPointLightShadow&&3===this.type&&(light=camera,shadowFrameExtents=objects.update(fullScreenMesh),shadowMaterialVertical.defines.VSM_SAMPLES!==shadow.blurSamples&&(shadowMaterialVertical.defines.VSM_SAMPLES=shadow.blurSamples,shadowMaterialHorizontal.defines.VSM_SAMPLES=shadow.blurSamples,shadowMaterialVertical.needsUpdate=!0,shadowMaterialHorizontal.needsUpdate=!0),null===shadow.mapPass&&(shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y)),shadowMaterialVertical.uniforms.shadow_pass.value=
shadow.map.texture,shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize,shadowMaterialVertical.uniforms.radius.value=shadow.radius,renderer.setRenderTarget(shadow.mapPass),renderer.clear(),renderer.renderBufferDirect(light,null,shadowFrameExtents,shadowMaterialVertical,fullScreenMesh,null),shadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture,shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize,shadowMaterialHorizontal.uniforms.radius.value=shadow.radius,
renderer.setRenderTarget(shadow.map),renderer.clear(),renderer.renderBufferDirect(light,null,shadowFrameExtents,shadowMaterialHorizontal,fullScreenMesh,null));shadow.needsUpdate=!1}}_previousType=this.type;scope.needsUpdate=!1;renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel)}}}function WebGLState(gl,extensions){function createTexture(type,target,count,dimensions){var data=new Uint8Array(4),texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,
gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(type,gl.TEXTURE_MAG_FILTER,gl.NEAREST);for(var i=0;i<count;i++)type===gl.TEXTURE_3D||type===gl.TEXTURE_2D_ARRAY?gl.texImage3D(target,0,gl.RGBA,1,1,dimensions,0,gl.RGBA,gl.UNSIGNED_BYTE,data):gl.texImage2D(target+i,0,gl.RGBA,1,1,0,gl.RGBA,gl.UNSIGNED_BYTE,data);return texture}function enable(id){!0!==enabledCapabilities[id]&&(gl.enable(id),enabledCapabilities[id]=!0)}function disable(id){!1!==enabledCapabilities[id]&&(gl.disable(id),enabledCapabilities[id]=
!1)}function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,blendColor,blendAlpha,premultipliedAlpha){if(0===blending)!0===currentBlendingEnabled&&(disable(gl.BLEND),currentBlendingEnabled=!1);else if(!1===currentBlendingEnabled&&(enable(gl.BLEND),currentBlendingEnabled=!0),5!==blending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(100!==currentBlendEquation||100!==currentBlendEquationAlpha)gl.blendEquation(gl.FUNC_ADD),
currentBlendEquationAlpha=currentBlendEquation=100;if(premultipliedAlpha)switch(blending){case 1:gl.blendFuncSeparate(gl.ONE,gl.ONE_MINUS_SRC_ALPHA,gl.ONE,gl.ONE_MINUS_SRC_ALPHA);break;case 2:gl.blendFunc(gl.ONE,gl.ONE);break;case 3:gl.blendFuncSeparate(gl.ZERO,gl.ONE_MINUS_SRC_COLOR,gl.ZERO,gl.ONE);break;case 4:gl.blendFuncSeparate(gl.DST_COLOR,gl.ONE_MINUS_SRC_ALPHA,gl.ZERO,gl.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}else switch(blending){case 1:gl.blendFuncSeparate(gl.SRC_ALPHA,
gl.ONE_MINUS_SRC_ALPHA,gl.ONE,gl.ONE_MINUS_SRC_ALPHA);break;case 2:gl.blendFuncSeparate(gl.SRC_ALPHA,gl.ONE,gl.ONE,gl.ONE);break;case 3:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha \x3d true");break;case 4:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha \x3d true");break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}currentBlendDstAlpha=currentBlendSrcAlpha=currentBlendDst=currentBlendSrc=
null;currentBlendColor.set(0,0,0);currentBlendAlpha=0;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha}}else{blendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha)gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]),currentBlendEquation=blendEquation,currentBlendEquationAlpha=blendEquationAlpha;
if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha)gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]),currentBlendSrc=blendSrc,currentBlendDst=blendDst,currentBlendSrcAlpha=blendSrcAlpha,currentBlendDstAlpha=blendDstAlpha;if(!1===blendColor.equals(currentBlendColor)||blendAlpha!==currentBlendAlpha)gl.blendColor(blendColor.r,blendColor.g,blendColor.b,blendAlpha),
currentBlendColor.copy(blendColor),currentBlendAlpha=blendAlpha;currentBlending=blending;currentPremultipledAlpha=!1}}function setFlipSided(flipSided){currentFlipSided!==flipSided&&(flipSided?gl.frontFace(gl.CW):gl.frontFace(gl.CCW),currentFlipSided=flipSided)}function setCullFace(cullFace){0!==cullFace?(enable(gl.CULL_FACE),cullFace!==currentCullFace&&(1===cullFace?gl.cullFace(gl.BACK):2===cullFace?gl.cullFace(gl.FRONT):gl.cullFace(gl.FRONT_AND_BACK))):disable(gl.CULL_FACE);currentCullFace=cullFace}
function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){if(enable(gl.POLYGON_OFFSET_FILL),currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units)gl.polygonOffset(factor,units),currentPolygonOffsetFactor=factor,currentPolygonOffsetUnits=units}else disable(gl.POLYGON_OFFSET_FILL)}var colorBuffer=new function(){var locked=!1,color=new Vector4,currentColorMask=null,currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){currentColorMask===colorMask||locked||
(gl.colorMask(colorMask,colorMask,colorMask,colorMask),currentColorMask=colorMask)},setLocked:function(lock){locked=lock},setClear:function(r,g,b,a,premultipliedAlpha){!0===premultipliedAlpha&&(r*=a,g*=a,b*=a);color.set(r,g,b,a);!1===currentColorClear.equals(color)&&(gl.clearColor(r,g,b,a),currentColorClear.copy(color))},reset:function(){locked=!1;currentColorMask=null;currentColorClear.set(-1,0,0,0)}}},depthBuffer=new function(){var locked=!1,currentReversed=!1,currentDepthMask=null,currentDepthFunc=
null,currentDepthClear=null;return{setReversed:function(reversed){if(currentReversed!==reversed){var ext=extensions.get("EXT_clip_control");reversed?ext.clipControlEXT(ext.LOWER_LEFT_EXT,ext.ZERO_TO_ONE_EXT):ext.clipControlEXT(ext.LOWER_LEFT_EXT,ext.NEGATIVE_ONE_TO_ONE_EXT);currentReversed=reversed;reversed=currentDepthClear;currentDepthClear=null;this.setClear(reversed)}},getReversed:function(){return currentReversed},setTest:function(depthTest){depthTest?enable(gl.DEPTH_TEST):disable(gl.DEPTH_TEST)},
setMask:function(depthMask){currentDepthMask===depthMask||locked||(gl.depthMask(depthMask),currentDepthMask=depthMask)},setFunc:function(depthFunc){currentReversed&&(depthFunc=reversedFuncs[depthFunc]);if(currentDepthFunc!==depthFunc){switch(depthFunc){case 0:gl.depthFunc(gl.NEVER);break;case 1:gl.depthFunc(gl.ALWAYS);break;case 2:gl.depthFunc(gl.LESS);break;case 3:gl.depthFunc(gl.LEQUAL);break;case 4:gl.depthFunc(gl.EQUAL);break;case 5:gl.depthFunc(gl.GEQUAL);break;case 6:gl.depthFunc(gl.GREATER);
break;case 7:gl.depthFunc(gl.NOTEQUAL);break;default:gl.depthFunc(gl.LEQUAL)}currentDepthFunc=depthFunc}},setLocked:function(lock){locked=lock},setClear:function(depth){currentDepthClear!==depth&&(currentReversed&&(depth=1-depth),gl.clearDepth(depth),currentDepthClear=depth)},reset:function(){locked=!1;currentDepthClear=currentDepthFunc=currentDepthMask=null;currentReversed=!1}}},stencilBuffer=new function(){var locked=!1,currentStencilMask=null,currentStencilFunc=null,currentStencilRef=null,currentStencilFuncMask=
null,currentStencilFail=null,currentStencilZFail=null,currentStencilZPass=null,currentStencilClear=null;return{setTest:function(stencilTest){locked||(stencilTest?enable(gl.STENCIL_TEST):disable(gl.STENCIL_TEST))},setMask:function(stencilMask){currentStencilMask===stencilMask||locked||(gl.stencilMask(stencilMask),currentStencilMask=stencilMask)},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask)gl.stencilFunc(stencilFunc,
stencilRef,stencilMask),currentStencilFunc=stencilFunc,currentStencilRef=stencilRef,currentStencilFuncMask=stencilMask},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass)gl.stencilOp(stencilFail,stencilZFail,stencilZPass),currentStencilFail=stencilFail,currentStencilZFail=stencilZFail,currentStencilZPass=stencilZPass},setLocked:function(lock){locked=lock},setClear:function(stencil){currentStencilClear!==
stencil&&(gl.clearStencil(stencil),currentStencilClear=stencil)},reset:function(){locked=!1;currentStencilClear=currentStencilZPass=currentStencilZFail=currentStencilFail=currentStencilFuncMask=currentStencilRef=currentStencilFunc=currentStencilMask=null}}},uboBindings=new WeakMap,uboProgramMap=new WeakMap,enabledCapabilities={},currentBoundFramebuffers={},currentDrawbuffers=new WeakMap,defaultDrawbuffers=[],currentProgram=null,currentBlendingEnabled=!1,currentBlending=null,currentBlendEquation=null,
currentBlendSrc=null,currentBlendDst=null,currentBlendEquationAlpha=null,currentBlendSrcAlpha=null,currentBlendDstAlpha=null,currentBlendColor=new Color(0,0,0),currentBlendAlpha=0,currentPremultipledAlpha=!1,currentFlipSided=null,currentCullFace=null,currentLineWidth=null,currentPolygonOffsetFactor=null,currentPolygonOffsetUnits=null,maxTextures=gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),lineWidthAvailable=!1,version=0;version=gl.getParameter(gl.VERSION);-1!==version.indexOf("WebGL")?(version=
parseFloat(/^WebGL (\d)/.exec(version)[1]),lineWidthAvailable=1<=version):-1!==version.indexOf("OpenGL ES")&&(version=parseFloat(/^OpenGL ES (\d)/.exec(version)[1]),lineWidthAvailable=2<=version);var currentTextureSlot=null,currentBoundTextures={};version=gl.getParameter(gl.SCISSOR_BOX);var viewportParam=gl.getParameter(gl.VIEWPORT),currentScissor=(new Vector4).fromArray(version),currentViewport=(new Vector4).fromArray(viewportParam),emptyTextures={};emptyTextures[gl.TEXTURE_2D]=createTexture(gl.TEXTURE_2D,
gl.TEXTURE_2D,1);emptyTextures[gl.TEXTURE_CUBE_MAP]=createTexture(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_CUBE_MAP_POSITIVE_X,6);emptyTextures[gl.TEXTURE_2D_ARRAY]=createTexture(gl.TEXTURE_2D_ARRAY,gl.TEXTURE_2D_ARRAY,1,1);emptyTextures[gl.TEXTURE_3D]=createTexture(gl.TEXTURE_3D,gl.TEXTURE_3D,1,1);colorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(gl.DEPTH_TEST);depthBuffer.setFunc(3);setFlipSided(!1);setCullFace(1);enable(gl.CULL_FACE);setBlending(0);version={};var equationToGL=
(version[100]=gl.FUNC_ADD,version[101]=gl.FUNC_SUBTRACT,version[102]=gl.FUNC_REVERSE_SUBTRACT,version);equationToGL[103]=gl.MIN;equationToGL[104]=gl.MAX;version={};var factorToGL=(version[200]=gl.ZERO,version[201]=gl.ONE,version[202]=gl.SRC_COLOR,version[204]=gl.SRC_ALPHA,version[210]=gl.SRC_ALPHA_SATURATE,version[208]=gl.DST_COLOR,version[206]=gl.DST_ALPHA,version[203]=gl.ONE_MINUS_SRC_COLOR,version[205]=gl.ONE_MINUS_SRC_ALPHA,version[209]=gl.ONE_MINUS_DST_COLOR,version[207]=gl.ONE_MINUS_DST_ALPHA,
version[211]=gl.CONSTANT_COLOR,version[212]=gl.ONE_MINUS_CONSTANT_COLOR,version[213]=gl.CONSTANT_ALPHA,version[214]=gl.ONE_MINUS_CONSTANT_ALPHA,version);return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,bindFramebuffer:function(target,framebuffer){return currentBoundFramebuffers[target]!==framebuffer?(gl.bindFramebuffer(target,framebuffer),currentBoundFramebuffers[target]=framebuffer,target===gl.DRAW_FRAMEBUFFER&&(currentBoundFramebuffers[gl.FRAMEBUFFER]=
framebuffer),target===gl.FRAMEBUFFER&&(currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER]=framebuffer),!0):!1},drawBuffers:function(renderTarget,framebuffer){var drawBuffers=defaultDrawbuffers,needsUpdate=!1;if(renderTarget){if(drawBuffers=currentDrawbuffers.get(framebuffer),void 0===drawBuffers&&(drawBuffers=[],currentDrawbuffers.set(framebuffer,drawBuffers)),renderTarget=renderTarget.textures,drawBuffers.length!==renderTarget.length||drawBuffers[0]!==gl.COLOR_ATTACHMENT0){needsUpdate=0;for(framebuffer=
renderTarget.length;needsUpdate<framebuffer;needsUpdate++)drawBuffers[needsUpdate]=gl.COLOR_ATTACHMENT0+needsUpdate;drawBuffers.length=renderTarget.length;needsUpdate=!0}}else drawBuffers[0]!==gl.BACK&&(drawBuffers[0]=gl.BACK,needsUpdate=!0);needsUpdate&&gl.drawBuffers(drawBuffers)},useProgram:function(program){return currentProgram!==program?(gl.useProgram(program),currentProgram=program,!0):!1},setBlending:setBlending,setMaterial:function(material,frontFaceCW){2===material.side?disable(gl.CULL_FACE):
enable(gl.CULL_FACE);var flipSided=1===material.side;frontFaceCW&&(flipSided=!flipSided);setFlipSided(flipSided);1===material.blending&&!1===material.transparent?setBlending(0):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.blendColor,material.blendAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);
colorBuffer.setMask(material.colorWrite);frontFaceCW=material.stencilWrite;stencilBuffer.setTest(frontFaceCW);frontFaceCW&&(stencilBuffer.setMask(material.stencilWriteMask),stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask),stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass));setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);!0===material.alphaToCoverage?enable(gl.SAMPLE_ALPHA_TO_COVERAGE):
disable(gl.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:function(width){width!==currentLineWidth&&(lineWidthAvailable&&gl.lineWidth(width),currentLineWidth=width)},setPolygonOffset:setPolygonOffset,setScissorTest:function(scissorTest){scissorTest?enable(gl.SCISSOR_TEST):disable(gl.SCISSOR_TEST)},activeTexture:function(webglSlot){void 0===webglSlot&&(webglSlot=gl.TEXTURE0+maxTextures-1);currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=
webglSlot)},bindTexture:function(webglType,webglTexture,webglSlot){void 0===webglSlot&&(webglSlot=null===currentTextureSlot?gl.TEXTURE0+maxTextures-1:currentTextureSlot);var boundTexture=currentBoundTextures[webglSlot];void 0===boundTexture&&(boundTexture={type:void 0,texture:void 0},currentBoundTextures[webglSlot]=boundTexture);if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture)currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=webglSlot),gl.bindTexture(webglType,
webglTexture||emptyTextures[webglType]),boundTexture.type=webglType,boundTexture.texture=webglTexture},unbindTexture:function(){var boundTexture=currentBoundTextures[currentTextureSlot];void 0!==boundTexture&&void 0!==boundTexture.type&&(gl.bindTexture(boundTexture.type,null),boundTexture.type=void 0,boundTexture.texture=void 0)},compressedTexImage2D:function(){try{gl.compressedTexImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},compressedTexImage3D:function(){try{gl.compressedTexImage3D.apply(gl,
arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage2D:function(){try{gl.texImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage3D:function(){try{gl.texImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},updateUBOMapping:function(uniformsGroup,program){var mapping=uboProgramMap.get(program);void 0===mapping&&(mapping=new WeakMap,uboProgramMap.set(program,mapping));var blockIndex=mapping.get(uniformsGroup);
void 0===blockIndex&&(blockIndex=gl.getUniformBlockIndex(program,uniformsGroup.name),mapping.set(uniformsGroup,blockIndex))},uniformBlockBinding:function(uniformsGroup,program){var blockIndex=uboProgramMap.get(program).get(uniformsGroup);uboBindings.get(program)!==blockIndex&&(gl.uniformBlockBinding(program,blockIndex,uniformsGroup.__bindingPointIndex),uboBindings.set(program,blockIndex))},texStorage2D:function(){try{gl.texStorage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",
error)}},texStorage3D:function(){try{gl.texStorage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texSubImage2D:function(){try{gl.texSubImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texSubImage3D:function(){try{gl.texSubImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},compressedTexSubImage2D:function(){try{gl.compressedTexSubImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",
error)}},compressedTexSubImage3D:function(){try{gl.compressedTexSubImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},scissor:function(scissor){!1===currentScissor.equals(scissor)&&(gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w),currentScissor.copy(scissor))},viewport:function(viewport){!1===currentViewport.equals(viewport)&&(gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w),currentViewport.copy(viewport))},reset:function(){gl.disable(gl.BLEND);gl.disable(gl.CULL_FACE);
gl.disable(gl.DEPTH_TEST);gl.disable(gl.POLYGON_OFFSET_FILL);gl.disable(gl.SCISSOR_TEST);gl.disable(gl.STENCIL_TEST);gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);gl.blendEquation(gl.FUNC_ADD);gl.blendFunc(gl.ONE,gl.ZERO);gl.blendFuncSeparate(gl.ONE,gl.ZERO,gl.ONE,gl.ZERO);gl.blendColor(0,0,0,0);gl.colorMask(!0,!0,!0,!0);gl.clearColor(0,0,0,0);gl.depthMask(!0);gl.depthFunc(gl.LESS);depthBuffer.setReversed(!1);gl.clearDepth(1);gl.stencilMask(4294967295);gl.stencilFunc(gl.ALWAYS,0,4294967295);gl.stencilOp(gl.KEEP,
gl.KEEP,gl.KEEP);gl.clearStencil(0);gl.cullFace(gl.BACK);gl.frontFace(gl.CCW);gl.polygonOffset(0,0);gl.activeTexture(gl.TEXTURE0);gl.bindFramebuffer(gl.FRAMEBUFFER,null);gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,null);gl.bindFramebuffer(gl.READ_FRAMEBUFFER,null);gl.useProgram(null);gl.lineWidth(1);gl.scissor(0,0,gl.canvas.width,gl.canvas.height);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);enabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};currentBoundFramebuffers={};currentDrawbuffers=
new WeakMap;defaultDrawbuffers=[];currentProgram=null;currentBlendingEnabled=!1;currentBlendDstAlpha=currentBlendSrcAlpha=currentBlendEquationAlpha=currentBlendDst=currentBlendSrc=currentBlendEquation=currentBlending=null;currentBlendColor=new Color(0,0,0);currentBlendAlpha=0;currentPremultipledAlpha=!1;currentPolygonOffsetUnits=currentPolygonOffsetFactor=currentLineWidth=currentCullFace=currentFlipSided=null;currentScissor.set(0,0,gl.canvas.width,gl.canvas.height);currentViewport.set(0,0,gl.canvas.width,
gl.canvas.height);colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset()}}}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){function resizeImage(image,needsNewCanvas,maxSize){var scale=1,dimensions=getDimensions(image);if(dimensions.width>maxSize||dimensions.height>maxSize)scale=maxSize/Math.max(dimensions.width,dimensions.height);if(1>scale){if("undefined"!==typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&image instanceof
HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&image instanceof ImageBitmap||"undefined"!==typeof VideoFrame&&image instanceof VideoFrame)return maxSize=Math.floor(scale*dimensions.width),scale=Math.floor(scale*dimensions.height),void 0===_canvas&&(_canvas=useOffscreenCanvas?new OffscreenCanvas(maxSize,scale):createElementNS("canvas")),needsNewCanvas=needsNewCanvas?useOffscreenCanvas?new OffscreenCanvas(maxSize,scale):createElementNS("canvas"):_canvas,needsNewCanvas.width=maxSize,needsNewCanvas.height=
scale,needsNewCanvas.getContext("2d").drawImage(image,0,0,maxSize,scale),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+dimensions.width+"x"+dimensions.height+") to ("+maxSize+"x"+scale+")."),needsNewCanvas;"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+dimensions.width+"x"+dimensions.height+").")}return image}function getInternalFormat(internalFormatName,glFormat,glType,colorSpace,forceLinearTransfer){forceLinearTransfer=void 0===forceLinearTransfer?
!1:forceLinearTransfer;if(null!==internalFormatName){if(void 0!==_gl[internalFormatName])return _gl[internalFormatName];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+internalFormatName+"'")}internalFormatName=glFormat;glFormat===_gl.RED&&(glType===_gl.FLOAT&&(internalFormatName=_gl.R32F),glType===_gl.HALF_FLOAT&&(internalFormatName=_gl.R16F),glType===_gl.UNSIGNED_BYTE&&(internalFormatName=_gl.R8));glFormat===_gl.RED_INTEGER&&(glType===_gl.UNSIGNED_BYTE&&(internalFormatName=
_gl.R8UI),glType===_gl.UNSIGNED_SHORT&&(internalFormatName=_gl.R16UI),glType===_gl.UNSIGNED_INT&&(internalFormatName=_gl.R32UI),glType===_gl.BYTE&&(internalFormatName=_gl.R8I),glType===_gl.SHORT&&(internalFormatName=_gl.R16I),glType===_gl.INT&&(internalFormatName=_gl.R32I));glFormat===_gl.RG&&(glType===_gl.FLOAT&&(internalFormatName=_gl.RG32F),glType===_gl.HALF_FLOAT&&(internalFormatName=_gl.RG16F),glType===_gl.UNSIGNED_BYTE&&(internalFormatName=_gl.RG8));glFormat===_gl.RG_INTEGER&&(glType===_gl.UNSIGNED_BYTE&&
(internalFormatName=_gl.RG8UI),glType===_gl.UNSIGNED_SHORT&&(internalFormatName=_gl.RG16UI),glType===_gl.UNSIGNED_INT&&(internalFormatName=_gl.RG32UI),glType===_gl.BYTE&&(internalFormatName=_gl.RG8I),glType===_gl.SHORT&&(internalFormatName=_gl.RG16I),glType===_gl.INT&&(internalFormatName=_gl.RG32I));glFormat===_gl.RGB_INTEGER&&(glType===_gl.UNSIGNED_BYTE&&(internalFormatName=_gl.RGB8UI),glType===_gl.UNSIGNED_SHORT&&(internalFormatName=_gl.RGB16UI),glType===_gl.UNSIGNED_INT&&(internalFormatName=_gl.RGB32UI),
glType===_gl.BYTE&&(internalFormatName=_gl.RGB8I),glType===_gl.SHORT&&(internalFormatName=_gl.RGB16I),glType===_gl.INT&&(internalFormatName=_gl.RGB32I));glFormat===_gl.RGBA_INTEGER&&(glType===_gl.UNSIGNED_BYTE&&(internalFormatName=_gl.RGBA8UI),glType===_gl.UNSIGNED_SHORT&&(internalFormatName=_gl.RGBA16UI),glType===_gl.UNSIGNED_INT&&(internalFormatName=_gl.RGBA32UI),glType===_gl.BYTE&&(internalFormatName=_gl.RGBA8I),glType===_gl.SHORT&&(internalFormatName=_gl.RGBA16I),glType===_gl.INT&&(internalFormatName=
_gl.RGBA32I));glFormat===_gl.RGB&&(glType===_gl.UNSIGNED_INT_5_9_9_9_REV&&(internalFormatName=_gl.RGB9_E5),glType===_gl.UNSIGNED_INT_10F_11F_11F_REV&&(internalFormatName=_gl.R11F_G11F_B10F));glFormat===_gl.RGBA&&(glFormat=forceLinearTransfer?"linear":ColorManagement.getTransfer(colorSpace),glType===_gl.FLOAT&&(internalFormatName=_gl.RGBA32F),glType===_gl.HALF_FLOAT&&(internalFormatName=_gl.RGBA16F),glType===_gl.UNSIGNED_BYTE&&(internalFormatName="srgb"===glFormat?_gl.SRGB8_ALPHA8:_gl.RGBA8),glType===
_gl.UNSIGNED_SHORT_4_4_4_4&&(internalFormatName=_gl.RGBA4),glType===_gl.UNSIGNED_SHORT_5_5_5_1&&(internalFormatName=_gl.RGB5_A1));internalFormatName!==_gl.R16F&&internalFormatName!==_gl.R32F&&internalFormatName!==_gl.RG16F&&internalFormatName!==_gl.RG32F&&internalFormatName!==_gl.RGBA16F&&internalFormatName!==_gl.RGBA32F||extensions.get("EXT_color_buffer_float");return internalFormatName}function getInternalDepthFormat(useStencil,depthType){if(useStencil)if(null===depthType||1014===depthType||1020===
depthType)var glInternalFormat=_gl.DEPTH24_STENCIL8;else 1015===depthType?glInternalFormat=_gl.DEPTH32F_STENCIL8:1012===depthType&&(glInternalFormat=_gl.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment."));else null===depthType||1014===depthType||1020===depthType?glInternalFormat=_gl.DEPTH_COMPONENT24:1015===depthType?glInternalFormat=_gl.DEPTH_COMPONENT32F:1012===depthType&&(glInternalFormat=_gl.DEPTH_COMPONENT16);return glInternalFormat}
function getMipLevels(texture,image){return!0===texture.generateMipmaps||texture.isFramebufferTexture&&1003!==texture.minFilter&&1006!==texture.minFilter?Math.log2(Math.max(image.width,image.height))+1:void 0!==texture.mipmaps&&0<texture.mipmaps.length?texture.mipmaps.length:texture.isCompressedTexture&&Array.isArray(texture.image)?image.mipmaps.length:1}function onTextureDispose(event){event=event.target;event.removeEventListener("dispose",onTextureDispose);var textureProperties=properties.get(event);
if(void 0!==textureProperties.__webglInit){var source=event.source,webglTextures=_sources.get(source);webglTextures&&(textureProperties=webglTextures[textureProperties.__cacheKey],textureProperties.usedTimes--,0===textureProperties.usedTimes&&deleteTexture(event),0===Object.keys(webglTextures).length&&_sources.delete(source));properties.remove(event)}event.isVideoTexture&&_videoTextures.delete(event)}function onRenderTargetDispose(event){event=event.target;event.removeEventListener("dispose",onRenderTargetDispose);
var renderTargetProperties=properties.get(event);event.depthTexture&&(event.depthTexture.dispose(),properties.remove(event.depthTexture));if(event.isWebGLCubeRenderTarget)for(var i=0;6>i;i++){if(Array.isArray(renderTargetProperties.__webglFramebuffer[i]))for(var level=0;level<renderTargetProperties.__webglFramebuffer[i].length;level++)_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i][level]);else _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer&&
_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i])}else{if(Array.isArray(renderTargetProperties.__webglFramebuffer))for(i=0;i<renderTargetProperties.__webglFramebuffer.length;i++)_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);else _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);renderTargetProperties.__webglMultisampledFramebuffer&&_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);
if(renderTargetProperties.__webglColorRenderbuffer)for(i=0;i<renderTargetProperties.__webglColorRenderbuffer.length;i++)renderTargetProperties.__webglColorRenderbuffer[i]&&_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer[i]);renderTargetProperties.__webglDepthRenderbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer)}renderTargetProperties=event.textures;i=0;for(level=renderTargetProperties.length;i<level;i++){var attachmentProperties=properties.get(renderTargetProperties[i]);
attachmentProperties.__webglTexture&&(_gl.deleteTexture(attachmentProperties.__webglTexture),info.memory.textures--);properties.remove(renderTargetProperties[i])}properties.remove(event)}function deleteTexture(texture){var textureProperties=properties.get(texture);_gl.deleteTexture(textureProperties.__webglTexture);delete _sources.get(texture.source)[textureProperties.__cacheKey];info.memory.textures--}function setTexture2D(texture,slot){var textureProperties=properties.get(texture);if(texture.isVideoTexture){var frame=
info.render.frame;_videoTextures.get(texture)!==frame&&(_videoTextures.set(texture,frame),texture.update())}if(!1===texture.isRenderTargetTexture&&!0!==texture.isExternalTexture&&0<texture.version&&textureProperties.__version!==texture.version)if(frame=texture.image,null===frame)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===frame.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{uploadTexture(textureProperties,
texture,slot);return}else texture.isExternalTexture&&(textureProperties.__webglTexture=texture.sourceTexture?texture.sourceTexture:null);state.bindTexture(_gl.TEXTURE_2D,textureProperties.__webglTexture,_gl.TEXTURE0+slot)}function setTextureParameters(textureType,texture){1015!==texture.type||!1!==extensions.has("OES_texture_float_linear")||1006!==texture.magFilter&&1007!==texture.magFilter&&1005!==texture.magFilter&&1008!==texture.magFilter&&1006!==texture.minFilter&&1007!==texture.minFilter&&1005!==
texture.minFilter&&1008!==texture.minFilter||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.");_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,wrappingToGL[texture.wrapT]);textureType!==_gl.TEXTURE_3D&&textureType!==_gl.TEXTURE_2D_ARRAY||_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_R,wrappingToGL[texture.wrapR]);_gl.texParameteri(textureType,
_gl.TEXTURE_MAG_FILTER,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterToGL[texture.minFilter]);texture.compareFunction&&(_gl.texParameteri(textureType,_gl.TEXTURE_COMPARE_MODE,_gl.COMPARE_REF_TO_TEXTURE),_gl.texParameteri(textureType,_gl.TEXTURE_COMPARE_FUNC,compareToGL[texture.compareFunction]));if(!0===extensions.has("EXT_texture_filter_anisotropic")&&!(1003===texture.magFilter||1005!==texture.minFilter&&1008!==texture.minFilter||1015===texture.type&&!1===
extensions.has("OES_texture_float_linear"))&&(1<texture.anisotropy||properties.get(texture).__currentAnisotropy)){var extension=extensions.get("EXT_texture_filter_anisotropic");_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy}}function initTexture(textureProperties,texture){var forceUpload=!1;void 0===textureProperties.__webglInit&&(textureProperties.__webglInit=
!0,texture.addEventListener("dispose",onTextureDispose));var source=texture.source,webglTextures=_sources.get(source);void 0===webglTextures&&(webglTextures={},_sources.set(source,webglTextures));source=[];source.push(texture.wrapS);source.push(texture.wrapT);source.push(texture.wrapR||0);source.push(texture.magFilter);source.push(texture.minFilter);source.push(texture.anisotropy);source.push(texture.internalFormat);source.push(texture.format);source.push(texture.type);source.push(texture.generateMipmaps);
source.push(texture.premultiplyAlpha);source.push(texture.flipY);source.push(texture.unpackAlignment);source.push(texture.colorSpace);source=source.join();if(source!==textureProperties.__cacheKey){void 0===webglTextures[source]&&(webglTextures[source]={texture:_gl.createTexture(),usedTimes:0},info.memory.textures++,forceUpload=!0);webglTextures[source].usedTimes++;var webglTexture=webglTextures[textureProperties.__cacheKey];void 0!==webglTexture&&(webglTextures[textureProperties.__cacheKey].usedTimes--,
0===webglTexture.usedTimes&&deleteTexture(texture));textureProperties.__cacheKey=source;textureProperties.__webglTexture=webglTextures[source].texture}return forceUpload}function updateTexture(texture,image,glFormat,glType){var updateRanges=texture.updateRanges;if(0===updateRanges.length)state.texSubImage2D(_gl.TEXTURE_2D,0,0,0,image.width,image.height,glFormat,glType,image.data);else{updateRanges.sort(function(a,b){return a.start-b.start});for(var mergeIndex=0,i=1;i<updateRanges.length;i++){var previousRange=
updateRanges[mergeIndex],range=updateRanges[i],currentRow=Math.floor(Math.floor(range.start/4)/image.width),previousRow=Math.floor(Math.floor(previousRange.start/4)/image.width);range.start<=previousRange.start+previousRange.count+1&&currentRow===previousRow&&Math.floor(Math.floor((range.start+range.count-1)/4)/image.width)===currentRow?previousRange.count=Math.max(previousRange.count,range.start+range.count-previousRange.start):(++mergeIndex,updateRanges[mergeIndex]=range)}updateRanges.length=mergeIndex+
1;mergeIndex=_gl.getParameter(_gl.UNPACK_ROW_LENGTH);i=_gl.getParameter(_gl.UNPACK_SKIP_PIXELS);previousRange=_gl.getParameter(_gl.UNPACK_SKIP_ROWS);_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH,image.width);range=0;for(currentRow=updateRanges.length;range<currentRow;range++){var range$321=updateRanges[range],pixelStart=Math.floor(range$321.start/4);previousRow=pixelStart%image.width;pixelStart=Math.floor(pixelStart/image.width);range$321=Math.ceil(range$321.count/4);_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS,
previousRow);_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS,pixelStart);state.texSubImage2D(_gl.TEXTURE_2D,0,previousRow,pixelStart,range$321,1,glFormat,glType,image.data)}texture.clearUpdateRanges();_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH,mergeIndex);_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS,i);_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS,previousRange)}}function uploadTexture(textureProperties,texture,slot){var textureType=_gl.TEXTURE_2D;if(texture.isDataArrayTexture||texture.isCompressedArrayTexture)textureType=_gl.TEXTURE_2D_ARRAY;
texture.isData3DTexture&&(textureType=_gl.TEXTURE_3D);var forceUpload=initTexture(textureProperties,texture),source=texture.source;state.bindTexture(textureType,textureProperties.__webglTexture,_gl.TEXTURE0+slot);var sourceProperties=properties.get(source);if(source.version!==sourceProperties.__version||!0===forceUpload){state.activeTexture(_gl.TEXTURE0+slot);slot=ColorManagement.getPrimaries(ColorManagement.workingColorSpace);var texturePrimaries=""===texture.colorSpace?null:ColorManagement.getPrimaries(texture.colorSpace);
slot=""===texture.colorSpace||slot===texturePrimaries?_gl.NONE:_gl.BROWSER_DEFAULT_WEBGL;_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha);_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment);_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,slot);var image=resizeImage(texture.image,!1,capabilities.maxTextureSize);image=verifyColorSpace(texture,image);slot=utils.convert(texture.format,texture.colorSpace);
texturePrimaries=utils.convert(texture.type);var glInternalFormat=getInternalFormat(texture.internalFormat,slot,texturePrimaries,texture.colorSpace,texture.isVideoTexture);setTextureParameters(textureType,texture);var mipmaps=texture.mipmaps,useTexStorage=!0!==texture.isVideoTexture,allocateMemory=void 0===sourceProperties.__version||!0===forceUpload;forceUpload=source.dataReady;var mipmap=getMipLevels(texture,image);if(texture.isDepthTexture)glInternalFormat=getInternalDepthFormat(1027===texture.format,
texture.type),allocateMemory&&(useTexStorage?state.texStorage2D(_gl.TEXTURE_2D,1,glInternalFormat,image.width,image.height):state.texImage2D(_gl.TEXTURE_2D,0,glInternalFormat,image.width,image.height,0,slot,texturePrimaries,null));else if(texture.isDataTexture)if(0<mipmaps.length){useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,mipmap,glInternalFormat,mipmaps[0].width,mipmaps[0].height);image=0;for(allocateMemory=mipmaps.length;image<allocateMemory;image++)mipmap=mipmaps[image],useTexStorage?
forceUpload&&state.texSubImage2D(_gl.TEXTURE_2D,image,0,0,mipmap.width,mipmap.height,slot,texturePrimaries,mipmap.data):state.texImage2D(_gl.TEXTURE_2D,image,glInternalFormat,mipmap.width,mipmap.height,0,slot,texturePrimaries,mipmap.data);texture.generateMipmaps=!1}else useTexStorage?(allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,mipmap,glInternalFormat,image.width,image.height),forceUpload&&updateTexture(texture,image,slot,texturePrimaries)):state.texImage2D(_gl.TEXTURE_2D,0,glInternalFormat,
image.width,image.height,0,slot,texturePrimaries,image.data);else if(texture.isCompressedTexture)if(texture.isCompressedArrayTexture){useTexStorage&&allocateMemory&&state.texStorage3D(_gl.TEXTURE_2D_ARRAY,mipmap,glInternalFormat,mipmaps[0].width,mipmaps[0].height,image.depth);allocateMemory=0;for(var il$323=mipmaps.length;allocateMemory<il$323;allocateMemory++)if(mipmap=mipmaps[allocateMemory],1023!==texture.format)if(null!==slot)if(useTexStorage){if(forceUpload)if(0<texture.layerUpdates.size){for(var layerByteLength=
getByteLength(mipmap.width,mipmap.height,texture.format,texture.type),$jscomp$iter$13=$jscomp.makeIterator(texture.layerUpdates),$jscomp$key$layerIndex=$jscomp$iter$13.next();!$jscomp$key$layerIndex.done;$jscomp$key$layerIndex=$jscomp$iter$13.next()){$jscomp$key$layerIndex=$jscomp$key$layerIndex.value;var layerData=mipmap.data.subarray($jscomp$key$layerIndex*layerByteLength/mipmap.data.BYTES_PER_ELEMENT,($jscomp$key$layerIndex+1)*layerByteLength/mipmap.data.BYTES_PER_ELEMENT);state.compressedTexSubImage3D(_gl.TEXTURE_2D_ARRAY,
allocateMemory,0,0,$jscomp$key$layerIndex,mipmap.width,mipmap.height,1,slot,layerData)}texture.clearLayerUpdates()}else state.compressedTexSubImage3D(_gl.TEXTURE_2D_ARRAY,allocateMemory,0,0,0,mipmap.width,mipmap.height,image.depth,slot,mipmap.data)}else state.compressedTexImage3D(_gl.TEXTURE_2D_ARRAY,allocateMemory,glInternalFormat,mipmap.width,mipmap.height,image.depth,0,mipmap.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
else useTexStorage?forceUpload&&state.texSubImage3D(_gl.TEXTURE_2D_ARRAY,allocateMemory,0,0,0,mipmap.width,mipmap.height,image.depth,slot,texturePrimaries,mipmap.data):state.texImage3D(_gl.TEXTURE_2D_ARRAY,allocateMemory,glInternalFormat,mipmap.width,mipmap.height,image.depth,0,slot,texturePrimaries,mipmap.data)}else for(useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_2D,mipmap,glInternalFormat,mipmaps[0].width,mipmaps[0].height),image=0,allocateMemory=mipmaps.length;image<allocateMemory;image++)mipmap=
mipmaps[image],1023!==texture.format?null!==slot?useTexStorage?forceUpload&&state.compressedTexSubImage2D(_gl.TEXTURE_2D,image,0,0,mipmap.width,mipmap.height,slot,mipmap.data):state.compressedTexImage2D(_gl.TEXTURE_2D,image,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_2D,image,0,0,mipmap.width,mipmap.height,slot,texturePrimaries,
mipmap.data):state.texImage2D(_gl.TEXTURE_2D,image,glInternalFormat,mipmap.width,mipmap.height,0,slot,texturePrimaries,mipmap.data);else if(texture.isDataArrayTexture)if(useTexStorage){if(allocateMemory&&state.texStorage3D(_gl.TEXTURE_2D_ARRAY,mipmap,glInternalFormat,image.width,image.height,image.depth),forceUpload)if(0<texture.layerUpdates.size){glInternalFormat=getByteLength(image.width,image.height,texture.format,texture.type);mipmaps=$jscomp.makeIterator(texture.layerUpdates);for($jscomp$key$layerIndex=
mipmaps.next();!$jscomp$key$layerIndex.done;$jscomp$key$layerIndex=mipmaps.next())useTexStorage=$jscomp$key$layerIndex.value,forceUpload=image.data.subarray(useTexStorage*glInternalFormat/image.data.BYTES_PER_ELEMENT,(useTexStorage+1)*glInternalFormat/image.data.BYTES_PER_ELEMENT),state.texSubImage3D(_gl.TEXTURE_2D_ARRAY,0,0,0,useTexStorage,image.width,image.height,1,slot,texturePrimaries,forceUpload);texture.clearLayerUpdates()}else state.texSubImage3D(_gl.TEXTURE_2D_ARRAY,0,0,0,0,image.width,image.height,
image.depth,slot,texturePrimaries,image.data)}else state.texImage3D(_gl.TEXTURE_2D_ARRAY,0,glInternalFormat,image.width,image.height,image.depth,0,slot,texturePrimaries,image.data);else if(texture.isData3DTexture)useTexStorage?(allocateMemory&&state.texStorage3D(_gl.TEXTURE_3D,mipmap,glInternalFormat,image.width,image.height,image.depth),forceUpload&&state.texSubImage3D(_gl.TEXTURE_3D,0,0,0,0,image.width,image.height,image.depth,slot,texturePrimaries,image.data)):state.texImage3D(_gl.TEXTURE_3D,0,
glInternalFormat,image.width,image.height,image.depth,0,slot,texturePrimaries,image.data);else if(texture.isFramebufferTexture){if(allocateMemory)if(useTexStorage)state.texStorage2D(_gl.TEXTURE_2D,mipmap,glInternalFormat,image.width,image.height);else for(mipmaps=image.width,useTexStorage=image.height,forceUpload=0;forceUpload<mipmap;forceUpload++)state.texImage2D(_gl.TEXTURE_2D,forceUpload,glInternalFormat,mipmaps,useTexStorage,0,slot,texturePrimaries,null),mipmaps>>=1,useTexStorage>>=1}else if(0<
mipmaps.length){useTexStorage&&allocateMemory&&(image=getDimensions(mipmaps[0]),state.texStorage2D(_gl.TEXTURE_2D,mipmap,glInternalFormat,image.width,image.height));image=0;for(allocateMemory=mipmaps.length;image<allocateMemory;image++)mipmap=mipmaps[image],useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_2D,image,0,0,slot,texturePrimaries,mipmap):state.texImage2D(_gl.TEXTURE_2D,image,glInternalFormat,slot,texturePrimaries,mipmap);texture.generateMipmaps=!1}else useTexStorage?(allocateMemory&&
(mipmaps=getDimensions(image),state.texStorage2D(_gl.TEXTURE_2D,mipmap,glInternalFormat,mipmaps.width,mipmaps.height)),forceUpload&&state.texSubImage2D(_gl.TEXTURE_2D,0,0,0,slot,texturePrimaries,image)):state.texImage2D(_gl.TEXTURE_2D,0,glInternalFormat,slot,texturePrimaries,image);texture.generateMipmaps&&_gl.generateMipmap(textureType);sourceProperties.__version=source.version;if(texture.onUpdate)texture.onUpdate(texture)}textureProperties.__version=texture.version}function setupFrameBufferTexture(framebuffer,
renderTarget,texture,attachment,textureTarget,level){var glFormat=utils.convert(texture.format,texture.colorSpace),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.colorSpace),renderTargetProperties=properties.get(renderTarget);texture=properties.get(texture);texture.__renderTarget=renderTarget;if(!renderTargetProperties.__hasExternalTextures){renderTargetProperties=Math.max(1,renderTarget.width>>level);var height=Math.max(1,renderTarget.height>>
level);textureTarget===_gl.TEXTURE_3D||textureTarget===_gl.TEXTURE_2D_ARRAY?state.texImage3D(textureTarget,level,glInternalFormat,renderTargetProperties,height,renderTarget.depth,0,glFormat,glType,null):state.texImage2D(textureTarget,level,glInternalFormat,renderTargetProperties,height,0,glFormat,glType,null)}state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);useMultisampledRTT(renderTarget)?multisampledRTTExt.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER,attachment,textureTarget,texture.__webglTexture,
0,getRenderTargetSamples(renderTarget)):(textureTarget===_gl.TEXTURE_2D||textureTarget>=_gl.TEXTURE_CUBE_MAP_POSITIVE_X&&textureTarget<=_gl.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&_gl.framebufferTexture2D(_gl.FRAMEBUFFER,attachment,textureTarget,texture.__webglTexture,level);state.bindFramebuffer(_gl.FRAMEBUFFER,null)}function setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer);if(renderTarget.depthBuffer){var depthTexture=renderTarget.depthTexture;
depthTexture=getInternalDepthFormat(renderTarget.stencilBuffer,depthTexture&&depthTexture.isDepthTexture?depthTexture.type:null);var glAttachmentType=renderTarget.stencilBuffer?_gl.DEPTH_STENCIL_ATTACHMENT:_gl.DEPTH_ATTACHMENT,samples=getRenderTargetSamples(renderTarget);useMultisampledRTT(renderTarget)?multisampledRTTExt.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER,samples,depthTexture,renderTarget.width,renderTarget.height):isMultisample?_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,
samples,depthTexture,renderTarget.width,renderTarget.height):_gl.renderbufferStorage(_gl.RENDERBUFFER,depthTexture,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,glAttachmentType,_gl.RENDERBUFFER,renderbuffer)}else for(renderbuffer=renderTarget.textures,depthTexture=0;depthTexture<renderbuffer.length;depthTexture++){glAttachmentType=renderbuffer[depthTexture];samples=utils.convert(glAttachmentType.format,glAttachmentType.colorSpace);var glType=utils.convert(glAttachmentType.type);
glAttachmentType=getInternalFormat(glAttachmentType.internalFormat,samples,glType,glAttachmentType.colorSpace);samples=getRenderTargetSamples(renderTarget);isMultisample&&!1===useMultisampledRTT(renderTarget)?_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,samples,glAttachmentType,renderTarget.width,renderTarget.height):useMultisampledRTT(renderTarget)?multisampledRTTExt.renderbufferStorageMultisampleEXT(_gl.RENDERBUFFER,samples,glAttachmentType,renderTarget.width,renderTarget.height):_gl.renderbufferStorage(_gl.RENDERBUFFER,
glAttachmentType,renderTarget.width,renderTarget.height)}_gl.bindRenderbuffer(_gl.RENDERBUFFER,null)}function setupDepthTexture(framebuffer,renderTarget){if(renderTarget&&renderTarget.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);if(!renderTarget.depthTexture||!renderTarget.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");framebuffer=properties.get(renderTarget.depthTexture);
framebuffer.__renderTarget=renderTarget;framebuffer.__webglTexture&&renderTarget.depthTexture.image.width===renderTarget.width&&renderTarget.depthTexture.image.height===renderTarget.height||(renderTarget.depthTexture.image.width=renderTarget.width,renderTarget.depthTexture.image.height=renderTarget.height,renderTarget.depthTexture.needsUpdate=!0);setTexture2D(renderTarget.depthTexture,0);framebuffer=framebuffer.__webglTexture;var samples=getRenderTargetSamples(renderTarget);if(1026===renderTarget.depthTexture.format)useMultisampledRTT(renderTarget)?
multisampledRTTExt.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.TEXTURE_2D,framebuffer,0,samples):_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.TEXTURE_2D,framebuffer,0);else if(1027===renderTarget.depthTexture.format)useMultisampledRTT(renderTarget)?multisampledRTTExt.framebufferTexture2DMultisampleEXT(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.TEXTURE_2D,framebuffer,0,samples):_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,
_gl.TEXTURE_2D,framebuffer,0);else throw Error("Unknown depthTexture format");}function setupDepthRenderbuffer(renderTarget){var renderTargetProperties=properties.get(renderTarget),isCube=!0===renderTarget.isWebGLCubeRenderTarget;if(renderTargetProperties.__boundDepthTexture!==renderTarget.depthTexture){var depthTexture=renderTarget.depthTexture;renderTargetProperties.__depthDisposeCallback&&renderTargetProperties.__depthDisposeCallback();if(depthTexture){var disposeEvent=function(){delete renderTargetProperties.__boundDepthTexture;
delete renderTargetProperties.__depthDisposeCallback;depthTexture.removeEventListener("dispose",disposeEvent)};depthTexture.addEventListener("dispose",disposeEvent);renderTargetProperties.__depthDisposeCallback=disposeEvent}renderTargetProperties.__boundDepthTexture=depthTexture}if(renderTarget.depthTexture&&!renderTargetProperties.__autoAllocateDepthBuffer){if(isCube)throw Error("target.depthTexture not supported in Cube render targets");(isCube=renderTarget.texture.mipmaps)&&0<isCube.length?setupDepthTexture(renderTargetProperties.__webglFramebuffer[0],
renderTarget):setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget)}else if(isCube)for(renderTargetProperties.__webglDepthbuffer=[],isCube=0;6>isCube;isCube++)if(state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer[isCube]),void 0===renderTargetProperties.__webglDepthbuffer[isCube])renderTargetProperties.__webglDepthbuffer[isCube]=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[isCube],renderTarget,!1);else{var glAttachmentType=
renderTarget.stencilBuffer?_gl.DEPTH_STENCIL_ATTACHMENT:_gl.DEPTH_ATTACHMENT,renderbuffer=renderTargetProperties.__webglDepthbuffer[isCube];_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,glAttachmentType,_gl.RENDERBUFFER,renderbuffer)}else(isCube=renderTarget.texture.mipmaps)&&0<isCube.length?state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer[0]):state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer),
void 0===renderTargetProperties.__webglDepthbuffer?(renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,!1)):(renderTarget=renderTarget.stencilBuffer?_gl.DEPTH_STENCIL_ATTACHMENT:_gl.DEPTH_ATTACHMENT,isCube=renderTargetProperties.__webglDepthbuffer,_gl.bindRenderbuffer(_gl.RENDERBUFFER,isCube),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,renderTarget,_gl.RENDERBUFFER,isCube));state.bindFramebuffer(_gl.FRAMEBUFFER,
null)}function getRenderTargetSamples(renderTarget){return Math.min(capabilities.maxSamples,renderTarget.samples)}function useMultisampledRTT(renderTarget){var renderTargetProperties=properties.get(renderTarget);return 0<renderTarget.samples&&!0===extensions.has("WEBGL_multisampled_render_to_texture")&&!1!==renderTargetProperties.__useRenderToTexture}function verifyColorSpace(texture,image){var colorSpace=texture.colorSpace,format=texture.format,type=texture.type;if(!0===texture.isCompressedTexture||
!0===texture.isVideoTexture)return image;"srgb-linear"!==colorSpace&&""!==colorSpace&&("srgb"===ColorManagement.getTransfer(colorSpace)?(1023!==format||1009!==type)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",colorSpace));return image}function getDimensions(image){"undefined"!==typeof HTMLImageElement&&image instanceof HTMLImageElement?(_imageDimensions.width=image.naturalWidth||
image.width,_imageDimensions.height=image.naturalHeight||image.height):"undefined"!==typeof VideoFrame&&image instanceof VideoFrame?(_imageDimensions.width=image.displayWidth,_imageDimensions.height=image.displayHeight):(_imageDimensions.width=image.width,_imageDimensions.height=image.height);return _imageDimensions}var multisampledRTTExt=extensions.has("WEBGL_multisampled_render_to_texture")?extensions.get("WEBGL_multisampled_render_to_texture"):null,supportsInvalidateFramebuffer="undefined"===typeof navigator?
!1:/OculusBrowser/g.test(navigator.userAgent),_imageDimensions=new Vector2,_videoTextures=new WeakMap,_canvas,_sources=new WeakMap,useOffscreenCanvas=!1;try{useOffscreenCanvas="undefined"!==typeof OffscreenCanvas&&null!==(new OffscreenCanvas(1,1)).getContext("2d")}catch(err){}var textureUnits=0,$jscomp$compprop5={},wrappingToGL=($jscomp$compprop5[1E3]=_gl.REPEAT,$jscomp$compprop5[1001]=_gl.CLAMP_TO_EDGE,$jscomp$compprop5[1002]=_gl.MIRRORED_REPEAT,$jscomp$compprop5);$jscomp$compprop5={};var filterToGL=
($jscomp$compprop5[1003]=_gl.NEAREST,$jscomp$compprop5[1004]=_gl.NEAREST_MIPMAP_NEAREST,$jscomp$compprop5[1005]=_gl.NEAREST_MIPMAP_LINEAR,$jscomp$compprop5[1006]=_gl.LINEAR,$jscomp$compprop5[1007]=_gl.LINEAR_MIPMAP_NEAREST,$jscomp$compprop5[1008]=_gl.LINEAR_MIPMAP_LINEAR,$jscomp$compprop5);$jscomp$compprop5={};var compareToGL=($jscomp$compprop5[512]=_gl.NEVER,$jscomp$compprop5[519]=_gl.ALWAYS,$jscomp$compprop5[513]=_gl.LESS,$jscomp$compprop5[515]=_gl.LEQUAL,$jscomp$compprop5[514]=_gl.EQUAL,$jscomp$compprop5[518]=
_gl.GEQUAL,$jscomp$compprop5[516]=_gl.GREATER,$jscomp$compprop5[517]=_gl.NOTEQUAL,$jscomp$compprop5),invalidationArrayRead=[],invalidationArrayDraw=[];this.allocateTextureUnit=function(){var textureUnit=textureUnits;textureUnit>=capabilities.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+textureUnit+" texture units while this GPU supports only "+capabilities.maxTextures);textureUnits+=1;return textureUnit};this.resetTextureUnits=function(){textureUnits=0};this.setTexture2D=setTexture2D;
this.setTexture2DArray=function(texture,slot){var textureProperties=properties.get(texture);!1===texture.isRenderTargetTexture&&0<texture.version&&textureProperties.__version!==texture.version?uploadTexture(textureProperties,texture,slot):state.bindTexture(_gl.TEXTURE_2D_ARRAY,textureProperties.__webglTexture,_gl.TEXTURE0+slot)};this.setTexture3D=function(texture,slot){var textureProperties=properties.get(texture);!1===texture.isRenderTargetTexture&&0<texture.version&&textureProperties.__version!==
texture.version?uploadTexture(textureProperties,texture,slot):state.bindTexture(_gl.TEXTURE_3D,textureProperties.__webglTexture,_gl.TEXTURE0+slot)};this.setTextureCube=function(texture,slot){var textureProperties=properties.get(texture);if(0<texture.version&&textureProperties.__version!==texture.version){if(6===texture.image.length){var forceUpload=initTexture(textureProperties,texture),source=texture.source;state.bindTexture(_gl.TEXTURE_CUBE_MAP,textureProperties.__webglTexture,_gl.TEXTURE0+slot);
var sourceProperties=properties.get(source);if(source.version!==sourceProperties.__version||!0===forceUpload){state.activeTexture(_gl.TEXTURE0+slot);slot=ColorManagement.getPrimaries(ColorManagement.workingColorSpace);var texturePrimaries=""===texture.colorSpace?null:ColorManagement.getPrimaries(texture.colorSpace);slot=""===texture.colorSpace||slot===texturePrimaries?_gl.NONE:_gl.BROWSER_DEFAULT_WEBGL;_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
texture.premultiplyAlpha);_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment);_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,slot);var isCompressed=texture.isCompressedTexture||texture.image[0].isCompressedTexture,isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;slot=[];for(texturePrimaries=0;6>texturePrimaries;texturePrimaries++)slot[texturePrimaries]=isCompressed||isDataTexture?isDataTexture?texture.image[texturePrimaries].image:texture.image[texturePrimaries]:resizeImage(texture.image[texturePrimaries],
!0,capabilities.maxCubemapSize),slot[texturePrimaries]=verifyColorSpace(texture,slot[texturePrimaries]);var image=slot[0];texturePrimaries=utils.convert(texture.format,texture.colorSpace);var glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,texturePrimaries,glType,texture.colorSpace),useTexStorage=!0!==texture.isVideoTexture,allocateMemory=void 0===sourceProperties.__version||!0===forceUpload;forceUpload=source.dataReady;var levels=getMipLevels(texture,
image);setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture);if(isCompressed)for(useTexStorage&&allocateMemory&&state.texStorage2D(_gl.TEXTURE_CUBE_MAP,levels,glInternalFormat,image.width,image.height),isDataTexture=0;6>isDataTexture;isDataTexture++)for(isCompressed=slot[isDataTexture].mipmaps,levels=0;levels<isCompressed.length;levels++)image=isCompressed[levels],1023!==texture.format?null!==texturePrimaries?useTexStorage?forceUpload&&state.compressedTexSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+isDataTexture,
levels,0,0,image.width,image.height,texturePrimaries,image.data):state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+isDataTexture,levels,glInternalFormat,image.width,image.height,0,image.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+isDataTexture,levels,0,0,image.width,image.height,texturePrimaries,glType,image.data):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+
isDataTexture,levels,glInternalFormat,image.width,image.height,0,texturePrimaries,glType,image.data);else for(isCompressed=texture.mipmaps,useTexStorage&&allocateMemory&&(0<isCompressed.length&&levels++,image=getDimensions(slot[0]),state.texStorage2D(_gl.TEXTURE_CUBE_MAP,levels,glInternalFormat,image.width,image.height)),levels=0;6>levels;levels++)if(isDataTexture)for(useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+levels,0,0,0,slot[levels].width,slot[levels].height,
texturePrimaries,glType,slot[levels].data):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+levels,0,glInternalFormat,slot[levels].width,slot[levels].height,0,texturePrimaries,glType,slot[levels].data),image=0;image<isCompressed.length;image++)allocateMemory=isCompressed[image].image[levels].image,useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+levels,image+1,0,0,allocateMemory.width,allocateMemory.height,texturePrimaries,glType,allocateMemory.data):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+
levels,image+1,glInternalFormat,allocateMemory.width,allocateMemory.height,0,texturePrimaries,glType,allocateMemory.data);else for(useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+levels,0,0,0,texturePrimaries,glType,slot[levels]):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+levels,0,glInternalFormat,texturePrimaries,glType,slot[levels]),image=0;image<isCompressed.length;image++)allocateMemory=isCompressed[image],useTexStorage?forceUpload&&state.texSubImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+
levels,image+1,0,0,texturePrimaries,glType,allocateMemory.image[levels]):state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+levels,image+1,glInternalFormat,texturePrimaries,glType,allocateMemory.image[levels]);texture.generateMipmaps&&_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);sourceProperties.__version=source.version;if(texture.onUpdate)texture.onUpdate(texture)}textureProperties.__version=texture.version}}else state.bindTexture(_gl.TEXTURE_CUBE_MAP,textureProperties.__webglTexture,_gl.TEXTURE0+slot)};
this.rebindTextures=function(renderTarget,colorTexture,depthTexture){var renderTargetProperties=properties.get(renderTarget);void 0!==colorTexture&&setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,renderTarget.texture,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D,0);void 0!==depthTexture&&setupDepthRenderbuffer(renderTarget)};this.setupRenderTarget=function(renderTarget){var texture=renderTarget.texture,renderTargetProperties=properties.get(renderTarget),textureProperties=properties.get(texture);
renderTarget.addEventListener("dispose",onRenderTargetDispose);var textures=renderTarget.textures,isCube=!0===renderTarget.isWebGLCubeRenderTarget,isMultipleRenderTargets=1<textures.length;isMultipleRenderTargets||(void 0===textureProperties.__webglTexture&&(textureProperties.__webglTexture=_gl.createTexture()),textureProperties.__version=texture.version,info.memory.textures++);if(isCube){renderTargetProperties.__webglFramebuffer=[];for(var i=0;6>i;i++)if(texture.mipmaps&&0<texture.mipmaps.length){renderTargetProperties.__webglFramebuffer[i]=
[];for(var level=0;level<texture.mipmaps.length;level++)renderTargetProperties.__webglFramebuffer[i][level]=_gl.createFramebuffer()}else renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer()}else{if(texture.mipmaps&&0<texture.mipmaps.length)for(renderTargetProperties.__webglFramebuffer=[],i=0;i<texture.mipmaps.length;i++)renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();else renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultipleRenderTargets)for(i=
0,level=textures.length;i<level;i++){var attachmentProperties=properties.get(textures[i]);void 0===attachmentProperties.__webglTexture&&(attachmentProperties.__webglTexture=_gl.createTexture(),info.memory.textures++)}if(0<renderTarget.samples&&!1===useMultisampledRTT(renderTarget)){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=[];state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer);
for(i=0;i<textures.length;i++){level=textures[i];renderTargetProperties.__webglColorRenderbuffer[i]=_gl.createRenderbuffer();_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i]);attachmentProperties=utils.convert(level.format,level.colorSpace);var glType=utils.convert(level.type);level=getInternalFormat(level.internalFormat,attachmentProperties,glType,level.colorSpace,!0===renderTarget.isXRRenderTarget);attachmentProperties=getRenderTargetSamples(renderTarget);
_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER,attachmentProperties,level,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i])}_gl.bindRenderbuffer(_gl.RENDERBUFFER,null);renderTarget.depthBuffer&&(renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,!0));state.bindFramebuffer(_gl.FRAMEBUFFER,
null)}}if(isCube){state.bindTexture(_gl.TEXTURE_CUBE_MAP,textureProperties.__webglTexture);setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture);for(textures=0;6>textures;textures++)if(texture.mipmaps&&0<texture.mipmaps.length)for(textureProperties=0;textureProperties<texture.mipmaps.length;textureProperties++)setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[textures][textureProperties],renderTarget,texture,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+textures,textureProperties);
else setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[textures],renderTarget,texture,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+textures,0);texture.generateMipmaps&&_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP)}else if(isMultipleRenderTargets)for(texture=0,textureProperties=textures.length;texture<textureProperties;texture++){isCube=textures[texture];isMultipleRenderTargets=properties.get(isCube);i=_gl.TEXTURE_2D;if(renderTarget.isWebGL3DRenderTarget||renderTarget.isWebGLArrayRenderTarget)i=
renderTarget.isWebGL3DRenderTarget?_gl.TEXTURE_3D:_gl.TEXTURE_2D_ARRAY;state.bindTexture(i,isMultipleRenderTargets.__webglTexture);setTextureParameters(i,isCube);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,isCube,_gl.COLOR_ATTACHMENT0+texture,i,0);isCube.generateMipmaps&&_gl.generateMipmap(i)}else{textures=_gl.TEXTURE_2D;if(renderTarget.isWebGL3DRenderTarget||renderTarget.isWebGLArrayRenderTarget)textures=renderTarget.isWebGL3DRenderTarget?_gl.TEXTURE_3D:_gl.TEXTURE_2D_ARRAY;
state.bindTexture(textures,textureProperties.__webglTexture);setTextureParameters(textures,texture);if(texture.mipmaps&&0<texture.mipmaps.length)for(textureProperties=0;textureProperties<texture.mipmaps.length;textureProperties++)setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[textureProperties],renderTarget,texture,_gl.COLOR_ATTACHMENT0,textures,textureProperties);else setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,texture,_gl.COLOR_ATTACHMENT0,textures,
0);texture.generateMipmaps&&_gl.generateMipmap(textures)}state.unbindTexture();renderTarget.depthBuffer&&setupDepthRenderbuffer(renderTarget)};this.updateRenderTargetMipmap=function(renderTarget){for(var textures=renderTarget.textures,i=0,il=textures.length;i<il;i++){var texture=textures[i];if(texture.generateMipmaps){var targetType=renderTarget.isWebGLCubeRenderTarget?_gl.TEXTURE_CUBE_MAP:renderTarget.isWebGL3DRenderTarget?_gl.TEXTURE_3D:renderTarget.isWebGLArrayRenderTarget||renderTarget.isCompressedArrayTexture?
_gl.TEXTURE_2D_ARRAY:_gl.TEXTURE_2D;texture=properties.get(texture).__webglTexture;state.bindTexture(targetType,texture);_gl.generateMipmap(targetType);state.unbindTexture()}}};this.updateMultisampleRenderTarget=function(renderTarget){if(0<renderTarget.samples)if(!1===useMultisampledRTT(renderTarget)){var textures=renderTarget.textures,width=renderTarget.width,height=renderTarget.height,mask=_gl.COLOR_BUFFER_BIT,depthStyle=renderTarget.stencilBuffer?_gl.DEPTH_STENCIL_ATTACHMENT:_gl.DEPTH_ATTACHMENT,
renderTargetProperties=properties.get(renderTarget),isMultipleRenderTargets=1<textures.length;if(isMultipleRenderTargets)for(var i=0;i<textures.length;i++)state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.RENDERBUFFER,null),state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer),_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+i,_gl.TEXTURE_2D,
null,0);state.bindFramebuffer(_gl.READ_FRAMEBUFFER,renderTargetProperties.__webglMultisampledFramebuffer);(i=renderTarget.texture.mipmaps)&&0<i.length?state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,renderTargetProperties.__webglFramebuffer[0]):state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,renderTargetProperties.__webglFramebuffer);for(i=0;i<textures.length;i++){renderTarget.resolveDepthBuffer&&(renderTarget.depthBuffer&&(mask|=_gl.DEPTH_BUFFER_BIT),renderTarget.stencilBuffer&&renderTarget.resolveStencilBuffer&&
(mask|=_gl.STENCIL_BUFFER_BIT));if(isMultipleRenderTargets){_gl.framebufferRenderbuffer(_gl.READ_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[i]);var webglTexture=properties.get(textures[i]).__webglTexture;_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D,webglTexture,0)}_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,_gl.NEAREST);!0===supportsInvalidateFramebuffer&&(invalidationArrayRead.length=0,invalidationArrayDraw.length=
0,invalidationArrayRead.push(_gl.COLOR_ATTACHMENT0+i),renderTarget.depthBuffer&&!1===renderTarget.resolveDepthBuffer&&(invalidationArrayRead.push(depthStyle),invalidationArrayDraw.push(depthStyle),_gl.invalidateFramebuffer(_gl.DRAW_FRAMEBUFFER,invalidationArrayDraw)),_gl.invalidateFramebuffer(_gl.READ_FRAMEBUFFER,invalidationArrayRead))}state.bindFramebuffer(_gl.READ_FRAMEBUFFER,null);state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,null);if(isMultipleRenderTargets)for(renderTarget=0;renderTarget<textures.length;renderTarget++)state.bindFramebuffer(_gl.FRAMEBUFFER,
renderTargetProperties.__webglMultisampledFramebuffer),_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+renderTarget,_gl.RENDERBUFFER,renderTargetProperties.__webglColorRenderbuffer[renderTarget]),width=properties.get(textures[renderTarget]).__webglTexture,state.bindFramebuffer(_gl.FRAMEBUFFER,renderTargetProperties.__webglFramebuffer),_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0+renderTarget,_gl.TEXTURE_2D,width,0);state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,
renderTargetProperties.__webglMultisampledFramebuffer)}else renderTarget.depthBuffer&&!1===renderTarget.resolveDepthBuffer&&supportsInvalidateFramebuffer&&_gl.invalidateFramebuffer(_gl.DRAW_FRAMEBUFFER,[renderTarget.stencilBuffer?_gl.DEPTH_STENCIL_ATTACHMENT:_gl.DEPTH_ATTACHMENT])};this.setupDepthRenderbuffer=setupDepthRenderbuffer;this.setupFrameBufferTexture=setupFrameBufferTexture;this.useMultisampledRTT=useMultisampledRTT}function WebGLUtils(gl,extensions){return{convert:function(p,colorSpace){var transfer=
ColorManagement.getTransfer(void 0===colorSpace?"":colorSpace);if(1009===p)return gl.UNSIGNED_BYTE;if(1017===p)return gl.UNSIGNED_SHORT_4_4_4_4;if(1018===p)return gl.UNSIGNED_SHORT_5_5_5_1;if(35902===p)return gl.UNSIGNED_INT_5_9_9_9_REV;if(35899===p)return gl.UNSIGNED_INT_10F_11F_11F_REV;if(1010===p)return gl.BYTE;if(1011===p)return gl.SHORT;if(1012===p)return gl.UNSIGNED_SHORT;if(1013===p)return gl.INT;if(1014===p)return gl.UNSIGNED_INT;if(1015===p)return gl.FLOAT;if(1016===p)return gl.HALF_FLOAT;
if(1021===p)return gl.ALPHA;if(1022===p)return gl.RGB;if(1023===p)return gl.RGBA;if(1026===p)return gl.DEPTH_COMPONENT;if(1027===p)return gl.DEPTH_STENCIL;if(1028===p)return gl.RED;if(1029===p)return gl.RED_INTEGER;if(1030===p)return gl.RG;if(1031===p)return gl.RG_INTEGER;if(1033===p)return gl.RGBA_INTEGER;if(33776===p||33777===p||33778===p||33779===p)if("srgb"===transfer)if(colorSpace=extensions.get("WEBGL_compressed_texture_s3tc_srgb"),null!==colorSpace){if(33776===p)return colorSpace.COMPRESSED_SRGB_S3TC_DXT1_EXT;
if(33777===p)return colorSpace.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===p)return colorSpace.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===p)return colorSpace.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(colorSpace=extensions.get("WEBGL_compressed_texture_s3tc"),null!==colorSpace){if(33776===p)return colorSpace.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===p)return colorSpace.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===p)return colorSpace.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===p)return colorSpace.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;
if(35840===p||35841===p||35842===p||35843===p)if(colorSpace=extensions.get("WEBGL_compressed_texture_pvrtc"),null!==colorSpace){if(35840===p)return colorSpace.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===p)return colorSpace.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===p)return colorSpace.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===p)return colorSpace.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(36196===p||37492===p||37496===p)if(colorSpace=extensions.get("WEBGL_compressed_texture_etc"),null!==
colorSpace){if(36196===p||37492===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ETC2:colorSpace.COMPRESSED_RGB8_ETC2;if(37496===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:colorSpace.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(37808===p||37809===p||37810===p||37811===p||37812===p||37813===p||37814===p||37815===p||37816===p||37817===p||37818===p||37819===p||37820===p||37821===p)if(colorSpace=extensions.get("WEBGL_compressed_texture_astc"),null!==colorSpace){if(37808===
p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:colorSpace.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:colorSpace.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:colorSpace.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:colorSpace.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===p)return"srgb"===
transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:colorSpace.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:colorSpace.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:colorSpace.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:colorSpace.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===p)return"srgb"===transfer?
colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:colorSpace.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:colorSpace.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:colorSpace.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:colorSpace.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===p)return"srgb"===
transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:colorSpace.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:colorSpace.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(36492===p||36494===p||36495===p)if(colorSpace=extensions.get("EXT_texture_compression_bptc"),null!==colorSpace){if(36492===p)return"srgb"===transfer?colorSpace.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:colorSpace.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===p)return colorSpace.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
if(36495===p)return colorSpace.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(36283===p||36284===p||36285===p||36286===p)if(colorSpace=extensions.get("EXT_texture_compression_rgtc"),null!==colorSpace){if(36283===p)return colorSpace.COMPRESSED_RED_RGTC1_EXT;if(36284===p)return colorSpace.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===p)return colorSpace.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===p)return colorSpace.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return 1020===p?gl.UNSIGNED_INT_24_8:
void 0!==gl[p]?gl[p]:null}}}function WebGLMaterials(renderer,properties){function refreshTransformUniform(map,uniform){!0===map.matrixAutoUpdate&&map.updateMatrix();uniform.value.copy(map.matrix)}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;material.color&&uniforms.diffuse.value.copy(material.color);material.emissive&&uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);material.map&&(uniforms.map.value=material.map,
refreshTransformUniform(material.map,uniforms.mapTransform));material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap,refreshTransformUniform(material.alphaMap,uniforms.alphaMapTransform));material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,refreshTransformUniform(material.bumpMap,uniforms.bumpMapTransform),uniforms.bumpScale.value=material.bumpScale,1===material.side&&(uniforms.bumpScale.value*=-1));material.normalMap&&(uniforms.normalMap.value=material.normalMap,refreshTransformUniform(material.normalMap,
uniforms.normalMapTransform),uniforms.normalScale.value.copy(material.normalScale),1===material.side&&uniforms.normalScale.value.negate());material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,refreshTransformUniform(material.displacementMap,uniforms.displacementMapTransform),uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap,refreshTransformUniform(material.emissiveMap,
uniforms.emissiveMapTransform));material.specularMap&&(uniforms.specularMap.value=material.specularMap,refreshTransformUniform(material.specularMap,uniforms.specularMapTransform));0<material.alphaTest&&(uniforms.alphaTest.value=material.alphaTest);var materialProperties=properties.get(material),envMap=materialProperties.envMap;materialProperties=materialProperties.envMapRotation;envMap&&(uniforms.envMap.value=envMap,_e1.copy(materialProperties),_e1.x*=-1,_e1.y*=-1,_e1.z*=-1,envMap.isCubeTexture&&
!1===envMap.isRenderTargetTexture&&(_e1.y*=-1,_e1.z*=-1),uniforms.envMapRotation.value.setFromMatrix4(_m1.makeRotationFromEuler(_e1)),uniforms.flipEnvMap.value=envMap.isCubeTexture&&!1===envMap.isRenderTargetTexture?-1:1,uniforms.reflectivity.value=material.reflectivity,uniforms.ior.value=material.ior,uniforms.refractionRatio.value=material.refractionRatio);material.lightMap&&(uniforms.lightMap.value=material.lightMap,uniforms.lightMapIntensity.value=material.lightMapIntensity,refreshTransformUniform(material.lightMap,
uniforms.lightMapTransform));material.aoMap&&(uniforms.aoMap.value=material.aoMap,uniforms.aoMapIntensity.value=material.aoMapIntensity,refreshTransformUniform(material.aoMap,uniforms.aoMapTransform))}return{refreshFogUniforms:function(uniforms,fog){fog.color.getRGB(uniforms.fogColor.value,getUnlitUniformColorSpace(renderer));fog.isFog?(uniforms.fogNear.value=fog.near,uniforms.fogFar.value=fog.far):fog.isFogExp2&&(uniforms.fogDensity.value=fog.density)},refreshMaterialUniforms:function(uniforms,material,
pixelRatio,height,transmissionRenderTarget){material.isMeshBasicMaterial?refreshUniformsCommon(uniforms,material):material.isMeshLambertMaterial?refreshUniformsCommon(uniforms,material):material.isMeshToonMaterial?(refreshUniformsCommon(uniforms,material),material.gradientMap&&(uniforms.gradientMap.value=material.gradientMap)):material.isMeshPhongMaterial?(refreshUniformsCommon(uniforms,material),uniforms.specular.value.copy(material.specular),uniforms.shininess.value=Math.max(material.shininess,
1E-4)):material.isMeshStandardMaterial?(refreshUniformsCommon(uniforms,material),uniforms.metalness.value=material.metalness,material.metalnessMap&&(uniforms.metalnessMap.value=material.metalnessMap,refreshTransformUniform(material.metalnessMap,uniforms.metalnessMapTransform)),uniforms.roughness.value=material.roughness,material.roughnessMap&&(uniforms.roughnessMap.value=material.roughnessMap,refreshTransformUniform(material.roughnessMap,uniforms.roughnessMapTransform)),material.envMap&&(uniforms.envMapIntensity.value=
material.envMapIntensity),material.isMeshPhysicalMaterial&&(uniforms.ior.value=material.ior,0<material.sheen&&(uniforms.sheenColor.value.copy(material.sheenColor).multiplyScalar(material.sheen),uniforms.sheenRoughness.value=material.sheenRoughness,material.sheenColorMap&&(uniforms.sheenColorMap.value=material.sheenColorMap,refreshTransformUniform(material.sheenColorMap,uniforms.sheenColorMapTransform)),material.sheenRoughnessMap&&(uniforms.sheenRoughnessMap.value=material.sheenRoughnessMap,refreshTransformUniform(material.sheenRoughnessMap,
uniforms.sheenRoughnessMapTransform))),0<material.clearcoat&&(uniforms.clearcoat.value=material.clearcoat,uniforms.clearcoatRoughness.value=material.clearcoatRoughness,material.clearcoatMap&&(uniforms.clearcoatMap.value=material.clearcoatMap,refreshTransformUniform(material.clearcoatMap,uniforms.clearcoatMapTransform)),material.clearcoatRoughnessMap&&(uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap,refreshTransformUniform(material.clearcoatRoughnessMap,uniforms.clearcoatRoughnessMapTransform)),
material.clearcoatNormalMap&&(uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap,refreshTransformUniform(material.clearcoatNormalMap,uniforms.clearcoatNormalMapTransform),uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale),1===material.side&&uniforms.clearcoatNormalScale.value.negate())),0<material.dispersion&&(uniforms.dispersion.value=material.dispersion),0<material.iridescence&&(uniforms.iridescence.value=material.iridescence,uniforms.iridescenceIOR.value=material.iridescenceIOR,
uniforms.iridescenceThicknessMinimum.value=material.iridescenceThicknessRange[0],uniforms.iridescenceThicknessMaximum.value=material.iridescenceThicknessRange[1],material.iridescenceMap&&(uniforms.iridescenceMap.value=material.iridescenceMap,refreshTransformUniform(material.iridescenceMap,uniforms.iridescenceMapTransform)),material.iridescenceThicknessMap&&(uniforms.iridescenceThicknessMap.value=material.iridescenceThicknessMap,refreshTransformUniform(material.iridescenceThicknessMap,uniforms.iridescenceThicknessMapTransform))),
0<material.transmission&&(uniforms.transmission.value=material.transmission,uniforms.transmissionSamplerMap.value=transmissionRenderTarget.texture,uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width,transmissionRenderTarget.height),material.transmissionMap&&(uniforms.transmissionMap.value=material.transmissionMap,refreshTransformUniform(material.transmissionMap,uniforms.transmissionMapTransform)),uniforms.thickness.value=material.thickness,material.thicknessMap&&(uniforms.thicknessMap.value=
material.thicknessMap,refreshTransformUniform(material.thicknessMap,uniforms.thicknessMapTransform)),uniforms.attenuationDistance.value=material.attenuationDistance,uniforms.attenuationColor.value.copy(material.attenuationColor)),0<material.anisotropy&&(uniforms.anisotropyVector.value.set(material.anisotropy*Math.cos(material.anisotropyRotation),material.anisotropy*Math.sin(material.anisotropyRotation)),material.anisotropyMap&&(uniforms.anisotropyMap.value=material.anisotropyMap,refreshTransformUniform(material.anisotropyMap,
uniforms.anisotropyMapTransform))),uniforms.specularIntensity.value=material.specularIntensity,uniforms.specularColor.value.copy(material.specularColor),material.specularColorMap&&(uniforms.specularColorMap.value=material.specularColorMap,refreshTransformUniform(material.specularColorMap,uniforms.specularColorMapTransform)),material.specularIntensityMap&&(uniforms.specularIntensityMap.value=material.specularIntensityMap,refreshTransformUniform(material.specularIntensityMap,uniforms.specularIntensityMapTransform)))):
material.isMeshMatcapMaterial?(refreshUniformsCommon(uniforms,material),material.matcap&&(uniforms.matcap.value=material.matcap)):material.isMeshDepthMaterial?refreshUniformsCommon(uniforms,material):material.isMeshDistanceMaterial?(refreshUniformsCommon(uniforms,material),material=properties.get(material).light,uniforms.referencePosition.value.setFromMatrixPosition(material.matrixWorld),uniforms.nearDistance.value=material.shadow.camera.near,uniforms.farDistance.value=material.shadow.camera.far):
material.isMeshNormalMaterial?refreshUniformsCommon(uniforms,material):material.isLineBasicMaterial?(uniforms.diffuse.value.copy(material.color),uniforms.opacity.value=material.opacity,material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.mapTransform)),material.isLineDashedMaterial&&(uniforms.dashSize.value=material.dashSize,uniforms.totalSize.value=material.dashSize+material.gapSize,uniforms.scale.value=material.scale)):material.isPointsMaterial?(uniforms.diffuse.value.copy(material.color),
uniforms.opacity.value=material.opacity,uniforms.size.value=material.size*pixelRatio,uniforms.scale.value=.5*height,material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.uvTransform)),material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap,refreshTransformUniform(material.alphaMap,uniforms.alphaMapTransform)),0<material.alphaTest&&(uniforms.alphaTest.value=material.alphaTest)):material.isSpriteMaterial?(uniforms.diffuse.value.copy(material.color),uniforms.opacity.value=
material.opacity,uniforms.rotation.value=material.rotation,material.map&&(uniforms.map.value=material.map,refreshTransformUniform(material.map,uniforms.mapTransform)),material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap,refreshTransformUniform(material.alphaMap,uniforms.alphaMapTransform)),0<material.alphaTest&&(uniforms.alphaTest.value=material.alphaTest)):material.isShadowMaterial?(uniforms.color.value.copy(material.color),uniforms.opacity.value=material.opacity):material.isShaderMaterial&&
(material.uniformsNeedUpdate=!1)}}}function WebGLUniformsGroups(gl,info$jscomp$0,capabilities,state){function prepareUniformsGroup(uniformsGroup){for(var uniforms=uniformsGroup.uniforms,offset=0,i=0,l=uniforms.length;i<l;i++)for(var uniformArray=Array.isArray(uniforms[i])?uniforms[i]:[uniforms[i]],j=0,jl=uniformArray.length;j<jl;j++)for(var uniform=uniformArray[j],values=Array.isArray(uniform.value)?uniform.value:[uniform.value],k=0,kl=values.length;k<kl;k++){var info$366=getUniformSize(values[k]),
chunkOffset$367=offset%16,chunkPadding=chunkOffset$367%info$366.boundary;chunkOffset$367+=chunkPadding;offset+=chunkPadding;0!==chunkOffset$367&&16-chunkOffset$367<info$366.storage&&(offset+=16-chunkOffset$367);uniform.__data=new Float32Array(info$366.storage/Float32Array.BYTES_PER_ELEMENT);uniform.__offset=offset;offset+=info$366.storage}uniforms=offset%16;0<uniforms&&(offset+=16-uniforms);uniformsGroup.__size=offset;uniformsGroup.__cache={};return this}function getUniformSize(value){var info={boundary:0,
storage:0};"number"===typeof value||"boolean"===typeof value?(info.boundary=4,info.storage=4):value.isVector2?(info.boundary=8,info.storage=8):value.isVector3||value.isColor?(info.boundary=16,info.storage=12):value.isVector4?(info.boundary=16,info.storage=16):value.isMatrix3?(info.boundary=48,info.storage=48):value.isMatrix4?(info.boundary=64,info.storage=64):value.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",
value);return info}function onUniformsGroupsDispose(event){event=event.target;event.removeEventListener("dispose",onUniformsGroupsDispose);var index=allocatedBindingPoints.indexOf(event.__bindingPointIndex);allocatedBindingPoints.splice(index,1);gl.deleteBuffer(buffers[event.id]);delete buffers[event.id];delete updateList[event.id]}var buffers={},updateList={},allocatedBindingPoints=[],maxBindingPoints=gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS);return{bind:function(uniformsGroup,program){state.uniformBlockBinding(uniformsGroup,
program.program)},update:function(uniformsGroup,program){var buffer=buffers[uniformsGroup.id];if(void 0===buffer){prepareUniformsGroup(uniformsGroup);a:{for(buffer=0;buffer<maxBindingPoints;buffer++)if(-1===allocatedBindingPoints.indexOf(buffer)){allocatedBindingPoints.push(buffer);break a}console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.");buffer=0}uniformsGroup.__bindingPointIndex=buffer;var buffer$jscomp$0=gl.createBuffer(),size=uniformsGroup.__size,
usage=uniformsGroup.usage;gl.bindBuffer(gl.UNIFORM_BUFFER,buffer$jscomp$0);gl.bufferData(gl.UNIFORM_BUFFER,size,usage);gl.bindBuffer(gl.UNIFORM_BUFFER,null);gl.bindBufferBase(gl.UNIFORM_BUFFER,buffer,buffer$jscomp$0);buffers[uniformsGroup.id]=buffer$jscomp$0;uniformsGroup.addEventListener("dispose",onUniformsGroupsDispose)}state.updateUBOMapping(uniformsGroup,program.program);program=info$jscomp$0.render.frame;if(updateList[uniformsGroup.id]!==program){buffer=uniformsGroup.uniforms;buffer$jscomp$0=
uniformsGroup.__cache;gl.bindBuffer(gl.UNIFORM_BUFFER,buffers[uniformsGroup.id]);size=0;for(usage=buffer.length;size<usage;size++)for(var uniformArray=Array.isArray(buffer[size])?buffer[size]:[buffer[size]],j=0,jl=uniformArray.length;j<jl;j++){var uniform=uniformArray[j];a:{var JSCompiler_inline_result=uniform.value;var indexString=size+"_"+j;if(void 0===buffer$jscomp$0[indexString])buffer$jscomp$0[indexString]="number"===typeof JSCompiler_inline_result||"boolean"===typeof JSCompiler_inline_result?
JSCompiler_inline_result:JSCompiler_inline_result.clone(),JSCompiler_inline_result=!0;else{var cachedObject=buffer$jscomp$0[indexString];if("number"===typeof JSCompiler_inline_result||"boolean"===typeof JSCompiler_inline_result){if(cachedObject!==JSCompiler_inline_result){buffer$jscomp$0[indexString]=JSCompiler_inline_result;JSCompiler_inline_result=!0;break a}}else if(!1===cachedObject.equals(JSCompiler_inline_result)){cachedObject.copy(JSCompiler_inline_result);JSCompiler_inline_result=!0;break a}JSCompiler_inline_result=
!1}}if(!0===JSCompiler_inline_result){JSCompiler_inline_result=uniform.__offset;indexString=Array.isArray(uniform.value)?uniform.value:[uniform.value];for(var k=cachedObject=0;k<indexString.length;k++){var value=indexString[k],info$365=getUniformSize(value);"number"===typeof value||"boolean"===typeof value?(uniform.__data[0]=value,gl.bufferSubData(gl.UNIFORM_BUFFER,JSCompiler_inline_result+cachedObject,uniform.__data)):value.isMatrix3?(uniform.__data[0]=value.elements[0],uniform.__data[1]=value.elements[1],
uniform.__data[2]=value.elements[2],uniform.__data[3]=0,uniform.__data[4]=value.elements[3],uniform.__data[5]=value.elements[4],uniform.__data[6]=value.elements[5],uniform.__data[7]=0,uniform.__data[8]=value.elements[6],uniform.__data[9]=value.elements[7],uniform.__data[10]=value.elements[8],uniform.__data[11]=0):(value.toArray(uniform.__data,cachedObject),cachedObject+=info$365.storage/Float32Array.BYTES_PER_ELEMENT)}gl.bufferSubData(gl.UNIFORM_BUFFER,JSCompiler_inline_result,uniform.__data)}}gl.bindBuffer(gl.UNIFORM_BUFFER,
null);updateList[uniformsGroup.id]=program}},dispose:function(){for(var id in buffers)gl.deleteBuffer(buffers[id]);allocatedBindingPoints=[];buffers={};updateList={}}}}var EventDispatcher=function(){};EventDispatcher.prototype.addEventListener=function(type,listener){void 0===this._listeners&&(this._listeners={});var listeners=this._listeners;void 0===listeners[type]&&(listeners[type]=[]);-1===listeners[type].indexOf(listener)&&listeners[type].push(listener)};EventDispatcher.prototype.hasEventListener=
function(type,listener){var listeners=this._listeners;return void 0===listeners?!1:void 0!==listeners[type]&&-1!==listeners[type].indexOf(listener)};EventDispatcher.prototype.removeEventListener=function(type,listener){var listeners=this._listeners;void 0!==listeners&&(type=listeners[type],void 0!==type&&(listener=type.indexOf(listener),-1!==listener&&type.splice(listener,1)))};EventDispatcher.prototype.dispatchEvent=function(event){var listeners=this._listeners;if(void 0!==listeners&&(listeners=
listeners[event.type],void 0!==listeners)){event.target=this;listeners=listeners.slice(0);for(var i=0,l=listeners.length;i<l;i++)listeners[i].call(this,event);event.target=null}};var _lut="00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff".split(" "),
_seed=1234567,DEG2RAD=Math.PI/180,RAD2DEG=180/Math.PI,MathUtils={DEG2RAD:DEG2RAD,RAD2DEG:RAD2DEG,generateUUID:generateUUID,clamp:clamp,euclideanModulo:euclideanModulo,mapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},inverseLerp:function(x,y,value){return x!==y?(value-x)/(y-x):0},lerp:lerp,damp:function(x,y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt))},pingpong:function(x,length){length=void 0===length?1:length;return length-Math.abs(euclideanModulo(x,2*length)-length)},smoothstep:function(x,
min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x)},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(6*x-15)+10)},randInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1))},randFloat:function(low,high){return low+Math.random()*(high-low)},randFloatSpread:function(range){return range*(.5-Math.random())},seededRandom:function(s){void 0!==s&&(_seed=s);s=_seed+=1831565813;s=Math.imul(s^s>>>
15,s|1);s^=s+Math.imul(s^s>>>7,s|61);return((s^s>>>14)>>>0)/4294967296},degToRad:function(degrees){return degrees*DEG2RAD},radToDeg:function(radians){return radians*RAD2DEG},isPowerOfTwo:function(value){return 0===(value&value-1)&&0!==value},ceilPowerOfTwo:function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2))},floorPowerOfTwo:function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2))},setQuaternionFromProperEuler:function(q,a,b,c,order){var cos=Math.cos,sin=Math.sin,
c2=cos(b/2);b=sin(b/2);var c13=cos((a+c)/2),s13=sin((a+c)/2),c1_3=cos((a-c)/2),s1_3=sin((a-c)/2);cos=cos((c-a)/2);a=sin((c-a)/2);switch(order){case "XYX":q.set(c2*s13,b*c1_3,b*s1_3,c2*c13);break;case "YZY":q.set(b*s1_3,c2*s13,b*c1_3,c2*c13);break;case "ZXZ":q.set(b*c1_3,b*s1_3,c2*s13,c2*c13);break;case "XZX":q.set(c2*s13,b*a,b*cos,c2*c13);break;case "YXY":q.set(b*cos,c2*s13,b*a,c2*c13);break;case "ZYZ":q.set(b*a,b*cos,c2*s13,c2*c13);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+
order)}},normalize:normalize,denormalize:denormalize},Vector2=function(x,y){Vector2.prototype.isVector2=!0;this.x=void 0===x?0:x;this.y=void 0===y?0:y};Vector2.prototype.set=function(x,y){this.x=x;this.y=y;return this};Vector2.prototype.setScalar=function(scalar){this.y=this.x=scalar;return this};Vector2.prototype.setX=function(x){this.x=x;return this};Vector2.prototype.setY=function(y){this.y=y;return this};Vector2.prototype.setComponent=function(index,value){switch(index){case 0:this.x=value;break;
case 1:this.y=value;break;default:throw Error("index is out of range: "+index);}return this};Vector2.prototype.getComponent=function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+index);}};Vector2.prototype.clone=function(){return new this.constructor(this.x,this.y)};Vector2.prototype.copy=function(v){this.x=v.x;this.y=v.y;return this};Vector2.prototype.add=function(v){this.x+=v.x;this.y+=v.y;return this};Vector2.prototype.addScalar=function(s){this.x+=
s;this.y+=s;return this};Vector2.prototype.addVectors=function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this};Vector2.prototype.addScaledVector=function(v,s){this.x+=v.x*s;this.y+=v.y*s;return this};Vector2.prototype.sub=function(v){this.x-=v.x;this.y-=v.y;return this};Vector2.prototype.subScalar=function(s){this.x-=s;this.y-=s;return this};Vector2.prototype.subVectors=function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this};Vector2.prototype.multiply=function(v){this.x*=v.x;this.y*=v.y;return this};
Vector2.prototype.multiplyScalar=function(scalar){this.x*=scalar;this.y*=scalar;return this};Vector2.prototype.divide=function(v){this.x/=v.x;this.y/=v.y;return this};Vector2.prototype.divideScalar=function(scalar){return this.multiplyScalar(1/scalar)};Vector2.prototype.applyMatrix3=function(m){var x=this.x,y=this.y;m=m.elements;this.x=m[0]*x+m[3]*y+m[6];this.y=m[1]*x+m[4]*y+m[7];return this};Vector2.prototype.min=function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this};Vector2.prototype.max=
function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this};Vector2.prototype.clamp=function(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);return this};Vector2.prototype.clampScalar=function(minVal,maxVal){this.x=clamp(this.x,minVal,maxVal);this.y=clamp(this.y,minVal,maxVal);return this};Vector2.prototype.clampLength=function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(clamp(length,min,max))};Vector2.prototype.floor=
function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this};Vector2.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this};Vector2.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this};Vector2.prototype.roundToZero=function(){this.x=Math.trunc(this.x);this.y=Math.trunc(this.y);return this};Vector2.prototype.negate=function(){this.x=-this.x;this.y=-this.y;return this};Vector2.prototype.dot=function(v){return this.x*
v.x+this.y*v.y};Vector2.prototype.cross=function(v){return this.x*v.y-this.y*v.x};Vector2.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y};Vector2.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};Vector2.prototype.manhattanLength=function(){return Math.abs(this.x)+Math.abs(this.y)};Vector2.prototype.normalize=function(){return this.divideScalar(this.length()||1)};Vector2.prototype.angle=function(){return Math.atan2(-this.y,-this.x)+Math.PI};Vector2.prototype.angleTo=
function(v){var denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(0===denominator)return Math.PI/2;v=this.dot(v)/denominator;return Math.acos(clamp(v,-1,1))};Vector2.prototype.distanceTo=function(v){return Math.sqrt(this.distanceToSquared(v))};Vector2.prototype.distanceToSquared=function(v){var dx=this.x-v.x;v=this.y-v.y;return dx*dx+v*v};Vector2.prototype.manhattanDistanceTo=function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)};Vector2.prototype.setLength=function(length){return this.normalize().multiplyScalar(length)};
Vector2.prototype.lerp=function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this};Vector2.prototype.lerpVectors=function(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this};Vector2.prototype.equals=function(v){return v.x===this.x&&v.y===this.y};Vector2.prototype.fromArray=function(array,offset){offset=void 0===offset?0:offset;this.x=array[offset];this.y=array[offset+1];return this};Vector2.prototype.toArray=function(array,offset){array=void 0===
array?[]:array;offset=void 0===offset?0:offset;array[offset]=this.x;array[offset+1]=this.y;return array};Vector2.prototype.fromBufferAttribute=function(attribute,index){this.x=attribute.getX(index);this.y=attribute.getY(index);return this};Vector2.prototype.rotateAround=function(center,angle){var c=Math.cos(angle);angle=Math.sin(angle);var x=this.x-center.x,y=this.y-center.y;this.x=x*c-y*angle+center.x;this.y=x*angle+y*c+center.y;return this};Vector2.prototype.random=function(){this.x=Math.random();
this.y=Math.random();return this};Vector2.prototype[Symbol.iterator]=function $jscomp$generator$function(){var $jscomp$generator$this=this;return $jscomp.generator.createGenerator($jscomp$generator$function,function($jscomp$generator$context){return 1==$jscomp$generator$context.nextAddress?$jscomp$generator$context.yield($jscomp$generator$this.x,2):$jscomp$generator$context.yield($jscomp$generator$this.y,0)})};$jscomp.global.Object.defineProperties(Vector2.prototype,{width:{configurable:!0,enumerable:!0,
get:function(){return this.x},set:function(value){this.x=value}},height:{configurable:!0,enumerable:!0,get:function(){return this.y},set:function(value){this.y=value}}});var Quaternion=function(x,y,z,w){this.isQuaternion=!0;this._x=void 0===x?0:x;this._y=void 0===y?0:y;this._z=void 0===z?0:z;this._w=void 0===w?1:w};Quaternion.slerpFlat=function(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){var x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2];src0=src0[srcOffset0+3];srcOffset0=
src1[srcOffset1+0];var y1=src1[srcOffset1+1],z1=src1[srcOffset1+2];src1=src1[srcOffset1+3];if(0===t)dst[dstOffset+0]=x0,dst[dstOffset+1]=y0,dst[dstOffset+2]=z0,dst[dstOffset+3]=src0;else if(1===t)dst[dstOffset+0]=srcOffset0,dst[dstOffset+1]=y1,dst[dstOffset+2]=z1,dst[dstOffset+3]=src1;else{if(src0!==src1||x0!==srcOffset0||y0!==y1||z0!==z1){srcOffset1=1-t;var cos=x0*srcOffset0+y0*y1+z0*z1+src0*src1,dir=0<=cos?1:-1,sqrSin=1-cos*cos;sqrSin>Number.EPSILON&&(sqrSin=Math.sqrt(sqrSin),cos=Math.atan2(sqrSin,
cos*dir),srcOffset1=Math.sin(srcOffset1*cos)/sqrSin,t=Math.sin(t*cos)/sqrSin);dir*=t;x0=x0*srcOffset1+srcOffset0*dir;y0=y0*srcOffset1+y1*dir;z0=z0*srcOffset1+z1*dir;src0=src0*srcOffset1+src1*dir;srcOffset1===1-t&&(t=1/Math.sqrt(x0*x0+y0*y0+z0*z0+src0*src0),x0*=t,y0*=t,z0*=t,src0*=t)}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=src0}};Quaternion.multiplyQuaternionsFlat=function(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){var x0=src0[srcOffset0],y0=src0[srcOffset0+1],
z0=src0[srcOffset0+2];src0=src0[srcOffset0+3];srcOffset0=src1[srcOffset1];var y1=src1[srcOffset1+1],z1=src1[srcOffset1+2];src1=src1[srcOffset1+3];dst[dstOffset]=x0*src1+src0*srcOffset0+y0*z1-z0*y1;dst[dstOffset+1]=y0*src1+src0*y1+z0*srcOffset0-x0*z1;dst[dstOffset+2]=z0*src1+src0*z1+x0*y1-y0*srcOffset0;dst[dstOffset+3]=src0*src1-x0*srcOffset0-y0*y1-z0*z1;return dst};Quaternion.prototype.set=function(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this};Quaternion.prototype.clone=
function(){return new this.constructor(this._x,this._y,this._z,this._w)};Quaternion.prototype.copy=function(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this};Quaternion.prototype.setFromEuler=function(euler,update){update=void 0===update?!0:update;var x=euler._x,y=euler._y,z=euler._z;euler=euler._order;var cos=Math.cos,sin=Math.sin,c1=cos(x/2),c2=cos(y/2);cos=cos(z/2);x=sin(x/2);y=sin(y/2);z=sin(z/2);switch(euler){case "XYZ":this._x=
x*c2*cos+c1*y*z;this._y=c1*y*cos-x*c2*z;this._z=c1*c2*z+x*y*cos;this._w=c1*c2*cos-x*y*z;break;case "YXZ":this._x=x*c2*cos+c1*y*z;this._y=c1*y*cos-x*c2*z;this._z=c1*c2*z-x*y*cos;this._w=c1*c2*cos+x*y*z;break;case "ZXY":this._x=x*c2*cos-c1*y*z;this._y=c1*y*cos+x*c2*z;this._z=c1*c2*z+x*y*cos;this._w=c1*c2*cos-x*y*z;break;case "ZYX":this._x=x*c2*cos-c1*y*z;this._y=c1*y*cos+x*c2*z;this._z=c1*c2*z-x*y*cos;this._w=c1*c2*cos+x*y*z;break;case "YZX":this._x=x*c2*cos+c1*y*z;this._y=c1*y*cos+x*c2*z;this._z=c1*
c2*z-x*y*cos;this._w=c1*c2*cos-x*y*z;break;case "XZY":this._x=x*c2*cos-c1*y*z;this._y=c1*y*cos-x*c2*z;this._z=c1*c2*z+x*y*cos;this._w=c1*c2*cos+x*y*z;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+euler)}!0===update&&this._onChangeCallback();return this};Quaternion.prototype.setFromAxisAngle=function(axis,angle){angle/=2;var s=Math.sin(angle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(angle);this._onChangeCallback();return this};
Quaternion.prototype.setFromRotationMatrix=function(m){var te=m.elements,m11=te[0];m=te[4];var m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6];te=te[10];var trace=m11+m22+te;0<trace?(m11=.5/Math.sqrt(trace+1),this._w=.25/m11,this._x=(m32-m23)*m11,this._y=(m13-m31)*m11,this._z=(m21-m)*m11):m11>m22&&m11>te?(m11=2*Math.sqrt(1+m11-m22-te),this._w=(m32-m23)/m11,this._x=.25*m11,this._y=(m+m21)/m11,this._z=(m13+m31)/m11):m22>te?(m11=2*Math.sqrt(1+m22-m11-te),this._w=(m13-m31)/m11,this._x=(m+
m21)/m11,this._y=.25*m11,this._z=(m23+m32)/m11):(m11=2*Math.sqrt(1+te-m11-m22),this._w=(m21-m)/m11,this._x=(m13+m31)/m11,this._y=(m23+m32)/m11,this._z=.25*m11);this._onChangeCallback();return this};Quaternion.prototype.setFromUnitVectors=function(vFrom,vTo){var r=vFrom.dot(vTo)+1;1E-8>r?(r=0,Math.abs(vFrom.x)>Math.abs(vFrom.z)?(this._x=-vFrom.y,this._y=vFrom.x,this._z=0):(this._x=0,this._y=-vFrom.z,this._z=vFrom.y)):(this._x=vFrom.y*vTo.z-vFrom.z*vTo.y,this._y=vFrom.z*vTo.x-vFrom.x*vTo.z,this._z=
vFrom.x*vTo.y-vFrom.y*vTo.x);this._w=r;return this.normalize()};Quaternion.prototype.angleTo=function(q){return 2*Math.acos(Math.abs(clamp(this.dot(q),-1,1)))};Quaternion.prototype.rotateTowards=function(q,step){var angle=this.angleTo(q);if(0===angle)return this;this.slerp(q,Math.min(1,step/angle));return this};Quaternion.prototype.identity=function(){return this.set(0,0,0,1)};Quaternion.prototype.invert=function(){return this.conjugate()};Quaternion.prototype.conjugate=function(){this._x*=-1;this._y*=
-1;this._z*=-1;this._onChangeCallback();return this};Quaternion.prototype.dot=function(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w};Quaternion.prototype.lengthSq=function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w};Quaternion.prototype.length=function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)};Quaternion.prototype.normalize=function(){var l=this.length();0===l?(this._z=this._y=this._x=0,this._w=1):(l=1/l,this._x*=
l,this._y*=l,this._z*=l,this._w*=l);this._onChangeCallback();return this};Quaternion.prototype.multiply=function(q){return this.multiplyQuaternions(this,q)};Quaternion.prototype.premultiply=function(q){return this.multiplyQuaternions(q,this)};Quaternion.prototype.multiplyQuaternions=function(a,b){var qax=a._x,qay=a._y,qaz=a._z;a=a._w;var qbx=b._x,qby=b._y,qbz=b._z;b=b._w;this._x=qax*b+a*qbx+qay*qbz-qaz*qby;this._y=qay*b+a*qby+qaz*qbx-qax*qbz;this._z=qaz*b+a*qbz+qax*qby-qay*qbx;this._w=a*b-qax*qbx-
qay*qby-qaz*qbz;this._onChangeCallback();return this};Quaternion.prototype.slerp=function(qb,t){if(0===t)return this;if(1===t)return this.copy(qb);var x=this._x,y=this._y,z=this._z,w=this._w,cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;0>cosHalfTheta?(this._w=-qb._w,this._x=-qb._x,this._y=-qb._y,this._z=-qb._z,cosHalfTheta=-cosHalfTheta):this.copy(qb);if(1<=cosHalfTheta)return this._w=w,this._x=x,this._y=y,this._z=z,this;qb=1-cosHalfTheta*cosHalfTheta;if(qb<=Number.EPSILON)return cosHalfTheta=1-t,
this._w=cosHalfTheta*w+t*this._w,this._x=cosHalfTheta*x+t*this._x,this._y=cosHalfTheta*y+t*this._y,this._z=cosHalfTheta*z+t*this._z,this.normalize(),this;qb=Math.sqrt(qb);var halfTheta=Math.atan2(qb,cosHalfTheta);cosHalfTheta=Math.sin((1-t)*halfTheta)/qb;t=Math.sin(t*halfTheta)/qb;this._w=w*cosHalfTheta+this._w*t;this._x=x*cosHalfTheta+this._x*t;this._y=y*cosHalfTheta+this._y*t;this._z=z*cosHalfTheta+this._z*t;this._onChangeCallback();return this};Quaternion.prototype.slerpQuaternions=function(qa,
qb,t){return this.copy(qa).slerp(qb,t)};Quaternion.prototype.random=function(){var theta1=2*Math.PI*Math.random(),theta2=2*Math.PI*Math.random(),x0=Math.random(),r1=Math.sqrt(1-x0);x0=Math.sqrt(x0);return this.set(r1*Math.sin(theta1),r1*Math.cos(theta1),x0*Math.sin(theta2),x0*Math.cos(theta2))};Quaternion.prototype.equals=function(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w};Quaternion.prototype.fromArray=function(array,offset){offset=
void 0===offset?0:offset;this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this};Quaternion.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array};Quaternion.prototype.fromBufferAttribute=function(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);
this._z=attribute.getZ(index);this._w=attribute.getW(index);this._onChangeCallback();return this};Quaternion.prototype.toJSON=function(){return this.toArray()};Quaternion.prototype._onChange=function(callback){this._onChangeCallback=callback;return this};Quaternion.prototype._onChangeCallback=function(){};Quaternion.prototype[Symbol.iterator]=function $jscomp$generator$function(){var $jscomp$generator$this=this;return $jscomp.generator.createGenerator($jscomp$generator$function,function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:return $jscomp$generator$context.yield($jscomp$generator$this._x,
2);case 2:return $jscomp$generator$context.yield($jscomp$generator$this._y,3);case 3:return $jscomp$generator$context.yield($jscomp$generator$this._z,4);case 4:return $jscomp$generator$context.yield($jscomp$generator$this._w,0)}})};$jscomp.global.Object.defineProperties(Quaternion.prototype,{x:{configurable:!0,enumerable:!0,get:function(){return this._x},set:function(value){this._x=value;this._onChangeCallback()}},y:{configurable:!0,enumerable:!0,get:function(){return this._y},set:function(value){this._y=
value;this._onChangeCallback()}},z:{configurable:!0,enumerable:!0,get:function(){return this._z},set:function(value){this._z=value;this._onChangeCallback()}},w:{configurable:!0,enumerable:!0,get:function(){return this._w},set:function(value){this._w=value;this._onChangeCallback()}}});var Vector3=function(x,y,z){Vector3.prototype.isVector3=!0;this.x=void 0===x?0:x;this.y=void 0===y?0:y;this.z=void 0===z?0:z};Vector3.prototype.set=function(x,y,z){void 0===z&&(z=this.z);this.x=x;this.y=y;this.z=z;return this};
Vector3.prototype.setScalar=function(scalar){this.z=this.y=this.x=scalar;return this};Vector3.prototype.setX=function(x){this.x=x;return this};Vector3.prototype.setY=function(y){this.y=y;return this};Vector3.prototype.setZ=function(z){this.z=z;return this};Vector3.prototype.setComponent=function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw Error("index is out of range: "+index);}return this};Vector3.prototype.getComponent=function(index){switch(index){case 0:return this.x;
case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+index);}};Vector3.prototype.clone=function(){return new this.constructor(this.x,this.y,this.z)};Vector3.prototype.copy=function(v){this.x=v.x;this.y=v.y;this.z=v.z;return this};Vector3.prototype.add=function(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;return this};Vector3.prototype.addScalar=function(s){this.x+=s;this.y+=s;this.z+=s;return this};Vector3.prototype.addVectors=function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;
this.z=a.z+b.z;return this};Vector3.prototype.addScaledVector=function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this};Vector3.prototype.sub=function(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;return this};Vector3.prototype.subScalar=function(s){this.x-=s;this.y-=s;this.z-=s;return this};Vector3.prototype.subVectors=function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this};Vector3.prototype.multiply=function(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;return this};Vector3.prototype.multiplyScalar=
function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this};Vector3.prototype.multiplyVectors=function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this};Vector3.prototype.applyEuler=function(euler){return this.applyQuaternion(_quaternion$4.setFromEuler(euler))};Vector3.prototype.applyAxisAngle=function(axis,angle){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis,angle))};Vector3.prototype.applyMatrix3=function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;
this.x=m[0]*x+m[3]*y+m[6]*z;this.y=m[1]*x+m[4]*y+m[7]*z;this.z=m[2]*x+m[5]*y+m[8]*z;return this};Vector3.prototype.applyNormalMatrix=function(m){return this.applyMatrix3(m).normalize()};Vector3.prototype.applyMatrix4=function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;var w=1/(m[3]*x+m[7]*y+m[11]*z+m[15]);this.x=(m[0]*x+m[4]*y+m[8]*z+m[12])*w;this.y=(m[1]*x+m[5]*y+m[9]*z+m[13])*w;this.z=(m[2]*x+m[6]*y+m[10]*z+m[14])*w;return this};Vector3.prototype.applyQuaternion=function(q){var vx=this.x,vy=
this.y,vz=this.z,qx=q.x,qy=q.y,qz=q.z;q=q.w;var tx=2*(qy*vz-qz*vy),ty=2*(qz*vx-qx*vz),tz=2*(qx*vy-qy*vx);this.x=vx+q*tx+qy*tz-qz*ty;this.y=vy+q*ty+qz*tx-qx*tz;this.z=vz+q*tz+qx*ty-qy*tx;return this};Vector3.prototype.project=function(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix)};Vector3.prototype.unproject=function(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld)};Vector3.prototype.transformDirection=
function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;this.x=m[0]*x+m[4]*y+m[8]*z;this.y=m[1]*x+m[5]*y+m[9]*z;this.z=m[2]*x+m[6]*y+m[10]*z;return this.normalize()};Vector3.prototype.divide=function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this};Vector3.prototype.divideScalar=function(scalar){return this.multiplyScalar(1/scalar)};Vector3.prototype.min=function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this};Vector3.prototype.max=function(v){this.x=
Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this};Vector3.prototype.clamp=function(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);this.z=clamp(this.z,min.z,max.z);return this};Vector3.prototype.clampScalar=function(minVal,maxVal){this.x=clamp(this.x,minVal,maxVal);this.y=clamp(this.y,minVal,maxVal);this.z=clamp(this.z,minVal,maxVal);return this};Vector3.prototype.clampLength=function(min,max){var length=this.length();return this.divideScalar(length||
1).multiplyScalar(clamp(length,min,max))};Vector3.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this};Vector3.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this};Vector3.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this};Vector3.prototype.roundToZero=function(){this.x=Math.trunc(this.x);this.y=Math.trunc(this.y);
this.z=Math.trunc(this.z);return this};Vector3.prototype.negate=function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this};Vector3.prototype.dot=function(v){return this.x*v.x+this.y*v.y+this.z*v.z};Vector3.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z};Vector3.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)};Vector3.prototype.manhattanLength=function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)};Vector3.prototype.normalize=
function(){return this.divideScalar(this.length()||1)};Vector3.prototype.setLength=function(length){return this.normalize().multiplyScalar(length)};Vector3.prototype.lerp=function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this};Vector3.prototype.lerpVectors=function(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this};Vector3.prototype.cross=function(v){return this.crossVectors(this,
v)};Vector3.prototype.crossVectors=function(a,b){var ax=a.x,ay=a.y;a=a.z;var bx=b.x,by=b.y;b=b.z;this.x=ay*b-a*by;this.y=a*bx-ax*b;this.z=ax*by-ay*bx;return this};Vector3.prototype.projectOnVector=function(v){var denominator=v.lengthSq();if(0===denominator)return this.set(0,0,0);denominator=v.dot(this)/denominator;return this.copy(v).multiplyScalar(denominator)};Vector3.prototype.projectOnPlane=function(planeNormal){_vector$c.copy(this).projectOnVector(planeNormal);return this.sub(_vector$c)};Vector3.prototype.reflect=
function(normal){return this.sub(_vector$c.copy(normal).multiplyScalar(2*this.dot(normal)))};Vector3.prototype.angleTo=function(v){var denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(0===denominator)return Math.PI/2;v=this.dot(v)/denominator;return Math.acos(clamp(v,-1,1))};Vector3.prototype.distanceTo=function(v){return Math.sqrt(this.distanceToSquared(v))};Vector3.prototype.distanceToSquared=function(v){var dx=this.x-v.x,dy=this.y-v.y;v=this.z-v.z;return dx*dx+dy*dy+v*v};Vector3.prototype.manhattanDistanceTo=
function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z)};Vector3.prototype.setFromSpherical=function(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)};Vector3.prototype.setFromSphericalCoords=function(radius,phi,theta){var sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this};Vector3.prototype.setFromCylindrical=function(c){return this.setFromCylindricalCoords(c.radius,
c.theta,c.y)};Vector3.prototype.setFromCylindricalCoords=function(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this};Vector3.prototype.setFromMatrixPosition=function(m){m=m.elements;this.x=m[12];this.y=m[13];this.z=m[14];return this};Vector3.prototype.setFromMatrixScale=function(m){var sx=this.setFromMatrixColumn(m,0).length(),sy=this.setFromMatrixColumn(m,1).length();m=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=m;return this};
Vector3.prototype.setFromMatrixColumn=function(m,index){return this.fromArray(m.elements,4*index)};Vector3.prototype.setFromMatrix3Column=function(m,index){return this.fromArray(m.elements,3*index)};Vector3.prototype.setFromEuler=function(e){this.x=e._x;this.y=e._y;this.z=e._z;return this};Vector3.prototype.setFromColor=function(c){this.x=c.r;this.y=c.g;this.z=c.b;return this};Vector3.prototype.equals=function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z};Vector3.prototype.fromArray=function(array,
offset){offset=void 0===offset?0:offset;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this};Vector3.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array};Vector3.prototype.fromBufferAttribute=function(attribute,index){this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this};Vector3.prototype.random=
function(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this};Vector3.prototype.randomDirection=function(){var theta=Math.random()*Math.PI*2,u=2*Math.random()-1,c=Math.sqrt(1-u*u);this.x=c*Math.cos(theta);this.y=u;this.z=c*Math.sin(theta);return this};Vector3.prototype[Symbol.iterator]=function $jscomp$generator$function(){var $jscomp$generator$this=this;return $jscomp.generator.createGenerator($jscomp$generator$function,function($jscomp$generator$context){return 1==$jscomp$generator$context.nextAddress?
$jscomp$generator$context.yield($jscomp$generator$this.x,2):3!=$jscomp$generator$context.nextAddress?$jscomp$generator$context.yield($jscomp$generator$this.y,3):$jscomp$generator$context.yield($jscomp$generator$this.z,0)})};var _vector$c=new Vector3,_quaternion$4=new Quaternion,Matrix3=function(n11,n12,n13,n21,n22,n23,n31,n32,n33){Matrix3.prototype.isMatrix3=!0;this.elements=[1,0,0,0,1,0,0,0,1];void 0!==n11&&this.set(n11,n12,n13,n21,n22,n23,n31,n32,n33)};Matrix3.prototype.set=function(n11,n12,n13,
n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this};Matrix3.prototype.identity=function(){this.set(1,0,0,0,1,0,0,0,1);return this};Matrix3.prototype.copy=function(m){var te=this.elements;m=m.elements;te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];return this};Matrix3.prototype.extractBasis=function(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);
yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this};Matrix3.prototype.setFromMatrix4=function(m){m=m.elements;this.set(m[0],m[4],m[8],m[1],m[5],m[9],m[2],m[6],m[10]);return this};Matrix3.prototype.multiply=function(m){return this.multiplyMatrices(this,m)};Matrix3.prototype.premultiply=function(m){return this.multiplyMatrices(m,this)};Matrix3.prototype.multiplyMatrices=function(a,b){var ae=a.elements,be=b.elements;b=this.elements;a=ae[0];var a12=ae[3],a13=ae[6],a21=ae[1],
a22=ae[4],a23=ae[7],a31=ae[2],a32=ae[5];ae=ae[8];var b11=be[0],b12=be[3],b13=be[6],b21=be[1],b22=be[4],b23=be[7],b31=be[2],b32=be[5];be=be[8];b[0]=a*b11+a12*b21+a13*b31;b[3]=a*b12+a12*b22+a13*b32;b[6]=a*b13+a12*b23+a13*be;b[1]=a21*b11+a22*b21+a23*b31;b[4]=a21*b12+a22*b22+a23*b32;b[7]=a21*b13+a22*b23+a23*be;b[2]=a31*b11+a32*b21+ae*b31;b[5]=a31*b12+a32*b22+ae*b32;b[8]=a31*b13+a32*b23+ae*be;return this};Matrix3.prototype.multiplyScalar=function(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=
s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this};Matrix3.prototype.determinant=function(){var te=this.elements,a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7];te=te[8];return a*e*te-a*f*h-b*d*te+b*f*g+c*d*h-c*e*g};Matrix3.prototype.invert=function(){var te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(0===det)return this.set(0,
0,0,0,0,0,0,0,0);det=1/det;te[0]=t11*det;te[1]=(n31*n23-n33*n21)*det;te[2]=(n32*n21-n31*n22)*det;te[3]=t12*det;te[4]=(n33*n11-n31*n13)*det;te[5]=(n31*n12-n32*n11)*det;te[6]=t13*det;te[7]=(n21*n13-n23*n11)*det;te[8]=(n22*n11-n21*n12)*det;return this};Matrix3.prototype.transpose=function(){var m=this.elements;var tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this};Matrix3.prototype.getNormalMatrix=function(matrix4){return this.setFromMatrix4(matrix4).invert().transpose()};
Matrix3.prototype.transposeIntoArray=function(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this};Matrix3.prototype.setUvTransform=function(tx,ty,sx,sy,rotation,cx,cy){var c=Math.cos(rotation);rotation=Math.sin(rotation);this.set(sx*c,sx*rotation,-sx*(c*cx+rotation*cy)+cx+tx,-sy*rotation,sy*c,-sy*(-rotation*cx+c*cy)+cy+ty,0,0,1);return this};Matrix3.prototype.scale=function(sx,sy){this.premultiply(_m3.makeScale(sx,sy));return this};
Matrix3.prototype.rotate=function(theta){this.premultiply(_m3.makeRotation(-theta));return this};Matrix3.prototype.translate=function(tx,ty){this.premultiply(_m3.makeTranslation(tx,ty));return this};Matrix3.prototype.makeTranslation=function(x,y){x.isVector2?this.set(1,0,x.x,0,1,x.y,0,0,1):this.set(1,0,x,0,1,y,0,0,1);return this};Matrix3.prototype.makeRotation=function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,-theta,0,theta,c,0,0,0,1);return this};Matrix3.prototype.makeScale=
function(x,y){this.set(x,0,0,0,y,0,0,0,1);return this};Matrix3.prototype.equals=function(matrix){var te=this.elements;matrix=matrix.elements;for(var i=0;9>i;i++)if(te[i]!==matrix[i])return!1;return!0};Matrix3.prototype.fromArray=function(array,offset){offset=void 0===offset?0:offset;for(var i=0;9>i;i++)this.elements[i]=array[i+offset];return this};Matrix3.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;var te=this.elements;array[offset]=te[0];
array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array};Matrix3.prototype.clone=function(){return(new this.constructor).fromArray(this.elements)};var _m3=new Matrix3,TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,
Float64Array:Float64Array},_cache={},LINEAR_REC709_TO_XYZ=(new Matrix3).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),XYZ_TO_LINEAR_REC709=(new Matrix3).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715),ColorManagement=function(){var ColorManagement={enabled:!0,workingColorSpace:"srgb-linear",spaces:{},convert:function(color,sourceColorSpace,targetColorSpace){if(!1===this.enabled||sourceColorSpace===targetColorSpace||
!sourceColorSpace||!targetColorSpace)return color;"srgb"===this.spaces[sourceColorSpace].transfer&&(color.r=SRGBToLinear(color.r),color.g=SRGBToLinear(color.g),color.b=SRGBToLinear(color.b));this.spaces[sourceColorSpace].primaries!==this.spaces[targetColorSpace].primaries&&(color.applyMatrix3(this.spaces[sourceColorSpace].toXYZ),color.applyMatrix3(this.spaces[targetColorSpace].fromXYZ));"srgb"===this.spaces[targetColorSpace].transfer&&(color.r=LinearToSRGB(color.r),color.g=LinearToSRGB(color.g),color.b=
LinearToSRGB(color.b));return color},workingToColorSpace:function(color,targetColorSpace){return this.convert(color,this.workingColorSpace,targetColorSpace)},colorSpaceToWorking:function(color,sourceColorSpace){return this.convert(color,sourceColorSpace,this.workingColorSpace)},getPrimaries:function(colorSpace){return this.spaces[colorSpace].primaries},getTransfer:function(colorSpace){return""===colorSpace?"linear":this.spaces[colorSpace].transfer},getToneMappingMode:function(colorSpace){return this.spaces[colorSpace].outputColorSpaceConfig.toneMappingMode||
"standard"},getLuminanceCoefficients:function(target,colorSpace){colorSpace=void 0===colorSpace?this.workingColorSpace:colorSpace;return target.fromArray(this.spaces[colorSpace].luminanceCoefficients)},define:function(colorSpaces){Object.assign(this.spaces,colorSpaces)},_getMatrix:function(targetMatrix,sourceColorSpace,targetColorSpace){return targetMatrix.copy(this.spaces[sourceColorSpace].toXYZ).multiply(this.spaces[targetColorSpace].fromXYZ)},_getDrawingBufferColorSpace:function(colorSpace){return this.spaces[colorSpace].outputColorSpaceConfig.drawingBufferColorSpace},
_getUnpackColorSpace:function(colorSpace){colorSpace=void 0===colorSpace?this.workingColorSpace:colorSpace;return this.spaces[colorSpace].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(color,targetColorSpace){warnOnce("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace().");return ColorManagement.workingToColorSpace(color,targetColorSpace)},toWorkingColorSpace:function(color,sourceColorSpace){warnOnce("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking().");
return ColorManagement.colorSpaceToWorking(color,sourceColorSpace)}},REC709_PRIMARIES=[.64,.33,.3,.6,.15,.06],REC709_LUMINANCE_COEFFICIENTS=[.2126,.7152,.0722],D65=[.3127,.329],$jscomp$compprop0={};ColorManagement.define(($jscomp$compprop0["srgb-linear"]={primaries:REC709_PRIMARIES,whitePoint:D65,transfer:"linear",toXYZ:LINEAR_REC709_TO_XYZ,fromXYZ:XYZ_TO_LINEAR_REC709,luminanceCoefficients:REC709_LUMINANCE_COEFFICIENTS,workingColorSpaceConfig:{unpackColorSpace:"srgb"},outputColorSpaceConfig:{drawingBufferColorSpace:"srgb"}},
$jscomp$compprop0.srgb={primaries:REC709_PRIMARIES,whitePoint:D65,transfer:"srgb",toXYZ:LINEAR_REC709_TO_XYZ,fromXYZ:XYZ_TO_LINEAR_REC709,luminanceCoefficients:REC709_LUMINANCE_COEFFICIENTS,outputColorSpaceConfig:{drawingBufferColorSpace:"srgb"}},$jscomp$compprop0));return ColorManagement}(),_canvas,ImageUtils=function(){};ImageUtils.getDataURL=function(image,type){type=void 0===type?"image/png":type;if(/^data:/i.test(image.src)||"undefined"===typeof HTMLCanvasElement)return image.src;if(!(image instanceof
HTMLCanvasElement)){void 0===_canvas&&(_canvas=createElementNS("canvas"));_canvas.width=image.width;_canvas.height=image.height;var context=_canvas.getContext("2d");image instanceof ImageData?context.putImageData(image,0,0):context.drawImage(image,0,0,image.width,image.height);image=_canvas}return image.toDataURL(type)};ImageUtils.sRGBToLinear=function(image){if("undefined"!==typeof HTMLImageElement&&image instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||
"undefined"!==typeof ImageBitmap&&image instanceof ImageBitmap){var canvas=createElementNS("canvas");canvas.width=image.width;canvas.height=image.height;var context=canvas.getContext("2d");context.drawImage(image,0,0,image.width,image.height);image=context.getImageData(0,0,image.width,image.height);for(var data=image.data,i=0;i<data.length;i++)data[i]=255*SRGBToLinear(data[i]/255);context.putImageData(image,0,0);return canvas}if(image.data){canvas=image.data.slice(0);for(context=0;context<canvas.length;context++)canvas[context]=
canvas instanceof Uint8Array||canvas instanceof Uint8ClampedArray?Math.floor(255*SRGBToLinear(canvas[context]/255)):SRGBToLinear(canvas[context]);return{data:canvas,width:image.width,height:image.height}}console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.");return image};var _sourceId=0,Source=function(data){data=void 0===data?null:data;this.isSource=!0;Object.defineProperty(this,"id",{value:_sourceId++});this.uuid=generateUUID();this.data=data;
this.dataReady=!0;this.version=0};Source.prototype.getSize=function(target){var data=this.data;"undefined"!==typeof HTMLVideoElement&&data instanceof HTMLVideoElement?target.set(data.videoWidth,data.videoHeight,0):data instanceof VideoFrame?target.set(data.displayHeight,data.displayWidth,0):null!==data?target.set(data.width,data.height,data.depth||0):target.set(0,0,0);return target};Source.prototype.toJSON=function(meta){var isRootObject=void 0===meta||"string"===typeof meta;if(!isRootObject&&void 0!==
meta.images[this.uuid])return meta.images[this.uuid];var output={uuid:this.uuid,url:""},data=this.data;if(null!==data){if(Array.isArray(data)){var url=[];for(var i=0,l=data.length;i<l;i++)data[i].isDataTexture?url.push(serializeImage(data[i].image)):url.push(serializeImage(data[i]))}else url=serializeImage(data);output.url=url}isRootObject||(meta.images[this.uuid]=output);return output};$jscomp.global.Object.defineProperties(Source.prototype,{needsUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===
value&&this.version++}}});var _textureId=0,_tempVec3=new Vector3,Texture=function(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace){image=void 0===image?Texture.DEFAULT_IMAGE:image;mapping=void 0===mapping?Texture.DEFAULT_MAPPING:mapping;wrapS=void 0===wrapS?1001:wrapS;wrapT=void 0===wrapT?1001:wrapT;magFilter=void 0===magFilter?1006:magFilter;minFilter=void 0===minFilter?1008:minFilter;format=void 0===format?1023:format;type=void 0===type?1009:type;anisotropy=void 0===
anisotropy?Texture.DEFAULT_ANISOTROPY:anisotropy;colorSpace=void 0===colorSpace?"":colorSpace;this.isTexture=!0;Object.defineProperty(this,"id",{value:_textureId++});this.uuid=generateUUID();this.name="";this.source=new Source(image);this.mipmaps=[];this.mapping=mapping;this.channel=0;this.wrapS=wrapS;this.wrapT=wrapT;this.magFilter=magFilter;this.minFilter=minFilter;this.anisotropy=anisotropy;this.format=format;this.internalFormat=null;this.type=type;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,
1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new Matrix3;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.colorSpace=colorSpace;this.userData={};this.updateRanges=[];this.version=0;this.renderTarget=this.onUpdate=null;this.isRenderTargetTexture=!1;this.isArrayTexture=image&&image.depth&&1<image.depth?!0:!1;this.pmremVersion=0;return this};$jscomp.inherits(Texture,EventDispatcher);Texture.prototype.updateMatrix=function(){this.matrix.setUvTransform(this.offset.x,
this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)};Texture.prototype.addUpdateRange=function(start,count){this.updateRanges.push({start:start,count:count})};Texture.prototype.clearUpdateRanges=function(){this.updateRanges.length=0};Texture.prototype.clone=function(){return(new this.constructor).copy(this)};Texture.prototype.copy=function(source){this.name=source.name;this.source=source.source;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.channel=
source.channel;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=
source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.colorSpace=source.colorSpace;this.renderTarget=source.renderTarget;this.isRenderTargetTexture=source.isRenderTargetTexture;this.isArrayTexture=source.isArrayTexture;this.userData=JSON.parse(JSON.stringify(source.userData));this.needsUpdate=!0;return this};Texture.prototype.setValues=function(values){for(var key in values){var newValue=values[key];if(void 0===newValue)console.warn("THREE.Texture.setValues(): parameter '"+
key+"' has value of undefined.");else{var currentValue=this[key];void 0===currentValue?console.warn("THREE.Texture.setValues(): property '"+key+"' does not exist."):currentValue&&newValue&&currentValue.isVector2&&newValue.isVector2?currentValue.copy(newValue):currentValue&&newValue&&currentValue.isVector3&&newValue.isVector3?currentValue.copy(newValue):currentValue&&newValue&&currentValue.isMatrix3&&newValue.isMatrix3?currentValue.copy(newValue):this[key]=newValue}}};Texture.prototype.toJSON=function(meta){var isRootObject=
void 0===meta||"string"===typeof meta;if(!isRootObject&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];var output={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(meta).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,
type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};0<Object.keys(this.userData).length&&(output.userData=this.userData);isRootObject||(meta.textures[this.uuid]=output);return output};Texture.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};Texture.prototype.transformUv=function(uv){if(300!==
this.mapping)return uv;uv.applyMatrix3(this.matrix);if(0>uv.x||1<uv.x)switch(this.wrapS){case 1E3:uv.x-=Math.floor(uv.x);break;case 1001:uv.x=0>uv.x?0:1;break;case 1002:uv.x=1===Math.abs(Math.floor(uv.x)%2)?Math.ceil(uv.x)-uv.x:uv.x-Math.floor(uv.x)}if(0>uv.y||1<uv.y)switch(this.wrapT){case 1E3:uv.y-=Math.floor(uv.y);break;case 1001:uv.y=0>uv.y?0:1;break;case 1002:uv.y=1===Math.abs(Math.floor(uv.y)%2)?Math.ceil(uv.y)-uv.y:uv.y-Math.floor(uv.y)}this.flipY&&(uv.y=1-uv.y);return uv};$jscomp.global.Object.defineProperties(Texture.prototype,
{width:{configurable:!0,enumerable:!0,get:function(){return this.source.getSize(_tempVec3).x}},height:{configurable:!0,enumerable:!0,get:function(){return this.source.getSize(_tempVec3).y}},depth:{configurable:!0,enumerable:!0,get:function(){return this.source.getSize(_tempVec3).z}},image:{configurable:!0,enumerable:!0,get:function(){return this.source.data},set:function(value){this.source.data=void 0===value?null:value}},needsUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===value&&
(this.version++,this.source.needsUpdate=!0)}},needsPMREMUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===value&&this.pmremVersion++}}});Texture.DEFAULT_IMAGE=null;Texture.DEFAULT_MAPPING=300;Texture.DEFAULT_ANISOTROPY=1;var Vector4=function(x,y,z,w){Vector4.prototype.isVector4=!0;this.x=void 0===x?0:x;this.y=void 0===y?0:y;this.z=void 0===z?0:z;this.w=void 0===w?1:w};Vector4.prototype.set=function(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this};Vector4.prototype.setScalar=
function(scalar){this.w=this.z=this.y=this.x=scalar;return this};Vector4.prototype.setX=function(x){this.x=x;return this};Vector4.prototype.setY=function(y){this.y=y;return this};Vector4.prototype.setZ=function(z){this.z=z;return this};Vector4.prototype.setW=function(w){this.w=w;return this};Vector4.prototype.setComponent=function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw Error("index is out of range: "+
index);}return this};Vector4.prototype.getComponent=function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+index);}};Vector4.prototype.clone=function(){return new this.constructor(this.x,this.y,this.z,this.w)};Vector4.prototype.copy=function(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=void 0!==v.w?v.w:1;return this};Vector4.prototype.add=function(v){this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;
return this};Vector4.prototype.addScalar=function(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this};Vector4.prototype.addVectors=function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this};Vector4.prototype.addScaledVector=function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this};Vector4.prototype.sub=function(v){this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this};Vector4.prototype.subScalar=function(s){this.x-=s;this.y-=s;this.z-=
s;this.w-=s;return this};Vector4.prototype.subVectors=function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this};Vector4.prototype.multiply=function(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;this.w*=v.w;return this};Vector4.prototype.multiplyScalar=function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this};Vector4.prototype.applyMatrix4=function(m){var x=this.x,y=this.y,z=this.z,w=this.w;m=m.elements;this.x=m[0]*x+m[4]*y+m[8]*z+m[12]*w;this.y=
m[1]*x+m[5]*y+m[9]*z+m[13]*w;this.z=m[2]*x+m[6]*y+m[10]*z+m[14]*w;this.w=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return this};Vector4.prototype.divide=function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;this.w/=v.w;return this};Vector4.prototype.divideScalar=function(scalar){return this.multiplyScalar(1/scalar)};Vector4.prototype.setAxisAngleFromQuaternion=function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);1E-4>s?(this.x=1,this.z=this.y=0):(this.x=q.x/s,this.y=q.y/s,this.z=q.z/s);return this};Vector4.prototype.setAxisAngleFromRotationMatrix=
function(m){m=m.elements;var m11=m[0];var z=m[4];var m13=m[8],m21=m[1],m22=m[5],m23=m[9];var y=m[2];var x=m[6];var m33=m[10];if(.01>Math.abs(z-m21)&&.01>Math.abs(m13-y)&&.01>Math.abs(m23-x)){if(.1>Math.abs(z+m21)&&.1>Math.abs(m13+y)&&.1>Math.abs(m23+x)&&.1>Math.abs(m11+m22+m33-3))return this.set(1,0,0,0),this;m=Math.PI;m11=(m11+1)/2;m22=(m22+1)/2;m33=(m33+1)/2;z=(z+m21)/4;m13=(m13+y)/4;m23=(m23+x)/4;m11>m22&&m11>m33?.01>m11?(x=0,z=y=.707106781):(x=Math.sqrt(m11),y=z/x,z=m13/x):m22>m33?.01>m22?(x=
.707106781,y=0,z=.707106781):(y=Math.sqrt(m22),x=z/y,z=m23/y):.01>m33?(y=x=.707106781,z=0):(z=Math.sqrt(m33),x=m13/z,y=m23/z);this.set(x,y,z,m);return this}m=Math.sqrt((x-m23)*(x-m23)+(m13-y)*(m13-y)+(m21-z)*(m21-z));.001>Math.abs(m)&&(m=1);this.x=(x-m23)/m;this.y=(m13-y)/m;this.z=(m21-z)/m;this.w=Math.acos((m11+m22+m33-1)/2);return this};Vector4.prototype.setFromMatrixPosition=function(m){m=m.elements;this.x=m[12];this.y=m[13];this.z=m[14];this.w=m[15];return this};Vector4.prototype.min=function(v){this.x=
Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this};Vector4.prototype.max=function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this};Vector4.prototype.clamp=function(min,max){this.x=clamp(this.x,min.x,max.x);this.y=clamp(this.y,min.y,max.y);this.z=clamp(this.z,min.z,max.z);this.w=clamp(this.w,min.w,max.w);return this};Vector4.prototype.clampScalar=function(minVal,
maxVal){this.x=clamp(this.x,minVal,maxVal);this.y=clamp(this.y,minVal,maxVal);this.z=clamp(this.z,minVal,maxVal);this.w=clamp(this.w,minVal,maxVal);return this};Vector4.prototype.clampLength=function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(clamp(length,min,max))};Vector4.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this};Vector4.prototype.ceil=function(){this.x=
Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this};Vector4.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this};Vector4.prototype.roundToZero=function(){this.x=Math.trunc(this.x);this.y=Math.trunc(this.y);this.z=Math.trunc(this.z);this.w=Math.trunc(this.w);return this};Vector4.prototype.negate=function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=
-this.w;return this};Vector4.prototype.dot=function(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w};Vector4.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w};Vector4.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)};Vector4.prototype.manhattanLength=function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)};Vector4.prototype.normalize=function(){return this.divideScalar(this.length()||
1)};Vector4.prototype.setLength=function(length){return this.normalize().multiplyScalar(length)};Vector4.prototype.lerp=function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this};Vector4.prototype.lerpVectors=function(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this};Vector4.prototype.equals=function(v){return v.x===this.x&&
v.y===this.y&&v.z===this.z&&v.w===this.w};Vector4.prototype.fromArray=function(array,offset){offset=void 0===offset?0:offset;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this};Vector4.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array};Vector4.prototype.fromBufferAttribute=function(attribute,index){this.x=
attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this};Vector4.prototype.random=function(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this};Vector4.prototype[Symbol.iterator]=function $jscomp$generator$function(){var $jscomp$generator$this=this;return $jscomp.generator.createGenerator($jscomp$generator$function,function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:return $jscomp$generator$context.yield($jscomp$generator$this.x,
2);case 2:return $jscomp$generator$context.yield($jscomp$generator$this.y,3);case 3:return $jscomp$generator$context.yield($jscomp$generator$this.z,4);case 4:return $jscomp$generator$context.yield($jscomp$generator$this.w,0)}})};$jscomp.global.Object.defineProperties(Vector4.prototype,{width:{configurable:!0,enumerable:!0,get:function(){return this.z},set:function(value){this.z=value}},height:{configurable:!0,enumerable:!0,get:function(){return this.w},set:function(value){this.w=value}}});var RenderTarget=
function(width,height,options){width=void 0===width?1:width;height=void 0===height?1:height;options=void 0===options?{}:options;options=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},options);this.isRenderTarget=!0;this.width=width;this.height=height;this.depth=options.depth;this.scissor=new Vector4(0,0,width,height);this.scissorTest=!1;this.viewport=
new Vector4(0,0,width,height);width=new Texture({width:width,height:height,depth:options.depth});this.textures=[];height=options.count;for(var i=0;i<height;i++)this.textures[i]=width.clone(),this.textures[i].isRenderTargetTexture=!0,this.textures[i].renderTarget=this;this._setTextureOptions(options);this.depthBuffer=options.depthBuffer;this.stencilBuffer=options.stencilBuffer;this.resolveDepthBuffer=options.resolveDepthBuffer;this.resolveStencilBuffer=options.resolveStencilBuffer;this._depthTexture=
null;this.depthTexture=options.depthTexture;this.samples=options.samples;this.multiview=options.multiview;return this};$jscomp.inherits(RenderTarget,EventDispatcher);RenderTarget.prototype._setTextureOptions=function(options){options=void 0===options?{}:options;var values={minFilter:1006,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==options.mapping&&(values.mapping=options.mapping);void 0!==options.wrapS&&(values.wrapS=options.wrapS);void 0!==options.wrapT&&(values.wrapT=options.wrapT);
void 0!==options.wrapR&&(values.wrapR=options.wrapR);void 0!==options.magFilter&&(values.magFilter=options.magFilter);void 0!==options.minFilter&&(values.minFilter=options.minFilter);void 0!==options.format&&(values.format=options.format);void 0!==options.type&&(values.type=options.type);void 0!==options.anisotropy&&(values.anisotropy=options.anisotropy);void 0!==options.colorSpace&&(values.colorSpace=options.colorSpace);void 0!==options.flipY&&(values.flipY=options.flipY);void 0!==options.generateMipmaps&&
(values.generateMipmaps=options.generateMipmaps);void 0!==options.internalFormat&&(values.internalFormat=options.internalFormat);for(options=0;options<this.textures.length;options++)this.textures[options].setValues(values)};RenderTarget.prototype.setSize=function(width,height,depth){depth=void 0===depth?1:depth;if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;for(var i=0,il=this.textures.length;i<il;i++)this.textures[i].image.width=
width,this.textures[i].image.height=height,this.textures[i].image.depth=depth,this.textures[i].isArrayTexture=1<this.textures[i].image.depth;this.dispose()}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height)};RenderTarget.prototype.clone=function(){return(new this.constructor).copy(this)};RenderTarget.prototype.copy=function(source){this.width=source.width;this.height=source.height;this.depth=source.depth;this.scissor.copy(source.scissor);this.scissorTest=source.scissorTest;this.viewport.copy(source.viewport);
for(var i=this.textures.length=0,il=source.textures.length;i<il;i++){this.textures[i]=source.textures[i].clone();this.textures[i].isRenderTargetTexture=!0;this.textures[i].renderTarget=this;var image=Object.assign({},source.textures[i].image);this.textures[i].source=new Source(image)}this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.resolveDepthBuffer=source.resolveDepthBuffer;this.resolveStencilBuffer=source.resolveStencilBuffer;null!==source.depthTexture&&(this.depthTexture=
source.depthTexture.clone());this.samples=source.samples;return this};RenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};$jscomp.global.Object.defineProperties(RenderTarget.prototype,{texture:{configurable:!0,enumerable:!0,get:function(){return this.textures[0]},set:function(value){this.textures[0]=value}},depthTexture:{configurable:!0,enumerable:!0,set:function(current){null!==this._depthTexture&&(this._depthTexture.renderTarget=null);null!==current&&(current.renderTarget=
this);this._depthTexture=current},get:function(){return this._depthTexture}}});var WebGLRenderTarget=function(width,height,options){options=void 0===options?{}:options;width=RenderTarget.call(this,void 0===width?1:width,void 0===height?1:height,options)||this;width.isWebGLRenderTarget=!0;return width};$jscomp.inherits(WebGLRenderTarget,RenderTarget);var DataArrayTexture=function(data,width,height,depth){data=void 0===data?null:data;width=void 0===width?1:width;height=void 0===height?1:height;depth=
void 0===depth?1:depth;var $jscomp$super$this=Texture.call(this,null)||this;$jscomp$super$this.isDataArrayTexture=!0;$jscomp$super$this.image={data:data,width:width,height:height,depth:depth};$jscomp$super$this.magFilter=1003;$jscomp$super$this.minFilter=1003;$jscomp$super$this.wrapR=1001;$jscomp$super$this.generateMipmaps=!1;$jscomp$super$this.flipY=!1;$jscomp$super$this.unpackAlignment=1;$jscomp$super$this.layerUpdates=new Set;return $jscomp$super$this};$jscomp.inherits(DataArrayTexture,Texture);
DataArrayTexture.prototype.addLayerUpdate=function(layerIndex){this.layerUpdates.add(layerIndex)};DataArrayTexture.prototype.clearLayerUpdates=function(){this.layerUpdates.clear()};var WebGLArrayRenderTarget=function(width,height,depth,options){width=void 0===width?1:width;height=void 0===height?1:height;depth=void 0===depth?1:depth;options=void 0===options?{}:options;var $jscomp$super$this=WebGLRenderTarget.call(this,width,height,options)||this;$jscomp$super$this.isWebGLArrayRenderTarget=!0;$jscomp$super$this.depth=
depth;$jscomp$super$this.texture=new DataArrayTexture(null,width,height,depth);$jscomp$super$this._setTextureOptions(options);$jscomp$super$this.texture.isRenderTargetTexture=!0;return $jscomp$super$this};$jscomp.inherits(WebGLArrayRenderTarget,WebGLRenderTarget);var Data3DTexture=function(data,width,height,depth){data=void 0===data?null:data;width=void 0===width?1:width;height=void 0===height?1:height;depth=void 0===depth?1:depth;var $jscomp$super$this=Texture.call(this,null)||this;$jscomp$super$this.isData3DTexture=
!0;$jscomp$super$this.image={data:data,width:width,height:height,depth:depth};$jscomp$super$this.magFilter=1003;$jscomp$super$this.minFilter=1003;$jscomp$super$this.wrapR=1001;$jscomp$super$this.generateMipmaps=!1;$jscomp$super$this.flipY=!1;$jscomp$super$this.unpackAlignment=1;return $jscomp$super$this};$jscomp.inherits(Data3DTexture,Texture);var WebGL3DRenderTarget=function(width,height,depth,options){width=void 0===width?1:width;height=void 0===height?1:height;depth=void 0===depth?1:depth;options=
void 0===options?{}:options;var $jscomp$super$this=WebGLRenderTarget.call(this,width,height,options)||this;$jscomp$super$this.isWebGL3DRenderTarget=!0;$jscomp$super$this.depth=depth;$jscomp$super$this.texture=new Data3DTexture(null,width,height,depth);$jscomp$super$this._setTextureOptions(options);$jscomp$super$this.texture.isRenderTargetTexture=!0;return $jscomp$super$this};$jscomp.inherits(WebGL3DRenderTarget,WebGLRenderTarget);var Box3=function(min,max){min=void 0===min?new Vector3(Infinity,Infinity,
Infinity):min;max=void 0===max?new Vector3(-Infinity,-Infinity,-Infinity):max;this.isBox3=!0;this.min=min;this.max=max};Box3.prototype.set=function(min,max){this.min.copy(min);this.max.copy(max);return this};Box3.prototype.setFromArray=function(array){this.makeEmpty();for(var i=0,il=array.length;i<il;i+=3)this.expandByPoint(_vector$b.fromArray(array,i));return this};Box3.prototype.setFromBufferAttribute=function(attribute){this.makeEmpty();for(var i=0,il=attribute.count;i<il;i++)this.expandByPoint(_vector$b.fromBufferAttribute(attribute,
i));return this};Box3.prototype.setFromPoints=function(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++)this.expandByPoint(points[i]);return this};Box3.prototype.setFromCenterAndSize=function(center,size){size=_vector$b.copy(size).multiplyScalar(.5);this.min.copy(center).sub(size);this.max.copy(center).add(size);return this};Box3.prototype.setFromObject=function(object,precise){precise=void 0===precise?!1:precise;this.makeEmpty();return this.expandByObject(object,precise)};Box3.prototype.clone=
function(){return(new this.constructor).copy(this)};Box3.prototype.copy=function(box){this.min.copy(box.min);this.max.copy(box.max);return this};Box3.prototype.makeEmpty=function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this};Box3.prototype.isEmpty=function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z};Box3.prototype.getCenter=function(target){return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)};
Box3.prototype.getSize=function(target){return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min)};Box3.prototype.expandByPoint=function(point){this.min.min(point);this.max.max(point);return this};Box3.prototype.expandByVector=function(vector){this.min.sub(vector);this.max.add(vector);return this};Box3.prototype.expandByScalar=function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this};Box3.prototype.expandByObject=function(object,precise){precise=void 0===
precise?!1:precise;object.updateWorldMatrix(!1,!1);var geometry=object.geometry;if(void 0!==geometry){var positionAttribute=geometry.getAttribute("position");if(!0===precise&&void 0!==positionAttribute&&!0!==object.isInstancedMesh){geometry=0;for(var l=positionAttribute.count;geometry<l;geometry++)!0===object.isMesh?object.getVertexPosition(geometry,_vector$b):_vector$b.fromBufferAttribute(positionAttribute,geometry),_vector$b.applyMatrix4(object.matrixWorld),this.expandByPoint(_vector$b)}else void 0!==
object.boundingBox?(null===object.boundingBox&&object.computeBoundingBox(),_box$4.copy(object.boundingBox)):(null===geometry.boundingBox&&geometry.computeBoundingBox(),_box$4.copy(geometry.boundingBox)),_box$4.applyMatrix4(object.matrixWorld),this.union(_box$4)}object=object.children;positionAttribute=0;for(geometry=object.length;positionAttribute<geometry;positionAttribute++)this.expandByObject(object[positionAttribute],precise);return this};Box3.prototype.containsPoint=function(point){return point.x>=
this.min.x&&point.x<=this.max.x&&point.y>=this.min.y&&point.y<=this.max.y&&point.z>=this.min.z&&point.z<=this.max.z};Box3.prototype.containsBox=function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z};Box3.prototype.getParameter=function(point,target){return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z))};
Box3.prototype.intersectsBox=function(box){return box.max.x>=this.min.x&&box.min.x<=this.max.x&&box.max.y>=this.min.y&&box.min.y<=this.max.y&&box.max.z>=this.min.z&&box.min.z<=this.max.z};Box3.prototype.intersectsSphere=function(sphere){this.clampPoint(sphere.center,_vector$b);return _vector$b.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius};Box3.prototype.intersectsPlane=function(plane){if(0<plane.normal.x){var min=plane.normal.x*this.min.x;var max=plane.normal.x*this.max.x}else min=
plane.normal.x*this.max.x,max=plane.normal.x*this.min.x;0<plane.normal.y?(min+=plane.normal.y*this.min.y,max+=plane.normal.y*this.max.y):(min+=plane.normal.y*this.max.y,max+=plane.normal.y*this.min.y);0<plane.normal.z?(min+=plane.normal.z*this.min.z,max+=plane.normal.z*this.max.z):(min+=plane.normal.z*this.max.z,max+=plane.normal.z*this.min.z);return min<=-plane.constant&&max>=-plane.constant};Box3.prototype.intersectsTriangle=function(triangle){if(this.isEmpty())return!1;this.getCenter(_center);
_extents.subVectors(this.max,_center);_v0$3.subVectors(triangle.a,_center);_v1$7.subVectors(triangle.b,_center);_v2$4.subVectors(triangle.c,_center);_f0.subVectors(_v1$7,_v0$3);_f1.subVectors(_v2$4,_v1$7);_f2.subVectors(_v0$3,_v2$4);triangle=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(triangle,_v0$3,_v1$7,_v2$4,_extents))return!1;triangle=[1,0,0,0,1,0,0,0,1];if(!satForAxes(triangle,_v0$3,_v1$7,
_v2$4,_extents))return!1;_triangleNormal.crossVectors(_f0,_f1);triangle=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(triangle,_v0$3,_v1$7,_v2$4,_extents)};Box3.prototype.clampPoint=function(point,target){return target.copy(point).clamp(this.min,this.max)};Box3.prototype.distanceToPoint=function(point){return this.clampPoint(point,_vector$b).distanceTo(point)};Box3.prototype.getBoundingSphere=function(target){this.isEmpty()?target.makeEmpty():(this.getCenter(target.center),
target.radius=.5*this.getSize(_vector$b).length());return target};Box3.prototype.intersect=function(box){this.min.max(box.min);this.max.min(box.max);this.isEmpty()&&this.makeEmpty();return this};Box3.prototype.union=function(box){this.min.min(box.min);this.max.max(box.max);return this};Box3.prototype.applyMatrix4=function(matrix){if(this.isEmpty())return this;_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);
_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);this.setFromPoints(_points);return this};Box3.prototype.translate=function(offset){this.min.add(offset);
this.max.add(offset);return this};Box3.prototype.equals=function(box){return box.min.equals(this.min)&&box.max.equals(this.max)};Box3.prototype.toJSON=function(){return{min:this.min.toArray(),max:this.max.toArray()}};Box3.prototype.fromJSON=function(json){this.min.fromArray(json.min);this.max.fromArray(json.max);return this};var _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$b=new Vector3,_box$4=new Box3,_v0$3=new Vector3,_v1$7=new Vector3,
_v2$4=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3,_box$3=new Box3,_v1$6=new Vector3,_v2$3=new Vector3,Sphere=function(center,radius){center=void 0===center?new Vector3:center;this.isSphere=!0;this.center=center;this.radius=void 0===radius?-1:radius};Sphere.prototype.set=function(center,radius){this.center.copy(center);this.radius=radius;return this};Sphere.prototype.setFromPoints=function(points,
optionalCenter){var center=this.center;void 0!==optionalCenter?center.copy(optionalCenter):_box$3.setFromPoints(points).getCenter(center);for(var i=optionalCenter=0,il=points.length;i<il;i++)optionalCenter=Math.max(optionalCenter,center.distanceToSquared(points[i]));this.radius=Math.sqrt(optionalCenter);return this};Sphere.prototype.copy=function(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this};Sphere.prototype.isEmpty=function(){return 0>this.radius};Sphere.prototype.makeEmpty=
function(){this.center.set(0,0,0);this.radius=-1;return this};Sphere.prototype.containsPoint=function(point){return point.distanceToSquared(this.center)<=this.radius*this.radius};Sphere.prototype.distanceToPoint=function(point){return point.distanceTo(this.center)-this.radius};Sphere.prototype.intersectsSphere=function(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum};Sphere.prototype.intersectsBox=function(box){return box.intersectsSphere(this)};
Sphere.prototype.intersectsPlane=function(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius};Sphere.prototype.clampPoint=function(point,target){var deltaLengthSq=this.center.distanceToSquared(point);target.copy(point);deltaLengthSq>this.radius*this.radius&&(target.sub(this.center).normalize(),target.multiplyScalar(this.radius).add(this.center));return target};Sphere.prototype.getBoundingBox=function(target){if(this.isEmpty())return target.makeEmpty(),target;target.set(this.center,
this.center);target.expandByScalar(this.radius);return target};Sphere.prototype.applyMatrix4=function(matrix){this.center.applyMatrix4(matrix);this.radius*=matrix.getMaxScaleOnAxis();return this};Sphere.prototype.translate=function(offset){this.center.add(offset);return this};Sphere.prototype.expandByPoint=function(point){if(this.isEmpty())return this.center.copy(point),this.radius=0,this;_v1$6.subVectors(point,this.center);point=_v1$6.lengthSq();if(point>this.radius*this.radius){point=Math.sqrt(point);
var delta=.5*(point-this.radius);this.center.addScaledVector(_v1$6,delta/point);this.radius+=delta}return this};Sphere.prototype.union=function(sphere){if(sphere.isEmpty())return this;if(this.isEmpty())return this.copy(sphere),this;!0===this.center.equals(sphere.center)?this.radius=Math.max(this.radius,sphere.radius):(_v2$3.subVectors(sphere.center,this.center).setLength(sphere.radius),this.expandByPoint(_v1$6.copy(sphere.center).add(_v2$3)),this.expandByPoint(_v1$6.copy(sphere.center).sub(_v2$3)));
return this};Sphere.prototype.equals=function(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius};Sphere.prototype.clone=function(){return(new this.constructor).copy(this)};Sphere.prototype.toJSON=function(){return{radius:this.radius,center:this.center.toArray()}};Sphere.prototype.fromJSON=function(json){this.radius=json.radius;this.center.fromArray(json.center);return this};var _vector$a=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,
_edge2=new Vector3,_normal$1=new Vector3,Ray=function(origin,direction){origin=void 0===origin?new Vector3:origin;direction=void 0===direction?new Vector3(0,0,-1):direction;this.origin=origin;this.direction=direction};Ray.prototype.set=function(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this};Ray.prototype.copy=function(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this};Ray.prototype.at=function(t,target){return target.copy(this.origin).addScaledVector(this.direction,
t)};Ray.prototype.lookAt=function(v){this.direction.copy(v).sub(this.origin).normalize();return this};Ray.prototype.recast=function(t){this.origin.copy(this.at(t,_vector$a));return this};Ray.prototype.closestPointToPoint=function(point,target){target.subVectors(point,this.origin);point=target.dot(this.direction);return 0>point?target.copy(this.origin):target.copy(this.origin).addScaledVector(this.direction,point)};Ray.prototype.distanceToPoint=function(point){return Math.sqrt(this.distanceSqToPoint(point))};
Ray.prototype.distanceSqToPoint=function(point){var directionDistance=_vector$a.subVectors(point,this.origin).dot(this.direction);if(0>directionDistance)return this.origin.distanceToSquared(point);_vector$a.copy(this.origin).addScaledVector(this.direction,directionDistance);return _vector$a.distanceToSquared(point)};Ray.prototype.distanceSqToSegment=function(v0,v1,optionalPointOnRay,optionalPointOnSegment){_segCenter.copy(v0).add(v1).multiplyScalar(.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);
var segExtent=.5*v0.distanceTo(v1),a01=-this.direction.dot(_segDir),b0=_diff.dot(this.direction),b1=-_diff.dot(_segDir),c=_diff.lengthSq(),det=Math.abs(1-a01*a01);if(0<det){v0=a01*b1-b0;v1=a01*b0-b1;var extDet=segExtent*det;0<=v0?v1>=-extDet?v1<=extDet?(segExtent=1/det,v0*=segExtent,v1*=segExtent,a01=v0*(v0+a01*v1+2*b0)+v1*(a01*v0+v1+2*b1)+c):(v1=segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c):(v1=-segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c):v1<=-extDet?(v0=Math.max(0,
-(-a01*segExtent+b0)),v1=0<v0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),a01=-v0*v0+v1*(v1+2*b1)+c):v1<=extDet?(v0=0,v1=Math.min(Math.max(-segExtent,-b1),segExtent),a01=v1*(v1+2*b1)+c):(v0=Math.max(0,-(a01*segExtent+b0)),v1=0<v0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),a01=-v0*v0+v1*(v1+2*b1)+c)}else v1=0<a01?-segExtent:segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c;optionalPointOnRay&&optionalPointOnRay.copy(this.origin).addScaledVector(this.direction,
v0);optionalPointOnSegment&&optionalPointOnSegment.copy(_segCenter).addScaledVector(_segDir,v1);return a01};Ray.prototype.intersectSphere=function(sphere,target){_vector$a.subVectors(sphere.center,this.origin);var tca=_vector$a.dot(this.direction),d2=_vector$a.dot(_vector$a)-tca*tca;sphere=sphere.radius*sphere.radius;if(d2>sphere)return null;sphere=Math.sqrt(sphere-d2);d2=tca-sphere;tca+=sphere;return 0>tca?null:0>d2?this.at(tca,target):this.at(d2,target)};Ray.prototype.intersectsSphere=function(sphere){return 0>
sphere.radius?!1:this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius};Ray.prototype.distanceToPlane=function(plane){var denominator=plane.normal.dot(this.direction);if(0===denominator)return 0===plane.distanceToPoint(this.origin)?0:null;plane=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return 0<=plane?plane:null};Ray.prototype.intersectPlane=function(plane,target){plane=this.distanceToPlane(plane);return null===plane?null:this.at(plane,target)};Ray.prototype.intersectsPlane=
function(plane){var distToPoint=plane.distanceToPoint(this.origin);return 0===distToPoint||0>plane.normal.dot(this.direction)*distToPoint?!0:!1};Ray.prototype.intersectBox=function(box,target){var tmax=1/this.direction.x;var tymax=1/this.direction.y;var invdirz=1/this.direction.z,origin=this.origin;if(0<=tmax){var tmin=(box.min.x-origin.x)*tmax;tmax*=box.max.x-origin.x}else tmin=(box.max.x-origin.x)*tmax,tmax*=box.min.x-origin.x;if(0<=tymax){var tymin=(box.min.y-origin.y)*tymax;tymax*=box.max.y-origin.y}else tymin=
(box.max.y-origin.y)*tymax,tymax*=box.min.y-origin.y;if(tmin>tymax||tymin>tmax)return null;if(tymin>tmin||isNaN(tmin))tmin=tymin;if(tymax<tmax||isNaN(tmax))tmax=tymax;0<=invdirz?(tymin=(box.min.z-origin.z)*invdirz,box=(box.max.z-origin.z)*invdirz):(tymin=(box.max.z-origin.z)*invdirz,box=(box.min.z-origin.z)*invdirz);if(tmin>box||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(box<tmax||tmax!==tmax)tmax=box;return 0>tmax?null:this.at(0<=tmin?tmin:tmax,target)};Ray.prototype.intersectsBox=
function(box){return null!==this.intersectBox(box,_vector$a)};Ray.prototype.intersectTriangle=function(a,b,c,backfaceCulling,target){_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal$1.crossVectors(_edge1,_edge2);b=this.direction.dot(_normal$1);if(0<b){if(backfaceCulling)return null;backfaceCulling=1}else if(0>b)backfaceCulling=-1,b=-b;else return null;_diff.subVectors(this.origin,a);a=backfaceCulling*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(0>a)return null;c=backfaceCulling*this.direction.dot(_edge1.cross(_diff));
if(0>c||a+c>b)return null;a=-backfaceCulling*_diff.dot(_normal$1);return 0>a?null:this.at(a/b,target)};Ray.prototype.applyMatrix4=function(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this};Ray.prototype.equals=function(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction)};Ray.prototype.clone=function(){return(new this.constructor).copy(this)};var Matrix4=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,
n44){Matrix4.prototype.isMatrix4=!0;this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];void 0!==n11&&this.set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44)};Matrix4.prototype.set=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this};Matrix4.prototype.identity=function(){this.set(1,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this};Matrix4.prototype.clone=function(){return(new Matrix4).fromArray(this.elements)};Matrix4.prototype.copy=function(m){var te=this.elements;m=m.elements;te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];te[9]=m[9];te[10]=m[10];te[11]=m[11];te[12]=m[12];te[13]=m[13];te[14]=m[14];te[15]=m[15];return this};Matrix4.prototype.copyPosition=function(m){var te=this.elements;m=m.elements;te[12]=m[12];te[13]=m[13];te[14]=
m[14];return this};Matrix4.prototype.setFromMatrix3=function(m){m=m.elements;this.set(m[0],m[3],m[6],0,m[1],m[4],m[7],0,m[2],m[5],m[8],0,0,0,0,1);return this};Matrix4.prototype.extractBasis=function(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this};Matrix4.prototype.makeBasis=function(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this};Matrix4.prototype.extractRotation=
function(m){var te=this.elements,me=m.elements,scaleX=1/_v1$5.setFromMatrixColumn(m,0).length(),scaleY=1/_v1$5.setFromMatrixColumn(m,1).length();m=1/_v1$5.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*m;te[9]=me[9]*m;te[10]=me[10]*m;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this};Matrix4.prototype.makeRotationFromEuler=function(euler){var te=this.elements,x=euler.x,
y=euler.y,z=euler.z,a=Math.cos(x);x=Math.sin(x);var c=Math.cos(y);y=Math.sin(y);var e=Math.cos(z);z=Math.sin(z);if("XYZ"===euler.order){euler=a*e;var af=a*z,be=x*e,bf=x*z;te[0]=c*e;te[4]=-c*z;te[8]=y;te[1]=af+be*y;te[5]=euler-bf*y;te[9]=-x*c;te[2]=bf-euler*y;te[6]=be+af*y;te[10]=a*c}else"YXZ"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=y*z,te[0]=euler+bf*x,te[4]=be*x-af,te[8]=a*y,te[1]=a*z,te[5]=a*e,te[9]=-x,te[2]=af*x-be,te[6]=bf+euler*x,te[10]=a*c):"ZXY"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=
y*z,te[0]=euler-bf*x,te[4]=-a*z,te[8]=be+af*x,te[1]=af+be*x,te[5]=a*e,te[9]=bf-euler*x,te[2]=-a*y,te[6]=x,te[10]=a*c):"ZYX"===euler.order?(euler=a*e,af=a*z,be=x*e,bf=x*z,te[0]=c*e,te[4]=be*y-af,te[8]=euler*y+bf,te[1]=c*z,te[5]=bf*y+euler,te[9]=af*y-be,te[2]=-y,te[6]=x*c,te[10]=a*c):"YZX"===euler.order?(euler=a*c,af=a*y,be=x*c,bf=x*y,te[0]=c*e,te[4]=bf-euler*z,te[8]=be*z+af,te[1]=z,te[5]=a*e,te[9]=-x*e,te[2]=-y*e,te[6]=af*z+be,te[10]=euler-bf*z):"XZY"===euler.order&&(euler=a*c,af=a*y,be=x*c,bf=x*y,
te[0]=c*e,te[4]=-z,te[8]=y*e,te[1]=euler*z+bf,te[5]=a*e,te[9]=af*z-be,te[2]=be*z-af,te[6]=x*e,te[10]=bf*z+euler);te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this};Matrix4.prototype.makeRotationFromQuaternion=function(q){return this.compose(_zero,q,_one)};Matrix4.prototype.lookAt=function(eye,target,up){var te=this.elements;_z.subVectors(eye,target);0===_z.lengthSq()&&(_z.z=1);_z.normalize();_x.crossVectors(up,_z);0===_x.lengthSq()&&(1===Math.abs(up.z)?_z.x+=1E-4:_z.z+=1E-4,
_z.normalize(),_x.crossVectors(up,_z));_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this};Matrix4.prototype.multiply=function(m){return this.multiplyMatrices(this,m)};Matrix4.prototype.premultiply=function(m){return this.multiplyMatrices(m,this)};Matrix4.prototype.multiplyMatrices=function(a,b){var ae=a.elements,be=b.elements;b=this.elements;a=ae[0];var a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=
ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11];ae=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],b42=be[7],b43=be[11];be=be[15];b[0]=a*b11+a12*b21+a13*b31+a14*b41;b[4]=a*b12+a12*b22+a13*b32+a14*b42;b[8]=a*b13+a12*b23+a13*b33+a14*b43;b[12]=a*b14+a12*b24+a13*b34+a14*be;b[1]=a21*b11+a22*b21+a23*b31+a24*b41;b[5]=a21*b12+a22*b22+a23*b32+a24*b42;b[9]=a21*
b13+a22*b23+a23*b33+a24*b43;b[13]=a21*b14+a22*b24+a23*b34+a24*be;b[2]=a31*b11+a32*b21+a33*b31+a34*b41;b[6]=a31*b12+a32*b22+a33*b32+a34*b42;b[10]=a31*b13+a32*b23+a33*b33+a34*b43;b[14]=a31*b14+a32*b24+a33*b34+a34*be;b[3]=a41*b11+a42*b21+a43*b31+ae*b41;b[7]=a41*b12+a42*b22+a43*b32+ae*b42;b[11]=a41*b13+a42*b23+a43*b33+ae*b43;b[15]=a41*b14+a42*b24+a43*b34+ae*be;return this};Matrix4.prototype.multiplyScalar=function(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;
te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this};Matrix4.prototype.determinant=function(){var te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14];return te[3]*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+te[7]*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+te[11]*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*
n21*n34+n14*n22*n31-n12*n24*n31)+te[15]*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)};Matrix4.prototype.transpose=function(){var te=this.elements;var tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this};Matrix4.prototype.setPosition=function(x,y,z){var te=this.elements;x.isVector3?(te[12]=x.x,te[13]=x.y,te[14]=
x.z):(te[12]=x,te[13]=y,te[14]=z);return this};Matrix4.prototype.invert=function(){var te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=
n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34,det=n11*t11+n21*t12+n31*t13+n41*t14;if(0===det)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);det=1/det;te[0]=t11*det;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*det;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*det;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*det;te[4]=t12*det;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-
n11*n34*n43-n13*n31*n44+n11*n33*n44)*det;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*det;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*det;te[8]=t13*det;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*det;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*det;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*det;te[12]=t14*det;te[13]=(n13*
n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*det;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*det;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*det;return this};Matrix4.prototype.scale=function(v){var te=this.elements,x=v.x,y=v.y;v=v.z;te[0]*=x;te[4]*=y;te[8]*=v;te[1]*=x;te[5]*=y;te[9]*=v;te[2]*=x;te[6]*=y;te[10]*=v;te[3]*=x;te[7]*=y;te[11]*=v;return this};Matrix4.prototype.getMaxScaleOnAxis=function(){var te=
this.elements;return Math.sqrt(Math.max(te[0]*te[0]+te[1]*te[1]+te[2]*te[2],te[4]*te[4]+te[5]*te[5]+te[6]*te[6],te[8]*te[8]+te[9]*te[9]+te[10]*te[10]))};Matrix4.prototype.makeTranslation=function(x,y,z){x.isVector3?this.set(1,0,0,x.x,0,1,0,x.y,0,0,1,x.z,0,0,0,1):this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this};Matrix4.prototype.makeRotationX=function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(1,0,0,0,0,c,-theta,0,0,theta,c,0,0,0,0,1);return this};Matrix4.prototype.makeRotationY=
function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,0,theta,0,0,1,0,0,-theta,0,c,0,0,0,0,1);return this};Matrix4.prototype.makeRotationZ=function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,-theta,0,0,theta,c,0,0,0,0,1,0,0,0,0,1);return this};Matrix4.prototype.makeRotationAxis=function(axis,angle){var c=Math.cos(angle);angle=Math.sin(angle);var t=1-c,x=axis.x,y=axis.y;axis=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-angle*axis,tx*axis+angle*y,0,tx*y+angle*axis,
ty*y+c,ty*axis-angle*x,0,tx*axis-angle*y,ty*axis+angle*x,t*axis*axis+c,0,0,0,0,1);return this};Matrix4.prototype.makeScale=function(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this};Matrix4.prototype.makeShear=function(xy,xz,yx,yz,zx,zy){this.set(1,yx,zx,0,xy,1,zy,0,xz,yz,1,0,0,0,0,1);return this};Matrix4.prototype.compose=function(position,quaternion,scale){var te=this.elements,x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w,x2=x+x,y2=y+y,z2=z+z;quaternion=x*x2;var xy=
x*y2;x*=z2;var yy=y*y2;y*=z2;z*=z2;x2*=w;y2*=w;w*=z2;z2=scale.x;var sy=scale.y;scale=scale.z;te[0]=(1-(yy+z))*z2;te[1]=(xy+w)*z2;te[2]=(x-y2)*z2;te[3]=0;te[4]=(xy-w)*sy;te[5]=(1-(quaternion+z))*sy;te[6]=(y+x2)*sy;te[7]=0;te[8]=(x+y2)*scale;te[9]=(y-x2)*scale;te[10]=(1-(quaternion+yy))*scale;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this};Matrix4.prototype.decompose=function(position,quaternion,scale){var te=this.elements,sx=_v1$5.set(te[0],te[1],te[2]).length(),
sy=_v1$5.set(te[4],te[5],te[6]).length(),sz=_v1$5.set(te[8],te[9],te[10]).length();0>this.determinant()&&(sx=-sx);position.x=te[12];position.y=te[13];position.z=te[14];_m1$4.copy(this);position=1/sx;te=1/sy;var invSZ=1/sz;_m1$4.elements[0]*=position;_m1$4.elements[1]*=position;_m1$4.elements[2]*=position;_m1$4.elements[4]*=te;_m1$4.elements[5]*=te;_m1$4.elements[6]*=te;_m1$4.elements[8]*=invSZ;_m1$4.elements[9]*=invSZ;_m1$4.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1$4);scale.x=sx;scale.y=
sy;scale.z=sz;return this};Matrix4.prototype.makePerspective=function(left,right,top,bottom,near,far,coordinateSystem,reversedDepth){coordinateSystem=void 0===coordinateSystem?2E3:coordinateSystem;var te=this.elements;if(void 0===reversedDepth?0:reversedDepth)coordinateSystem=near/(far-near),far=far*near/(far-near);else if(2E3===coordinateSystem)coordinateSystem=-(far+near)/(far-near),far=-2*far*near/(far-near);else if(2001===coordinateSystem)coordinateSystem=-far/(far-near),far=-far*near/(far-near);
else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+coordinateSystem);te[0]=2*near/(right-left);te[4]=0;te[8]=(right+left)/(right-left);te[12]=0;te[1]=0;te[5]=2*near/(top-bottom);te[9]=(top+bottom)/(top-bottom);te[13]=0;te[2]=0;te[6]=0;te[10]=coordinateSystem;te[14]=far;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this};Matrix4.prototype.makeOrthographic=function(left,right,top,bottom,near,far,coordinateSystem,reversedDepth){coordinateSystem=void 0===coordinateSystem?2E3:
coordinateSystem;var te=this.elements;if(void 0===reversedDepth?0:reversedDepth)coordinateSystem=1/(far-near),near=far/(far-near);else if(2E3===coordinateSystem)coordinateSystem=-2/(far-near),near=-(far+near)/(far-near);else if(2001===coordinateSystem)coordinateSystem=-1/(far-near),near=-near/(far-near);else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+coordinateSystem);te[0]=2/(right-left);te[4]=0;te[8]=0;te[12]=-(right+left)/(right-left);te[1]=0;te[5]=2/(top-bottom);
te[9]=0;te[13]=-(top+bottom)/(top-bottom);te[2]=0;te[6]=0;te[10]=coordinateSystem;te[14]=near;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this};Matrix4.prototype.equals=function(matrix){var te=this.elements;matrix=matrix.elements;for(var i=0;16>i;i++)if(te[i]!==matrix[i])return!1;return!0};Matrix4.prototype.fromArray=function(array,offset){offset=void 0===offset?0:offset;for(var i=0;16>i;i++)this.elements[i]=array[i+offset];return this};Matrix4.prototype.toArray=function(array,offset){array=void 0===
array?[]:array;offset=void 0===offset?0:offset;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array};var _v1$5=new Vector3,_m1$4=new Matrix4,_zero=new Vector3(0,
0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3,_matrix$2=new Matrix4,_quaternion$3=new Quaternion,Euler=function(x,y,z,order){order=void 0===order?Euler.DEFAULT_ORDER:order;this.isEuler=!0;this._x=void 0===x?0:x;this._y=void 0===y?0:y;this._z=void 0===z?0:z;this._order=order};Euler.prototype.set=function(x,y,z,order){order=void 0===order?this._order:order;this._x=x;this._y=y;this._z=z;this._order=order;this._onChangeCallback();return this};Euler.prototype.clone=function(){return new this.constructor(this._x,
this._y,this._z,this._order)};Euler.prototype.copy=function(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this};Euler.prototype.setFromRotationMatrix=function(m,order,update){order=void 0===order?this._order:order;update=void 0===update?!0:update;var te=m.elements;m=te[0];var m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6];te=te[10];switch(order){case "XYZ":this._y=Math.asin(clamp(m13,-1,1));.9999999>Math.abs(m13)?
(this._x=Math.atan2(-m23,te),this._z=Math.atan2(-m12,m)):(this._x=Math.atan2(m32,m22),this._z=0);break;case "YXZ":this._x=Math.asin(-clamp(m23,-1,1));.9999999>Math.abs(m23)?(this._y=Math.atan2(m13,te),this._z=Math.atan2(m21,m22)):(this._y=Math.atan2(-m31,m),this._z=0);break;case "ZXY":this._x=Math.asin(clamp(m32,-1,1));.9999999>Math.abs(m32)?(this._y=Math.atan2(-m31,te),this._z=Math.atan2(-m12,m22)):(this._y=0,this._z=Math.atan2(m21,m));break;case "ZYX":this._y=Math.asin(-clamp(m31,-1,1));.9999999>
Math.abs(m31)?(this._x=Math.atan2(m32,te),this._z=Math.atan2(m21,m)):(this._x=0,this._z=Math.atan2(-m12,m22));break;case "YZX":this._z=Math.asin(clamp(m21,-1,1));.9999999>Math.abs(m21)?(this._x=Math.atan2(-m23,m22),this._y=Math.atan2(-m31,m)):(this._x=0,this._y=Math.atan2(m13,te));break;case "XZY":this._z=Math.asin(-clamp(m12,-1,1));.9999999>Math.abs(m12)?(this._x=Math.atan2(m32,m22),this._y=Math.atan2(m13,m)):(this._x=Math.atan2(-m23,te),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+
order)}this._order=order;!0===update&&this._onChangeCallback();return this};Euler.prototype.setFromQuaternion=function(q,order,update){_matrix$2.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix$2,order,update)};Euler.prototype.setFromVector3=function(v,order){order=void 0===order?this._order:order;return this.set(v.x,v.y,v.z,order)};Euler.prototype.reorder=function(newOrder){_quaternion$3.setFromEuler(this);return this.setFromQuaternion(_quaternion$3,newOrder)};Euler.prototype.equals=
function(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order};Euler.prototype.fromArray=function(array){this._x=array[0];this._y=array[1];this._z=array[2];void 0!==array[3]&&(this._order=array[3]);this._onChangeCallback();return this};Euler.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array};
Euler.prototype._onChange=function(callback){this._onChangeCallback=callback;return this};Euler.prototype._onChangeCallback=function(){};Euler.prototype[Symbol.iterator]=function $jscomp$generator$function(){var $jscomp$generator$this=this;return $jscomp.generator.createGenerator($jscomp$generator$function,function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:return $jscomp$generator$context.yield($jscomp$generator$this._x,2);case 2:return $jscomp$generator$context.yield($jscomp$generator$this._y,
3);case 3:return $jscomp$generator$context.yield($jscomp$generator$this._z,4);case 4:return $jscomp$generator$context.yield($jscomp$generator$this._order,0)}})};$jscomp.global.Object.defineProperties(Euler.prototype,{x:{configurable:!0,enumerable:!0,get:function(){return this._x},set:function(value){this._x=value;this._onChangeCallback()}},y:{configurable:!0,enumerable:!0,get:function(){return this._y},set:function(value){this._y=value;this._onChangeCallback()}},z:{configurable:!0,enumerable:!0,get:function(){return this._z},
set:function(value){this._z=value;this._onChangeCallback()}},order:{configurable:!0,enumerable:!0,get:function(){return this._order},set:function(value){this._order=value;this._onChangeCallback()}}});Euler.DEFAULT_ORDER="XYZ";var Layers=function(){this.mask=1};Layers.prototype.set=function(layer){this.mask=(1<<layer|0)>>>0};Layers.prototype.enable=function(layer){this.mask=this.mask|1<<layer|0};Layers.prototype.enableAll=function(){this.mask=-1};Layers.prototype.toggle=function(layer){this.mask^=
1<<layer|0};Layers.prototype.disable=function(layer){this.mask&=~(1<<layer|0)};Layers.prototype.disableAll=function(){this.mask=0};Layers.prototype.test=function(layers){return 0!==(this.mask&layers.mask)};Layers.prototype.isEnabled=function(layer){return 0!==(this.mask&(1<<layer|0))};var _object3DId=0,_v1$4=new Vector3,_q1=new Quaternion,_m1$3=new Matrix4,_target=new Vector3,_position$3=new Vector3,_scale$2=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,
0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"},_childaddedEvent={type:"childadded",child:null},_childremovedEvent={type:"childremoved",child:null},Object3D=function(){this.isObject3D=!0;Object.defineProperty(this,"id",{value:_object3DId++});this.uuid=generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=Object3D.DEFAULT_UP.clone();var position=new Vector3,rotation=new Euler,quaternion=new Quaternion,scale=new Vector3(1,1,
1);rotation._onChange(function(){quaternion.setFromEuler(rotation,!1)});quaternion._onChange(function(){rotation.setFromQuaternion(quaternion,void 0,!1)});Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:position},rotation:{configurable:!0,enumerable:!0,value:rotation},quaternion:{configurable:!0,enumerable:!0,value:quaternion},scale:{configurable:!0,enumerable:!0,value:scale},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}});this.matrix=new Matrix4;
this.matrixWorld=new Matrix4;this.matrixAutoUpdate=Object3D.DEFAULT_MATRIX_AUTO_UPDATE;this.matrixWorldAutoUpdate=Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;this.matrixWorldNeedsUpdate=!1;this.layers=new Layers;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.animations=[];this.customDistanceMaterial=this.customDepthMaterial=void 0;this.userData={};return this};$jscomp.inherits(Object3D,EventDispatcher);Object3D.prototype.onBeforeShadow=function(){};
Object3D.prototype.onAfterShadow=function(){};Object3D.prototype.onBeforeRender=function(){};Object3D.prototype.onAfterRender=function(){};Object3D.prototype.applyMatrix4=function(matrix){this.matrixAutoUpdate&&this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)};Object3D.prototype.applyQuaternion=function(q){this.quaternion.premultiply(q);return this};Object3D.prototype.setRotationFromAxisAngle=function(axis,angle){this.quaternion.setFromAxisAngle(axis,
angle)};Object3D.prototype.setRotationFromEuler=function(euler){this.quaternion.setFromEuler(euler,!0)};Object3D.prototype.setRotationFromMatrix=function(m){this.quaternion.setFromRotationMatrix(m)};Object3D.prototype.setRotationFromQuaternion=function(q){this.quaternion.copy(q)};Object3D.prototype.rotateOnAxis=function(axis,angle){_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this};Object3D.prototype.rotateOnWorldAxis=function(axis,angle){_q1.setFromAxisAngle(axis,angle);
this.quaternion.premultiply(_q1);return this};Object3D.prototype.rotateX=function(angle){return this.rotateOnAxis(_xAxis,angle)};Object3D.prototype.rotateY=function(angle){return this.rotateOnAxis(_yAxis,angle)};Object3D.prototype.rotateZ=function(angle){return this.rotateOnAxis(_zAxis,angle)};Object3D.prototype.translateOnAxis=function(axis,distance){_v1$4.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$4.multiplyScalar(distance));return this};Object3D.prototype.translateX=function(distance){return this.translateOnAxis(_xAxis,
distance)};Object3D.prototype.translateY=function(distance){return this.translateOnAxis(_yAxis,distance)};Object3D.prototype.translateZ=function(distance){return this.translateOnAxis(_zAxis,distance)};Object3D.prototype.localToWorld=function(vector){this.updateWorldMatrix(!0,!1);return vector.applyMatrix4(this.matrixWorld)};Object3D.prototype.worldToLocal=function(vector){this.updateWorldMatrix(!0,!1);return vector.applyMatrix4(_m1$3.copy(this.matrixWorld).invert())};Object3D.prototype.lookAt=function(x,
y,z){x.isVector3?_target.copy(x):_target.set(x,y,z);x=this.parent;this.updateWorldMatrix(!0,!1);_position$3.setFromMatrixPosition(this.matrixWorld);this.isCamera||this.isLight?_m1$3.lookAt(_position$3,_target,this.up):_m1$3.lookAt(_target,_position$3,this.up);this.quaternion.setFromRotationMatrix(_m1$3);x&&(_m1$3.extractRotation(x.matrixWorld),_q1.setFromRotationMatrix(_m1$3),this.quaternion.premultiply(_q1.invert()))};Object3D.prototype.add=function(object){if(1<arguments.length){for(var i=0;i<arguments.length;i++)this.add(arguments[i]);
return this}if(object===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this;object&&object.isObject3D?(object.removeFromParent(),object.parent=this,this.children.push(object),object.dispatchEvent(_addedEvent),_childaddedEvent.child=object,this.dispatchEvent(_childaddedEvent),_childaddedEvent.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object);return this};Object3D.prototype.remove=function(object){if(1<
arguments.length){for(var i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}i=this.children.indexOf(object);-1!==i&&(object.parent=null,this.children.splice(i,1),object.dispatchEvent(_removedEvent),_childremovedEvent.child=object,this.dispatchEvent(_childremovedEvent),_childremovedEvent.child=null);return this};Object3D.prototype.removeFromParent=function(){var parent=this.parent;null!==parent&&parent.remove(this);return this};Object3D.prototype.clear=function(){return this.remove.apply(this,
$jscomp.arrayFromIterable(this.children))};Object3D.prototype.attach=function(object){this.updateWorldMatrix(!0,!1);_m1$3.copy(this.matrixWorld).invert();null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),_m1$3.multiply(object.parent.matrixWorld));object.applyMatrix4(_m1$3);object.removeFromParent();object.parent=this;this.children.push(object);object.updateWorldMatrix(!1,!0);object.dispatchEvent(_addedEvent);_childaddedEvent.child=object;this.dispatchEvent(_childaddedEvent);_childaddedEvent.child=
null;return this};Object3D.prototype.getObjectById=function(id){return this.getObjectByProperty("id",id)};Object3D.prototype.getObjectByName=function(name){return this.getObjectByProperty("name",name)};Object3D.prototype.getObjectByProperty=function(name,value){if(this[name]===value)return this;for(var i=0,l=this.children.length;i<l;i++){var object=this.children[i].getObjectByProperty(name,value);if(void 0!==object)return object}};Object3D.prototype.getObjectsByProperty=function(name,value,result){result=
void 0===result?[]:result;this[name]===value&&result.push(this);for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].getObjectsByProperty(name,value,result);return result};Object3D.prototype.getWorldPosition=function(target){this.updateWorldMatrix(!0,!1);return target.setFromMatrixPosition(this.matrixWorld)};Object3D.prototype.getWorldQuaternion=function(target){this.updateWorldMatrix(!0,!1);this.matrixWorld.decompose(_position$3,target,_scale$2);return target};Object3D.prototype.getWorldScale=
function(target){this.updateWorldMatrix(!0,!1);this.matrixWorld.decompose(_position$3,_quaternion$2,target);return target};Object3D.prototype.getWorldDirection=function(target){this.updateWorldMatrix(!0,!1);var e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize()};Object3D.prototype.raycast=function(){};Object3D.prototype.traverse=function(callback){callback(this);for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].traverse(callback)};Object3D.prototype.traverseVisible=
function(callback){if(!1!==this.visible){callback(this);for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].traverseVisible(callback)}};Object3D.prototype.traverseAncestors=function(callback){var parent=this.parent;null!==parent&&(callback(parent),parent.traverseAncestors(callback))};Object3D.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};Object3D.prototype.updateMatrixWorld=function(force){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||force)!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,force=!0;for(var children=this.children,i=0,l=children.length;i<l;i++)children[i].updateMatrixWorld(force)};Object3D.prototype.updateWorldMatrix=function(updateParents,updateChildren){var parent=this.parent;!0===updateParents&&null!==parent&&parent.updateWorldMatrix(!0,
!1);this.matrixAutoUpdate&&this.updateMatrix();!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix));if(!0===updateChildren)for(updateParents=this.children,updateChildren=0,parent=updateParents.length;updateChildren<parent;updateChildren++)updateParents[updateChildren].updateWorldMatrix(!1,!0)};Object3D.prototype.toJSON=function(meta){function serialize(library,element){void 0===library[element.uuid]&&
(library[element.uuid]=element.toJSON(meta));return element.uuid}function extractFromCache(cache){var values=[],key;for(key in cache){var data=cache[key];delete data.metadata;values.push(data)}return values}var isRootObject=void 0===meta||"string"===typeof meta,output={};isRootObject&&(meta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},output.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});var object={};object.uuid=this.uuid;object.type=
this.type;""!==this.name&&(object.name=this.name);!0===this.castShadow&&(object.castShadow=!0);!0===this.receiveShadow&&(object.receiveShadow=!0);!1===this.visible&&(object.visible=!1);!1===this.frustumCulled&&(object.frustumCulled=!1);0!==this.renderOrder&&(object.renderOrder=this.renderOrder);0<Object.keys(this.userData).length&&(object.userData=this.userData);object.layers=this.layers.mask;object.matrix=this.matrix.toArray();object.up=this.up.toArray();!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=
!1);this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(object.instanceColor=this.instanceColor.toJSON()));this.isBatchedMesh&&(object.type="BatchedMesh",object.perObjectFrustumCulled=this.perObjectFrustumCulled,object.sortObjects=this.sortObjects,object.drawRanges=this._drawRanges,object.reservedRanges=this._reservedRanges,object.geometryInfo=this._geometryInfo.map(function(info){return Object.assign({},
info,{boundingBox:info.boundingBox?info.boundingBox.toJSON():void 0,boundingSphere:info.boundingSphere?info.boundingSphere.toJSON():void 0})}),object.instanceInfo=this._instanceInfo.map(function(info){return Object.assign({},info)}),object.availableInstanceIds=this._availableInstanceIds.slice(),object.availableGeometryIds=this._availableGeometryIds.slice(),object.nextIndexStart=this._nextIndexStart,object.nextVertexStart=this._nextVertexStart,object.geometryCount=this._geometryCount,object.maxInstanceCount=
this._maxInstanceCount,object.maxVertexCount=this._maxVertexCount,object.maxIndexCount=this._maxIndexCount,object.geometryInitialized=this._geometryInitialized,object.matricesTexture=this._matricesTexture.toJSON(meta),object.indirectTexture=this._indirectTexture.toJSON(meta),null!==this._colorsTexture&&(object.colorsTexture=this._colorsTexture.toJSON(meta)),null!==this.boundingSphere&&(object.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(object.boundingBox=this.boundingBox.toJSON()));
if(this.isScene)this.background&&(this.background.isColor?object.background=this.background.toJSON():this.background.isTexture&&(object.background=this.background.toJSON(meta).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(object.environment=this.environment.toJSON(meta).uuid);else if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);var parameters=this.geometry.parameters;if(void 0!==parameters&&void 0!==
parameters.shapes)if(parameters=parameters.shapes,Array.isArray(parameters))for(var i=0,l=parameters.length;i<l;i++)serialize(meta.shapes,parameters[i]);else serialize(meta.shapes,parameters)}this.isSkinnedMesh&&(object.bindMode=this.bindMode,object.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(serialize(meta.skeletons,this.skeleton),object.skeleton=this.skeleton.uuid));if(void 0!==this.material)if(Array.isArray(this.material)){parameters=[];i=0;for(l=this.material.length;i<l;i++)parameters.push(serialize(meta.materials,
this.material[i]));object.material=parameters}else object.material=serialize(meta.materials,this.material);if(0<this.children.length)for(object.children=[],parameters=0;parameters<this.children.length;parameters++)object.children.push(this.children[parameters].toJSON(meta).object);if(0<this.animations.length)for(object.animations=[],parameters=0;parameters<this.animations.length;parameters++)object.animations.push(serialize(meta.animations,this.animations[parameters]));if(isRootObject){isRootObject=
extractFromCache(meta.geometries);parameters=extractFromCache(meta.materials);i=extractFromCache(meta.textures);l=extractFromCache(meta.images);var shapes$38=extractFromCache(meta.shapes),skeletons=extractFromCache(meta.skeletons),animations=extractFromCache(meta.animations),nodes=extractFromCache(meta.nodes);0<isRootObject.length&&(output.geometries=isRootObject);0<parameters.length&&(output.materials=parameters);0<i.length&&(output.textures=i);0<l.length&&(output.images=l);0<shapes$38.length&&(output.shapes=
shapes$38);0<skeletons.length&&(output.skeletons=skeletons);0<animations.length&&(output.animations=animations);0<nodes.length&&(output.nodes=nodes)}output.object=object;return output};Object3D.prototype.clone=function(recursive){return(new this.constructor).copy(this,recursive)};Object3D.prototype.copy=function(source,recursive){recursive=void 0===recursive?!0:recursive;this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.rotation.order=source.rotation.order;this.quaternion.copy(source.quaternion);
this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldAutoUpdate=source.matrixWorldAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.animations=source.animations.slice();
this.userData=JSON.parse(JSON.stringify(source.userData));if(!0===recursive)for(recursive=0;recursive<source.children.length;recursive++)this.add(source.children[recursive].clone());return this};Object3D.DEFAULT_UP=new Vector3(0,1,0);Object3D.DEFAULT_MATRIX_AUTO_UPDATE=!0;Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;var _v0$2=new Vector3,_v1$3=new Vector3,_v2$2=new Vector3,_v3$2=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3,_v40=
new Vector4,_v41=new Vector4,_v42=new Vector4,Triangle=function(a,b,c){a=void 0===a?new Vector3:a;b=void 0===b?new Vector3:b;c=void 0===c?new Vector3:c;this.a=a;this.b=b;this.c=c};Triangle.getNormal=function(a,b,c,target){target.subVectors(c,b);_v0$2.subVectors(a,b);target.cross(_v0$2);a=target.lengthSq();return 0<a?target.multiplyScalar(1/Math.sqrt(a)):target.set(0,0,0)};Triangle.getBarycoord=function(point,a,b,c,target){_v0$2.subVectors(c,a);_v1$3.subVectors(b,a);_v2$2.subVectors(point,a);point=
_v0$2.dot(_v0$2);a=_v0$2.dot(_v1$3);b=_v0$2.dot(_v2$2);var dot11=_v1$3.dot(_v1$3);c=_v1$3.dot(_v2$2);var denom=point*dot11-a*a;if(0===denom)return target.set(0,0,0),null;denom=1/denom;dot11=(dot11*b-a*c)*denom;point=(point*c-a*b)*denom;return target.set(1-dot11-point,point,dot11)};Triangle.containsPoint=function(point,a,b,c){return null===this.getBarycoord(point,a,b,c,_v3$2)?!1:0<=_v3$2.x&&0<=_v3$2.y&&1>=_v3$2.x+_v3$2.y};Triangle.getInterpolation=function(point,p1,p2,p3,v1,v2,v3,target){if(null===
this.getBarycoord(point,p1,p2,p3,_v3$2))return target.x=0,target.y=0,"z"in target&&(target.z=0),"w"in target&&(target.w=0),null;target.setScalar(0);target.addScaledVector(v1,_v3$2.x);target.addScaledVector(v2,_v3$2.y);target.addScaledVector(v3,_v3$2.z);return target};Triangle.getInterpolatedAttribute=function(attr,i1,i2,i3,barycoord,target){_v40.setScalar(0);_v41.setScalar(0);_v42.setScalar(0);_v40.fromBufferAttribute(attr,i1);_v41.fromBufferAttribute(attr,i2);_v42.fromBufferAttribute(attr,i3);target.setScalar(0);
target.addScaledVector(_v40,barycoord.x);target.addScaledVector(_v41,barycoord.y);target.addScaledVector(_v42,barycoord.z);return target};Triangle.isFrontFacing=function(a,b,c,direction){_v0$2.subVectors(c,b);_v1$3.subVectors(a,b);return 0>_v0$2.cross(_v1$3).dot(direction)?!0:!1};Triangle.prototype.set=function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this};Triangle.prototype.setFromPointsAndIndices=function(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);
return this};Triangle.prototype.setFromAttributeAndIndices=function(attribute,i0,i1,i2){this.a.fromBufferAttribute(attribute,i0);this.b.fromBufferAttribute(attribute,i1);this.c.fromBufferAttribute(attribute,i2);return this};Triangle.prototype.clone=function(){return(new this.constructor).copy(this)};Triangle.prototype.copy=function(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this};Triangle.prototype.getArea=function(){_v0$2.subVectors(this.c,this.b);_v1$3.subVectors(this.a,
this.b);return.5*_v0$2.cross(_v1$3).length()};Triangle.prototype.getMidpoint=function(target){return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)};Triangle.prototype.getNormal=function(target){return Triangle.getNormal(this.a,this.b,this.c,target)};Triangle.prototype.getPlane=function(target){return target.setFromCoplanarPoints(this.a,this.b,this.c)};Triangle.prototype.getBarycoord=function(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target)};Triangle.prototype.getInterpolation=
function(point,v1,v2,v3,target){return Triangle.getInterpolation(point,this.a,this.b,this.c,v1,v2,v3,target)};Triangle.prototype.containsPoint=function(point){return Triangle.containsPoint(point,this.a,this.b,this.c)};Triangle.prototype.isFrontFacing=function(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction)};Triangle.prototype.intersectsBox=function(box){return box.intersectsTriangle(this)};Triangle.prototype.closestPointToPoint=function(p,target){var a=this.a,b=this.b,c=this.c;
_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);var d1=_vab.dot(_vap),d2=_vac.dot(_vap);if(0>=d1&&0>=d2)return target.copy(a);_vbp.subVectors(p,b);var d3=_vab.dot(_vbp),d4=_vac.dot(_vbp);if(0<=d3&&d4<=d3)return target.copy(b);var w=d1*d4-d3*d2;if(0>=w&&0<=d1&&0>=d3)return b=d1/(d1-d3),target.copy(a).addScaledVector(_vab,b);_vcp.subVectors(p,c);p=_vab.dot(_vcp);var d6=_vac.dot(_vcp);if(0<=d6&&p<=d6)return target.copy(c);d1=p*d2-d1*d6;if(0>=d1&&0<=d2&&0>=d6)return w=d2/(d2-d6),target.copy(a).addScaledVector(_vac,
w);d2=d3*d6-p*d4;if(0>=d2&&0<=d4-d3&&0<=p-d6)return _vbc.subVectors(c,b),w=(d4-d3)/(d4-d3+(p-d6)),target.copy(b).addScaledVector(_vbc,w);c=1/(d2+d1+w);b=d1*c;w*=c;return target.copy(a).addScaledVector(_vab,b).addScaledVector(_vac,w)};Triangle.prototype.equals=function(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c)};var _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,
black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,
darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,
lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,
mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,
purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},
_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0},Color=function(r,g,b){this.isColor=!0;this.b=this.g=this.r=1;return this.set(r,g,b)};Color.prototype.set=function(r,g,b){void 0===g&&void 0===b?r&&r.isColor?this.copy(r):"number"===typeof r?this.setHex(r):"string"===typeof r&&this.setStyle(r):this.setRGB(r,g,b);return this};Color.prototype.setScalar=function(scalar){this.b=this.g=this.r=scalar;return this};Color.prototype.setHex=function(hex,colorSpace){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>
8&255)/255;this.b=(hex&255)/255;ColorManagement.colorSpaceToWorking(this,void 0===colorSpace?"srgb":colorSpace);return this};Color.prototype.setRGB=function(r,g,b,colorSpace){colorSpace=void 0===colorSpace?ColorManagement.workingColorSpace:colorSpace;this.r=r;this.g=g;this.b=b;ColorManagement.colorSpaceToWorking(this,colorSpace);return this};Color.prototype.setHSL=function(h,s,l,colorSpace){colorSpace=void 0===colorSpace?ColorManagement.workingColorSpace:colorSpace;h=euclideanModulo(h,1);s=clamp(s,
0,1);l=clamp(l,0,1);0===s?this.r=this.g=this.b=l:(s=.5>=l?l*(1+s):l+s-l*s,l=2*l-s,this.r=hue2rgb(l,s,h+1/3),this.g=hue2rgb(l,s,h),this.b=hue2rgb(l,s,h-1/3));ColorManagement.colorSpaceToWorking(this,colorSpace);return this};Color.prototype.setStyle=function(style,colorSpace){function handleAlpha(string){void 0!==string&&1>parseFloat(string)&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}colorSpace=void 0===colorSpace?"srgb":colorSpace;var m;if(m=/^(\w+)\(([^\)]*)\)/.exec(style)){var components=
m[2];switch(m[1]){case "rgb":case "rgba":if(m=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return handleAlpha(m[4]),this.setRGB(Math.min(255,parseInt(m[1],10))/255,Math.min(255,parseInt(m[2],10))/255,Math.min(255,parseInt(m[3],10))/255,colorSpace);if(m=/^\s*(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return handleAlpha(m[4]),this.setRGB(Math.min(100,parseInt(m[1],10))/100,Math.min(100,parseInt(m[2],10))/100,Math.min(100,parseInt(m[3],
10))/100,colorSpace);break;case "hsl":case "hsla":if(m=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)%\s*,\s*(\d*\.?\d+)%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return handleAlpha(m[4]),this.setHSL(parseFloat(m[1])/360,parseFloat(m[2])/100,parseFloat(m[3])/100,colorSpace);break;default:console.warn("THREE.Color: Unknown color model "+style)}}else if(m=/^#([A-Fa-f\d]+)$/.exec(style)){components=m[1];m=components.length;if(3===m)return this.setRGB(parseInt(components.charAt(0),16)/15,parseInt(components.charAt(1),
16)/15,parseInt(components.charAt(2),16)/15,colorSpace);if(6===m)return this.setHex(parseInt(components,16),colorSpace);console.warn("THREE.Color: Invalid hex color "+style)}else if(style&&0<style.length)return this.setColorName(style,colorSpace);return this};Color.prototype.setColorName=function(style,colorSpace){colorSpace=void 0===colorSpace?"srgb":colorSpace;var hex=_colorKeywords[style.toLowerCase()];void 0!==hex?this.setHex(hex,colorSpace):console.warn("THREE.Color: Unknown color "+style);return this};
Color.prototype.clone=function(){return new this.constructor(this.r,this.g,this.b)};Color.prototype.copy=function(color){this.r=color.r;this.g=color.g;this.b=color.b;return this};Color.prototype.copySRGBToLinear=function(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this};Color.prototype.copyLinearToSRGB=function(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this};Color.prototype.convertSRGBToLinear=
function(){this.copySRGBToLinear(this);return this};Color.prototype.convertLinearToSRGB=function(){this.copyLinearToSRGB(this);return this};Color.prototype.getHex=function(colorSpace){colorSpace=void 0===colorSpace?"srgb":colorSpace;ColorManagement.workingToColorSpace(_color.copy(this),colorSpace);return 65536*Math.round(clamp(255*_color.r,0,255))+256*Math.round(clamp(255*_color.g,0,255))+Math.round(clamp(255*_color.b,0,255))};Color.prototype.getHexString=function(colorSpace){return("000000"+this.getHex(void 0===
colorSpace?"srgb":colorSpace).toString(16)).slice(-6)};Color.prototype.getHSL=function(target,colorSpace){colorSpace=void 0===colorSpace?ColorManagement.workingColorSpace:colorSpace;ColorManagement.workingToColorSpace(_color.copy(this),colorSpace);colorSpace=_color.r;var g=_color.g,b=_color.b,max=Math.max(colorSpace,g,b),min=Math.min(colorSpace,g,b),hue,lightness=(min+max)/2;if(min===max)min=hue=0;else{var delta=max-min;min=.5>=lightness?delta/(max+min):delta/(2-max-min);switch(max){case colorSpace:hue=
(g-b)/delta+(g<b?6:0);break;case g:hue=(b-colorSpace)/delta+2;break;case b:hue=(colorSpace-g)/delta+4}hue/=6}target.h=hue;target.s=min;target.l=lightness;return target};Color.prototype.getRGB=function(target,colorSpace){colorSpace=void 0===colorSpace?ColorManagement.workingColorSpace:colorSpace;ColorManagement.workingToColorSpace(_color.copy(this),colorSpace);target.r=_color.r;target.g=_color.g;target.b=_color.b;return target};Color.prototype.getStyle=function(colorSpace){colorSpace=void 0===colorSpace?
"srgb":colorSpace;ColorManagement.workingToColorSpace(_color.copy(this),colorSpace);var r=_color.r,g=_color.g,b=_color.b;return"srgb"!==colorSpace?"color("+colorSpace+" "+r.toFixed(3)+" "+g.toFixed(3)+" "+b.toFixed(3)+")":"rgb("+Math.round(255*r)+","+Math.round(255*g)+","+Math.round(255*b)+")"};Color.prototype.offsetHSL=function(h,s,l){this.getHSL(_hslA);return this.setHSL(_hslA.h+h,_hslA.s+s,_hslA.l+l)};Color.prototype.add=function(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this};
Color.prototype.addColors=function(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this};Color.prototype.addScalar=function(s){this.r+=s;this.g+=s;this.b+=s;return this};Color.prototype.sub=function(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this};Color.prototype.multiply=function(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this};Color.prototype.multiplyScalar=
function(s){this.r*=s;this.g*=s;this.b*=s;return this};Color.prototype.lerp=function(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this};Color.prototype.lerpColors=function(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this};Color.prototype.lerpHSL=function(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);color=lerp(_hslA.h,
_hslB.h,alpha);var s=lerp(_hslA.s,_hslB.s,alpha);alpha=lerp(_hslA.l,_hslB.l,alpha);this.setHSL(color,s,alpha);return this};Color.prototype.setFromVector3=function(v){this.r=v.x;this.g=v.y;this.b=v.z;return this};Color.prototype.applyMatrix3=function(m){var r=this.r,g=this.g,b=this.b;m=m.elements;this.r=m[0]*r+m[3]*g+m[6]*b;this.g=m[1]*r+m[4]*g+m[7]*b;this.b=m[2]*r+m[5]*g+m[8]*b;return this};Color.prototype.equals=function(c){return c.r===this.r&&c.g===this.g&&c.b===this.b};Color.prototype.fromArray=
function(array,offset){offset=void 0===offset?0:offset;this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this};Color.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array};Color.prototype.fromBufferAttribute=function(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);return this};Color.prototype.toJSON=
function(){return this.getHex()};Color.prototype[Symbol.iterator]=function $jscomp$generator$function(){var $jscomp$generator$this=this;return $jscomp.generator.createGenerator($jscomp$generator$function,function($jscomp$generator$context){return 1==$jscomp$generator$context.nextAddress?$jscomp$generator$context.yield($jscomp$generator$this.r,2):3!=$jscomp$generator$context.nextAddress?$jscomp$generator$context.yield($jscomp$generator$this.g,3):$jscomp$generator$context.yield($jscomp$generator$this.b,
0)})};var _color=new Color;Color.NAMES=_colorKeywords;var _materialId=0,Material=function(){this.isMaterial=!0;Object.defineProperty(this,"id",{value:_materialId++});this.uuid=generateUUID();this.name="";this.type="Material";this.blending=1;this.side=0;this.vertexColors=!1;this.opacity=1;this.alphaHash=this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.blendColor=new Color(0,0,0);this.blendAlpha=0;
this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.stencilWriteMask=255;this.stencilFunc=519;this.stencilRef=0;this.stencilFuncMask=255;this.stencilZPass=this.stencilZFail=this.stencilFail=7680;this.stencilWrite=!1;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.shadowSide=null;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.forceSinglePass=this.premultipliedAlpha=this.alphaToCoverage=this.dithering=
!1;this.toneMapped=this.visible=this.allowOverride=!0;this.userData={};this._alphaTest=this.version=0;return this};$jscomp.inherits(Material,EventDispatcher);Material.prototype.onBeforeRender=function(){};Material.prototype.onBeforeCompile=function(){};Material.prototype.customProgramCacheKey=function(){return this.onBeforeCompile.toString()};Material.prototype.setValues=function(values){if(void 0!==values)for(var key in values){var newValue=values[key];if(void 0===newValue)console.warn("THREE.Material: parameter '"+
key+"' has value of undefined.");else{var currentValue=this[key];void 0===currentValue?console.warn("THREE.Material: '"+key+"' is not a property of THREE."+this.type+"."):currentValue&&currentValue.isColor?currentValue.set(newValue):currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3?currentValue.copy(newValue):this[key]=newValue}}};Material.prototype.toJSON=function(meta){function extractFromCache(cache){var values=[],key;for(key in cache){var data$39=cache[key];delete data$39.metadata;
values.push(data$39)}return values}var isRootObject=void 0===meta||"string"===typeof meta;isRootObject&&(meta={textures:{},images:{}});var data={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};data.uuid=this.uuid;data.type=this.type;""!==this.name&&(data.name=this.name);this.color&&this.color.isColor&&(data.color=this.color.getHex());void 0!==this.roughness&&(data.roughness=this.roughness);void 0!==this.metalness&&(data.metalness=this.metalness);void 0!==this.sheen&&(data.sheen=
this.sheen);this.sheenColor&&this.sheenColor.isColor&&(data.sheenColor=this.sheenColor.getHex());void 0!==this.sheenRoughness&&(data.sheenRoughness=this.sheenRoughness);this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex());void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity);this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex());void 0!==this.specularIntensity&&(data.specularIntensity=this.specularIntensity);
this.specularColor&&this.specularColor.isColor&&(data.specularColor=this.specularColor.getHex());void 0!==this.shininess&&(data.shininess=this.shininess);void 0!==this.clearcoat&&(data.clearcoat=this.clearcoat);void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness);this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid);this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid);
this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray());this.sheenColorMap&&this.sheenColorMap.isTexture&&(data.sheenColorMap=this.sheenColorMap.toJSON(meta).uuid);this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(data.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(meta).uuid);void 0!==this.dispersion&&(data.dispersion=this.dispersion);void 0!==this.iridescence&&
(data.iridescence=this.iridescence);void 0!==this.iridescenceIOR&&(data.iridescenceIOR=this.iridescenceIOR);void 0!==this.iridescenceThicknessRange&&(data.iridescenceThicknessRange=this.iridescenceThicknessRange);this.iridescenceMap&&this.iridescenceMap.isTexture&&(data.iridescenceMap=this.iridescenceMap.toJSON(meta).uuid);this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(data.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(meta).uuid);void 0!==this.anisotropy&&(data.anisotropy=
this.anisotropy);void 0!==this.anisotropyRotation&&(data.anisotropyRotation=this.anisotropyRotation);this.anisotropyMap&&this.anisotropyMap.isTexture&&(data.anisotropyMap=this.anisotropyMap.toJSON(meta).uuid);this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid);this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid);this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid);this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid,
data.lightMapIntensity=this.lightMapIntensity);this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity);this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,data.bumpScale=this.bumpScale);this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&
(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid);this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid);this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid);this.specularMap&&this.specularMap.isTexture&&
(data.specularMap=this.specularMap.toJSON(meta).uuid);this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(data.specularIntensityMap=this.specularIntensityMap.toJSON(meta).uuid);this.specularColorMap&&this.specularColorMap.isTexture&&(data.specularColorMap=this.specularColorMap.toJSON(meta).uuid);this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,void 0!==this.combine&&(data.combine=this.combine));void 0!==this.envMapRotation&&(data.envMapRotation=this.envMapRotation.toArray());
void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity);void 0!==this.reflectivity&&(data.reflectivity=this.reflectivity);void 0!==this.refractionRatio&&(data.refractionRatio=this.refractionRatio);this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid);void 0!==this.transmission&&(data.transmission=this.transmission);this.transmissionMap&&this.transmissionMap.isTexture&&(data.transmissionMap=this.transmissionMap.toJSON(meta).uuid);void 0!==
this.thickness&&(data.thickness=this.thickness);this.thicknessMap&&this.thicknessMap.isTexture&&(data.thicknessMap=this.thicknessMap.toJSON(meta).uuid);void 0!==this.attenuationDistance&&Infinity!==this.attenuationDistance&&(data.attenuationDistance=this.attenuationDistance);void 0!==this.attenuationColor&&(data.attenuationColor=this.attenuationColor.getHex());void 0!==this.size&&(data.size=this.size);null!==this.shadowSide&&(data.shadowSide=this.shadowSide);void 0!==this.sizeAttenuation&&(data.sizeAttenuation=
this.sizeAttenuation);1!==this.blending&&(data.blending=this.blending);0!==this.side&&(data.side=this.side);!0===this.vertexColors&&(data.vertexColors=!0);1>this.opacity&&(data.opacity=this.opacity);!0===this.transparent&&(data.transparent=!0);204!==this.blendSrc&&(data.blendSrc=this.blendSrc);205!==this.blendDst&&(data.blendDst=this.blendDst);100!==this.blendEquation&&(data.blendEquation=this.blendEquation);null!==this.blendSrcAlpha&&(data.blendSrcAlpha=this.blendSrcAlpha);null!==this.blendDstAlpha&&
(data.blendDstAlpha=this.blendDstAlpha);null!==this.blendEquationAlpha&&(data.blendEquationAlpha=this.blendEquationAlpha);this.blendColor&&this.blendColor.isColor&&(data.blendColor=this.blendColor.getHex());0!==this.blendAlpha&&(data.blendAlpha=this.blendAlpha);3!==this.depthFunc&&(data.depthFunc=this.depthFunc);!1===this.depthTest&&(data.depthTest=this.depthTest);!1===this.depthWrite&&(data.depthWrite=this.depthWrite);!1===this.colorWrite&&(data.colorWrite=this.colorWrite);255!==this.stencilWriteMask&&
(data.stencilWriteMask=this.stencilWriteMask);519!==this.stencilFunc&&(data.stencilFunc=this.stencilFunc);0!==this.stencilRef&&(data.stencilRef=this.stencilRef);255!==this.stencilFuncMask&&(data.stencilFuncMask=this.stencilFuncMask);7680!==this.stencilFail&&(data.stencilFail=this.stencilFail);7680!==this.stencilZFail&&(data.stencilZFail=this.stencilZFail);7680!==this.stencilZPass&&(data.stencilZPass=this.stencilZPass);!0===this.stencilWrite&&(data.stencilWrite=this.stencilWrite);void 0!==this.rotation&&
0!==this.rotation&&(data.rotation=this.rotation);!0===this.polygonOffset&&(data.polygonOffset=!0);0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor);0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits);void 0!==this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth);void 0!==this.dashSize&&(data.dashSize=this.dashSize);void 0!==this.gapSize&&(data.gapSize=this.gapSize);void 0!==this.scale&&(data.scale=this.scale);!0===this.dithering&&
(data.dithering=!0);0<this.alphaTest&&(data.alphaTest=this.alphaTest);!0===this.alphaHash&&(data.alphaHash=!0);!0===this.alphaToCoverage&&(data.alphaToCoverage=!0);!0===this.premultipliedAlpha&&(data.premultipliedAlpha=!0);!0===this.forceSinglePass&&(data.forceSinglePass=!0);!0===this.wireframe&&(data.wireframe=!0);1<this.wireframeLinewidth&&(data.wireframeLinewidth=this.wireframeLinewidth);"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&
(data.wireframeLinejoin=this.wireframeLinejoin);!0===this.flatShading&&(data.flatShading=!0);!1===this.visible&&(data.visible=!1);!1===this.toneMapped&&(data.toneMapped=!1);!1===this.fog&&(data.fog=!1);0<Object.keys(this.userData).length&&(data.userData=this.userData);isRootObject&&(isRootObject=extractFromCache(meta.textures),meta=extractFromCache(meta.images),0<isRootObject.length&&(data.textures=isRootObject),0<meta.length&&(data.images=meta));return data};Material.prototype.clone=function(){return(new this.constructor).copy(this)};
Material.prototype.copy=function(source){this.name=source.name;this.blending=source.blending;this.side=source.side;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.blendColor.copy(source.blendColor);this.blendAlpha=
source.blendAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;var srcPlanes=source.clippingPlanes,dstPlanes=null;if(null!==srcPlanes){var n=
srcPlanes.length;dstPlanes=Array(n);for(var i=0;i!==n;++i)dstPlanes[i]=srcPlanes[i].clone()}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;
this.alphaHash=source.alphaHash;this.alphaToCoverage=source.alphaToCoverage;this.premultipliedAlpha=source.premultipliedAlpha;this.forceSinglePass=source.forceSinglePass;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this};Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};$jscomp.global.Object.defineProperties(Material.prototype,{alphaTest:{configurable:!0,enumerable:!0,get:function(){return this._alphaTest},
set:function(value){0<this._alphaTest!==0<value&&this.version++;this._alphaTest=value}},needsUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===value&&this.version++}}});var MeshBasicMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshBasicMaterial=!0;$jscomp$super$this.type="MeshBasicMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.map=null;$jscomp$super$this.lightMap=null;$jscomp$super$this.lightMapIntensity=
1;$jscomp$super$this.aoMap=null;$jscomp$super$this.aoMapIntensity=1;$jscomp$super$this.specularMap=null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.envMap=null;$jscomp$super$this.envMapRotation=new Euler;$jscomp$super$this.combine=0;$jscomp$super$this.reflectivity=1;$jscomp$super$this.refractionRatio=.98;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.wireframeLinecap="round";$jscomp$super$this.wireframeLinejoin="round";$jscomp$super$this.fog=!0;
$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshBasicMaterial,Material);MeshBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapRotation.copy(source.envMapRotation);
this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.fog=source.fog;return this};var _tables=function(){var buffer=new ArrayBuffer(4),floatView=new Float32Array(buffer);buffer=new Uint32Array(buffer);for(var baseTable=new Uint32Array(512),shiftTable=new Uint32Array(512),
i=0;256>i;++i){var e=i-127;-27>e?(baseTable[i]=0,baseTable[i|256]=32768,shiftTable[i]=24,shiftTable[i|256]=24):-14>e?(baseTable[i]=1024>>-e-14,baseTable[i|256]=1024>>-e-14|32768,shiftTable[i]=-e-1,shiftTable[i|256]=-e-1):15>=e?(baseTable[i]=e+15<<10,baseTable[i|256]=e+15<<10|32768,shiftTable[i]=13,shiftTable[i|256]=13):128>e?(baseTable[i]=31744,baseTable[i|256]=64512,shiftTable[i]=24,shiftTable[i|256]=24):(baseTable[i]=31744,baseTable[i|256]=64512,shiftTable[i]=13,shiftTable[i|256]=13)}i=new Uint32Array(2048);
e=new Uint32Array(64);for(var offsetTable=new Uint32Array(64),i$40=1;1024>i$40;++i$40){for(var m=i$40<<13,e$41=0;0===(m&8388608);)m<<=1,e$41-=8388608;m&=-8388609;e$41+=947912704;i[i$40]=m|e$41}for(i$40=1024;2048>i$40;++i$40)i[i$40]=939524096+(i$40-1024<<13);for(i$40=1;31>i$40;++i$40)e[i$40]=i$40<<23;e[31]=1199570944;e[32]=2147483648;for(i$40=33;63>i$40;++i$40)e[i$40]=2147483648+(i$40-32<<23);e[63]=3347054592;for(i$40=1;64>i$40;++i$40)32!==i$40&&(offsetTable[i$40]=1024);return{floatView:floatView,
uint32View:buffer,baseTable:baseTable,shiftTable:shiftTable,mantissaTable:i,exponentTable:e,offsetTable:offsetTable}}(),DataUtils=function(){};DataUtils.toHalfFloat=function(val){return toHalfFloat(val)};DataUtils.fromHalfFloat=function(val){return fromHalfFloat(val)};var _vector$9=new Vector3,_vector2$1=new Vector2,_id$3=0,BufferAttribute=function(array,itemSize,normalized){normalized=void 0===normalized?!1:normalized;if(Array.isArray(array))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
this.isBufferAttribute=!0;Object.defineProperty(this,"id",{value:_id$3++});this.name="";this.array=array;this.itemSize=itemSize;this.count=void 0!==array?array.length/itemSize:0;this.normalized=normalized;this.usage=35044;this.updateRanges=[];this.gpuType=1015;this.version=0};BufferAttribute.prototype.onUploadCallback=function(){};BufferAttribute.prototype.setUsage=function(value){this.usage=value;return this};BufferAttribute.prototype.addUpdateRange=function(start,count){this.updateRanges.push({start:start,
count:count})};BufferAttribute.prototype.clearUpdateRanges=function(){this.updateRanges.length=0};BufferAttribute.prototype.copy=function(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;this.gpuType=source.gpuType;return this};BufferAttribute.prototype.copyAt=function(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(var i=
0,l=this.itemSize;i<l;i++)this.array[index1+i]=attribute.array[index2+i];return this};BufferAttribute.prototype.copyArray=function(array){this.array.set(array);return this};BufferAttribute.prototype.applyMatrix3=function(m){if(2===this.itemSize)for(var i=0,l=this.count;i<l;i++)_vector2$1.fromBufferAttribute(this,i),_vector2$1.applyMatrix3(m),this.setXY(i,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(i=0,l=this.count;i<l;i++)_vector$9.fromBufferAttribute(this,i),_vector$9.applyMatrix3(m),
this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);return this};BufferAttribute.prototype.applyMatrix4=function(m){for(var i=0,l=this.count;i<l;i++)_vector$9.fromBufferAttribute(this,i),_vector$9.applyMatrix4(m),this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);return this};BufferAttribute.prototype.applyNormalMatrix=function(m){for(var i=0,l=this.count;i<l;i++)_vector$9.fromBufferAttribute(this,i),_vector$9.applyNormalMatrix(m),this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);return this};BufferAttribute.prototype.transformDirection=
function(m){for(var i=0,l=this.count;i<l;i++)_vector$9.fromBufferAttribute(this,i),_vector$9.transformDirection(m),this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);return this};BufferAttribute.prototype.set=function(value,offset){this.array.set(value,void 0===offset?0:offset);return this};BufferAttribute.prototype.getComponent=function(index,component){index=this.array[index*this.itemSize+component];this.normalized&&(index=denormalize(index,this.array));return index};BufferAttribute.prototype.setComponent=
function(index,component,value){this.normalized&&(value=normalize(value,this.array));this.array[index*this.itemSize+component]=value;return this};BufferAttribute.prototype.getX=function(index){index=this.array[index*this.itemSize];this.normalized&&(index=denormalize(index,this.array));return index};BufferAttribute.prototype.setX=function(index,x){this.normalized&&(x=normalize(x,this.array));this.array[index*this.itemSize]=x;return this};BufferAttribute.prototype.getY=function(index){index=this.array[index*
this.itemSize+1];this.normalized&&(index=denormalize(index,this.array));return index};BufferAttribute.prototype.setY=function(index,y){this.normalized&&(y=normalize(y,this.array));this.array[index*this.itemSize+1]=y;return this};BufferAttribute.prototype.getZ=function(index){index=this.array[index*this.itemSize+2];this.normalized&&(index=denormalize(index,this.array));return index};BufferAttribute.prototype.setZ=function(index,z){this.normalized&&(z=normalize(z,this.array));this.array[index*this.itemSize+
2]=z;return this};BufferAttribute.prototype.getW=function(index){index=this.array[index*this.itemSize+3];this.normalized&&(index=denormalize(index,this.array));return index};BufferAttribute.prototype.setW=function(index,w){this.normalized&&(w=normalize(w,this.array));this.array[index*this.itemSize+3]=w;return this};BufferAttribute.prototype.setXY=function(index,x,y){index*=this.itemSize;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array));this.array[index+0]=x;this.array[index+1]=
y;return this};BufferAttribute.prototype.setXYZ=function(index,x,y,z){index*=this.itemSize;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array));this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this};BufferAttribute.prototype.setXYZW=function(index,x,y,z,w){index*=this.itemSize;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array),w=normalize(w,this.array));this.array[index+0]=x;this.array[index+
1]=y;this.array[index+2]=z;this.array[index+3]=w;return this};BufferAttribute.prototype.onUpload=function(callback){this.onUploadCallback=callback;return this};BufferAttribute.prototype.clone=function(){return(new this.constructor(this.array,this.itemSize)).copy(this)};BufferAttribute.prototype.toJSON=function(){var data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};""!==this.name&&(data.name=this.name);35044!==this.usage&&(data.usage=
this.usage);return data};$jscomp.global.Object.defineProperties(BufferAttribute.prototype,{needsUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===value&&this.version++}}});var Int8BufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Int8Array(array),itemSize,normalized)||this};$jscomp.inherits(Int8BufferAttribute,BufferAttribute);var Uint8BufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Uint8Array(array),itemSize,
normalized)||this};$jscomp.inherits(Uint8BufferAttribute,BufferAttribute);var Uint8ClampedBufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized)||this};$jscomp.inherits(Uint8ClampedBufferAttribute,BufferAttribute);var Int16BufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Int16Array(array),itemSize,normalized)||this};$jscomp.inherits(Int16BufferAttribute,BufferAttribute);var Uint16BufferAttribute=
function(array,itemSize,normalized){return BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized)||this};$jscomp.inherits(Uint16BufferAttribute,BufferAttribute);var Int32BufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Int32Array(array),itemSize,normalized)||this};$jscomp.inherits(Int32BufferAttribute,BufferAttribute);var Uint32BufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Uint32Array(array),itemSize,
normalized)||this};$jscomp.inherits(Uint32BufferAttribute,BufferAttribute);var Float16BufferAttribute=function(array,itemSize,normalized){array=BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized)||this;array.isFloat16BufferAttribute=!0;return array};$jscomp.inherits(Float16BufferAttribute,BufferAttribute);Float16BufferAttribute.prototype.getX=function(index){index=fromHalfFloat(this.array[index*this.itemSize]);this.normalized&&(index=denormalize(index,this.array));return index};
Float16BufferAttribute.prototype.setX=function(index,x){this.normalized&&(x=normalize(x,this.array));this.array[index*this.itemSize]=toHalfFloat(x);return this};Float16BufferAttribute.prototype.getY=function(index){index=fromHalfFloat(this.array[index*this.itemSize+1]);this.normalized&&(index=denormalize(index,this.array));return index};Float16BufferAttribute.prototype.setY=function(index,y){this.normalized&&(y=normalize(y,this.array));this.array[index*this.itemSize+1]=toHalfFloat(y);return this};
Float16BufferAttribute.prototype.getZ=function(index){index=fromHalfFloat(this.array[index*this.itemSize+2]);this.normalized&&(index=denormalize(index,this.array));return index};Float16BufferAttribute.prototype.setZ=function(index,z){this.normalized&&(z=normalize(z,this.array));this.array[index*this.itemSize+2]=toHalfFloat(z);return this};Float16BufferAttribute.prototype.getW=function(index){index=fromHalfFloat(this.array[index*this.itemSize+3]);this.normalized&&(index=denormalize(index,this.array));
return index};Float16BufferAttribute.prototype.setW=function(index,w){this.normalized&&(w=normalize(w,this.array));this.array[index*this.itemSize+3]=toHalfFloat(w);return this};Float16BufferAttribute.prototype.setXY=function(index,x,y){index*=this.itemSize;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array));this.array[index+0]=toHalfFloat(x);this.array[index+1]=toHalfFloat(y);return this};Float16BufferAttribute.prototype.setXYZ=function(index,x,y,z){index*=this.itemSize;this.normalized&&
(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array));this.array[index+0]=toHalfFloat(x);this.array[index+1]=toHalfFloat(y);this.array[index+2]=toHalfFloat(z);return this};Float16BufferAttribute.prototype.setXYZW=function(index,x,y,z,w){index*=this.itemSize;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array),w=normalize(w,this.array));this.array[index+0]=toHalfFloat(x);this.array[index+1]=toHalfFloat(y);this.array[index+2]=toHalfFloat(z);
this.array[index+3]=toHalfFloat(w);return this};var Float32BufferAttribute=function(array,itemSize,normalized){return BufferAttribute.call(this,new Float32Array(array),itemSize,normalized)||this};$jscomp.inherits(Float32BufferAttribute,BufferAttribute);var _id$2=0,_m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$8=new Vector3,BufferGeometry=function(){this.isBufferGeometry=!0;Object.defineProperty(this,"id",{value:_id$2++});this.uuid=generateUUID();
this.name="";this.type="BufferGeometry";this.indirect=this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=!1;this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity};this.userData={};return this};$jscomp.inherits(BufferGeometry,EventDispatcher);BufferGeometry.prototype.getIndex=function(){return this.index};BufferGeometry.prototype.setIndex=function(index){Array.isArray(index)?this.index=new (arrayNeedsUint32(index)?Uint32BufferAttribute:
Uint16BufferAttribute)(index,1):this.index=index;return this};BufferGeometry.prototype.setIndirect=function(indirect){this.indirect=indirect;return this};BufferGeometry.prototype.getIndirect=function(){return this.indirect};BufferGeometry.prototype.getAttribute=function(name){return this.attributes[name]};BufferGeometry.prototype.setAttribute=function(name,attribute){this.attributes[name]=attribute;return this};BufferGeometry.prototype.deleteAttribute=function(name){delete this.attributes[name];return this};
BufferGeometry.prototype.hasAttribute=function(name){return void 0!==this.attributes[name]};BufferGeometry.prototype.addGroup=function(start,count,materialIndex){this.groups.push({start:start,count:count,materialIndex:void 0===materialIndex?0:materialIndex})};BufferGeometry.prototype.clearGroups=function(){this.groups=[]};BufferGeometry.prototype.setDrawRange=function(start,count){this.drawRange.start=start;this.drawRange.count=count};BufferGeometry.prototype.applyMatrix4=function(matrix){var position=
this.attributes.position;void 0!==position&&(position.applyMatrix4(matrix),position.needsUpdate=!0);position=this.attributes.normal;if(void 0!==position){var normalMatrix=(new Matrix3).getNormalMatrix(matrix);position.applyNormalMatrix(normalMatrix);position.needsUpdate=!0}position=this.attributes.tangent;void 0!==position&&(position.transformDirection(matrix),position.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this};
BufferGeometry.prototype.applyQuaternion=function(q){_m1$2.makeRotationFromQuaternion(q);this.applyMatrix4(_m1$2);return this};BufferGeometry.prototype.rotateX=function(angle){_m1$2.makeRotationX(angle);this.applyMatrix4(_m1$2);return this};BufferGeometry.prototype.rotateY=function(angle){_m1$2.makeRotationY(angle);this.applyMatrix4(_m1$2);return this};BufferGeometry.prototype.rotateZ=function(angle){_m1$2.makeRotationZ(angle);this.applyMatrix4(_m1$2);return this};BufferGeometry.prototype.translate=
function(x,y,z){_m1$2.makeTranslation(x,y,z);this.applyMatrix4(_m1$2);return this};BufferGeometry.prototype.scale=function(x,y,z){_m1$2.makeScale(x,y,z);this.applyMatrix4(_m1$2);return this};BufferGeometry.prototype.lookAt=function(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this};BufferGeometry.prototype.center=function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this};BufferGeometry.prototype.setFromPoints=
function(points){var positionAttribute=this.getAttribute("position");if(void 0===positionAttribute){positionAttribute=[];for(var i=0,l=points.length;i<l;i++){var point=points[i];positionAttribute.push(point.x,point.y,point.z||0)}this.setAttribute("position",new Float32BufferAttribute(positionAttribute,3))}else{i=Math.min(points.length,positionAttribute.count);for(l=0;l<i;l++)point=points[l],positionAttribute.setXYZ(l,point.x,point.y,point.z||0);points.length>positionAttribute.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.");
positionAttribute.needsUpdate=!0}return this};BufferGeometry.prototype.computeBoundingBox=function(){null===this.boundingBox&&(this.boundingBox=new Box3);var position=this.attributes.position,morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute)console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Vector3(-Infinity,-Infinity,-Infinity),new Vector3(Infinity,Infinity,Infinity));
else{if(void 0!==position){if(this.boundingBox.setFromBufferAttribute(position),morphAttributesPosition){position=0;for(var il=morphAttributesPosition.length;position<il;position++)_box$2.setFromBufferAttribute(morphAttributesPosition[position]),this.morphTargetsRelative?(_vector$8.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$8),_vector$8.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$8)):(this.boundingBox.expandByPoint(_box$2.min),
this.boundingBox.expandByPoint(_box$2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}};BufferGeometry.prototype.computeBoundingSphere=function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var position=this.attributes.position,morphAttributesPosition=
this.morphAttributes.position;if(position&&position.isGLBufferAttribute)console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Vector3,Infinity);else if(position){var center=this.boundingSphere.center;_box$2.setFromBufferAttribute(position);if(morphAttributesPosition)for(var i=0,il=morphAttributesPosition.length;i<il;i++)_boxMorphTargets.setFromBufferAttribute(morphAttributesPosition[i]),this.morphTargetsRelative?
(_vector$8.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$8),_vector$8.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$8)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max));_box$2.getCenter(center);il=i=0;for(var il$52=position.count;il<il$52;il++)_vector$8.fromBufferAttribute(position,il),i=Math.max(i,center.distanceToSquared(_vector$8));if(morphAttributesPosition)for(il=0,il$52=morphAttributesPosition.length;il<
il$52;il++)for(var morphAttribute$55=morphAttributesPosition[il],morphTargetsRelative=this.morphTargetsRelative,j=0,jl=morphAttribute$55.count;j<jl;j++)_vector$8.fromBufferAttribute(morphAttribute$55,j),morphTargetsRelative&&(_offset.fromBufferAttribute(position,j),_vector$8.add(_offset)),i=Math.max(i,center.distanceToSquared(_vector$8));this.boundingSphere.radius=Math.sqrt(i);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
this)}};BufferGeometry.prototype.computeTangents=function(){function handleTriangle(a,b,c){vA.fromBufferAttribute(positionAttribute,a);vB.fromBufferAttribute(positionAttribute,b);vC.fromBufferAttribute(positionAttribute,c);uvA.fromBufferAttribute(uvAttribute,a);uvB.fromBufferAttribute(uvAttribute,b);uvC.fromBufferAttribute(uvAttribute,c);vB.sub(vA);vC.sub(vA);uvB.sub(uvA);uvC.sub(uvA);var r=1/(uvB.x*uvC.y-uvC.x*uvB.y);isFinite(r)&&(sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r),
tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r),tan1[a].add(sdir),tan1[b].add(sdir),tan1[c].add(sdir),tan2[a].add(tdir),tan2[b].add(tdir),tan2[c].add(tdir))}function handleVertex(v){n.fromBufferAttribute(normalAttribute,v);n2.copy(n);var t=tan1[v];tmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();tmp2.crossVectors(n2,t);t=tmp2.dot(tan2[v]);tangentAttribute.setXYZW(v,tmp.x,tmp.y,tmp.z,0>t?-1:1)}var index=this.index,attributes=this.attributes;if(null===index||
void 0===attributes.position||void 0===attributes.normal||void 0===attributes.uv)console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");else{var positionAttribute=attributes.position,normalAttribute=attributes.normal,uvAttribute=attributes.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new BufferAttribute(new Float32Array(4*positionAttribute.count),4));var tangentAttribute=this.getAttribute("tangent"),tan1=[],
tan2=[];for(attributes=0;attributes<positionAttribute.count;attributes++)tan1[attributes]=new Vector3,tan2[attributes]=new Vector3;var vA=new Vector3,vB=new Vector3,vC=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2,sdir=new Vector3,tdir=new Vector3;attributes=this.groups;0===attributes.length&&(attributes=[{start:0,count:index.count}]);for(var i$56=0,il=attributes.length;i$56<il;++i$56){var group=attributes[i$56],start=group.start,j=start;for(group=start+group.count;j<group;j+=3)handleTriangle(index.getX(j+
0),index.getX(j+1),index.getX(j+2))}var tmp=new Vector3,tmp2=new Vector3,n=new Vector3,n2=new Vector3;i$56=0;for(il=attributes.length;i$56<il;++i$56)for(group=attributes[i$56],j=start=group.start,group=start+group.count;j<group;j+=3)handleVertex(index.getX(j+0)),handleVertex(index.getX(j+1)),handleVertex(index.getX(j+2))}};BufferGeometry.prototype.computeVertexNormals=function(){var index=this.index,positionAttribute=this.getAttribute("position");if(void 0!==positionAttribute){var normalAttribute=
this.getAttribute("normal");if(void 0===normalAttribute)normalAttribute=new BufferAttribute(new Float32Array(3*positionAttribute.count),3),this.setAttribute("normal",normalAttribute);else for(var i=0,il=normalAttribute.count;i<il;i++)normalAttribute.setXYZ(i,0,0,0);i=new Vector3;il=new Vector3;var pC=new Vector3,nA=new Vector3,nB=new Vector3,nC=new Vector3,cb=new Vector3,ab=new Vector3;if(index)for(var i$64=0,il$65=index.count;i$64<il$65;i$64+=3){var vA=index.getX(i$64+0),vB=index.getX(i$64+1),vC=
index.getX(i$64+2);i.fromBufferAttribute(positionAttribute,vA);il.fromBufferAttribute(positionAttribute,vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,il);ab.subVectors(i,il);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z)}else for(index=
0,nA=positionAttribute.count;index<nA;index+=3)i.fromBufferAttribute(positionAttribute,index+0),il.fromBufferAttribute(positionAttribute,index+1),pC.fromBufferAttribute(positionAttribute,index+2),cb.subVectors(pC,il),ab.subVectors(i,il),cb.cross(ab),normalAttribute.setXYZ(index+0,cb.x,cb.y,cb.z),normalAttribute.setXYZ(index+1,cb.x,cb.y,cb.z),normalAttribute.setXYZ(index+2,cb.x,cb.y,cb.z);this.normalizeNormals();normalAttribute.needsUpdate=!0}};BufferGeometry.prototype.normalizeNormals=function(){for(var normals=
this.attributes.normal,i=0,il=normals.count;i<il;i++)_vector$8.fromBufferAttribute(normals,i),_vector$8.normalize(),normals.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z)};BufferGeometry.prototype.toNonIndexed=function(){function convertBufferAttribute(attribute,indices){for(var array=attribute.array,itemSize=attribute.itemSize,normalized=attribute.normalized,array2=new array.constructor(indices.length*itemSize),index,index2=0,i=0,l=indices.length;i<l;i++){index=attribute.isInterleavedBufferAttribute?
indices[i]*attribute.data.stride+attribute.offset:indices[i]*itemSize;for(var j=0;j<itemSize;j++)array2[index2++]=array[index++]}return new BufferAttribute(array2,itemSize,normalized)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var geometry2=new BufferGeometry,indices=this.index.array,attributes=this.attributes;for(name in attributes){var newAttribute=convertBufferAttribute(attributes[name],indices);geometry2.setAttribute(name,
newAttribute)}attributes=this.morphAttributes;for(var name$68 in attributes){var name=[];newAttribute=attributes[name$68];for(var i$jscomp$0=0,il=newAttribute.length;i$jscomp$0<il;i$jscomp$0++){var newAttribute$70=convertBufferAttribute(newAttribute[i$jscomp$0],indices);name.push(newAttribute$70)}geometry2.morphAttributes[name$68]=name}geometry2.morphTargetsRelative=this.morphTargetsRelative;indices=this.groups;name$68=0;for(attributes=indices.length;name$68<attributes;name$68++)name=indices[name$68],
geometry2.addGroup(name.start,name.count,name.materialIndex);return geometry2};BufferGeometry.prototype.toJSON=function(){var data={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};data.uuid=this.uuid;data.type=this.type;""!==this.name&&(data.name=this.name);0<Object.keys(this.userData).length&&(data.userData=this.userData);if(void 0!==this.parameters){var parameters=this.parameters;for(key in parameters)void 0!==parameters[key]&&(data[key]=parameters[key]);return data}data.data=
{attributes:{}};var key=this.index;null!==key&&(data.data.index={type:key.array.constructor.name,array:Array.prototype.slice.call(key.array)});key=this.attributes;for(var key$72 in key)data.data.attributes[key$72]=key[key$72].toJSON(data.data);key$72={};key=!1;for(parameters in this.morphAttributes){for(var attributeArray=this.morphAttributes[parameters],array=[],i=0,il=attributeArray.length;i<il;i++)array.push(attributeArray[i].toJSON(data.data));0<array.length&&(key$72[parameters]=array,key=!0)}key&&
(data.data.morphAttributes=key$72,data.data.morphTargetsRelative=this.morphTargetsRelative);parameters=this.groups;0<parameters.length&&(data.data.groups=JSON.parse(JSON.stringify(parameters)));parameters=this.boundingSphere;null!==parameters&&(data.data.boundingSphere=parameters.toJSON());return data};BufferGeometry.prototype.clone=function(){return(new this.constructor).copy(this)};BufferGeometry.prototype.copy=function(source){this.index=null;this.attributes={};this.morphAttributes={};this.groups=
[];this.boundingSphere=this.boundingBox=null;var data={};this.name=source.name;var index=source.index;null!==index&&this.setIndex(index.clone());index=source.attributes;for(var name in index)this.setAttribute(name,index[name].clone(data));name=source.morphAttributes;for(var name$75 in name){index=[];for(var morphAttribute=name[name$75],i=0,l=morphAttribute.length;i<l;i++)index.push(morphAttribute[i].clone(data));this.morphAttributes[name$75]=index}this.morphTargetsRelative=source.morphTargetsRelative;
data=source.groups;name$75=0;for(name=data.length;name$75<name;name$75++)index=data[name$75],this.addGroup(index.start,index.count,index.materialIndex);data=source.boundingBox;null!==data&&(this.boundingBox=data.clone());data=source.boundingSphere;null!==data&&(this.boundingSphere=data.clone());this.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;this.userData=source.userData;return this};BufferGeometry.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};
var _inverseMatrix$3=new Matrix4,_ray$3=new Ray,_sphere$6=new Sphere,_sphereHitAt=new Vector3,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_tempA=new Vector3,_morphA=new Vector3,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3,Mesh=function(geometry,material){geometry=void 0===geometry?new BufferGeometry:geometry;material=void 0===material?new MeshBasicMaterial:material;var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isMesh=!0;$jscomp$super$this.type=
"Mesh";$jscomp$super$this.geometry=geometry;$jscomp$super$this.material=material;$jscomp$super$this.morphTargetDictionary=void 0;$jscomp$super$this.morphTargetInfluences=void 0;$jscomp$super$this.count=1;$jscomp$super$this.updateMorphTargets();return $jscomp$super$this};$jscomp.inherits(Mesh,Object3D);Mesh.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice());
void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary));this.material=Array.isArray(source.material)?source.material.slice():source.material;this.geometry=source.geometry;return this};Mesh.prototype.updateMorphTargets=function(){var morphAttributes=this.geometry.morphAttributes,keys=Object.keys(morphAttributes);if(0<keys.length&&(morphAttributes=morphAttributes[keys[0]],void 0!==morphAttributes)){this.morphTargetInfluences=[];this.morphTargetDictionary=
{};keys=0;for(var ml=morphAttributes.length;keys<ml;keys++){var name=morphAttributes[keys].name||String(keys);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=keys}}};Mesh.prototype.getVertexPosition=function(index,target){var geometry=this.geometry,morphPosition=geometry.morphAttributes.position,morphTargetsRelative=geometry.morphTargetsRelative;target.fromBufferAttribute(geometry.attributes.position,index);geometry=this.morphTargetInfluences;if(morphPosition&&geometry){_morphA.set(0,
0,0);for(var i=0,il=morphPosition.length;i<il;i++){var influence=geometry[i];0!==influence&&(_tempA.fromBufferAttribute(morphPosition[i],index),morphTargetsRelative?_morphA.addScaledVector(_tempA,influence):_morphA.addScaledVector(_tempA.sub(target),influence))}target.add(_morphA)}return target};Mesh.prototype.raycast=function(raycaster,intersects){var geometry=this.geometry,matrixWorld=this.matrixWorld;void 0!==this.material&&(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere$6.copy(geometry.boundingSphere),
_sphere$6.applyMatrix4(matrixWorld),_ray$3.copy(raycaster.ray).recast(raycaster.near),!1===_sphere$6.containsPoint(_ray$3.origin)&&(null===_ray$3.intersectSphere(_sphere$6,_sphereHitAt)||_ray$3.origin.distanceToSquared(_sphereHitAt)>Math.pow(raycaster.far-raycaster.near,2))||(_inverseMatrix$3.copy(matrixWorld).invert(),_ray$3.copy(raycaster.ray).applyMatrix4(_inverseMatrix$3),null!==geometry.boundingBox&&!1===_ray$3.intersectsBox(geometry.boundingBox)||this._computeIntersections(raycaster,intersects,
_ray$3)))};Mesh.prototype._computeIntersections=function(raycaster,intersects,rayLocalSpace){var geometry=this.geometry,material=this.material,index=geometry.index,position=geometry.attributes.position,uv=geometry.attributes.uv,uv1=geometry.attributes.uv1,normal=geometry.attributes.normal,groups=geometry.groups;geometry=geometry.drawRange;if(null!==index)if(Array.isArray(material)){position=0;for(var il=groups.length;position<il;position++)for(var group=groups[position],groupMaterial=material[group.materialIndex],
j=Math.max(group.start,geometry.start),jl=Math.min(index.count,Math.min(group.start+group.count,geometry.start+geometry.count));j<jl;j+=3){var intersection=index.getX(j);var b=index.getX(j+1),c=index.getX(j+2);if(intersection=checkGeometryIntersection(this,groupMaterial,raycaster,rayLocalSpace,uv,uv1,normal,intersection,b,c))intersection.faceIndex=Math.floor(j/3),intersection.face.materialIndex=group.materialIndex,intersects.push(intersection)}}else for(groups=Math.max(0,geometry.start),geometry=
Math.min(index.count,geometry.start+geometry.count);groups<geometry;groups+=3){if(intersection=index.getX(groups),position=index.getX(groups+1),il=index.getX(groups+2),intersection=checkGeometryIntersection(this,material,raycaster,rayLocalSpace,uv,uv1,normal,intersection,position,il))intersection.faceIndex=Math.floor(groups/3),intersects.push(intersection)}else if(void 0!==position)if(Array.isArray(material))for(index=0,il=groups.length;index<il;index++)for(group=groups[index],groupMaterial=material[group.materialIndex],
j=Math.max(group.start,geometry.start),jl=Math.min(position.count,Math.min(group.start+group.count,geometry.start+geometry.count));j<jl;j+=3){if(intersection=checkGeometryIntersection(this,groupMaterial,raycaster,rayLocalSpace,uv,uv1,normal,j,j+1,j+2))intersection.faceIndex=Math.floor(j/3),intersection.face.materialIndex=group.materialIndex,intersects.push(intersection)}else for(groups=Math.max(0,geometry.start),geometry=Math.min(position.count,geometry.start+geometry.count);groups<geometry;groups+=
3)if(intersection=checkGeometryIntersection(this,material,raycaster,rayLocalSpace,uv,uv1,normal,groups,groups+1,groups+2))intersection.faceIndex=Math.floor(groups/3),intersects.push(intersection)};var BoxGeometry=function(width$jscomp$0,height$jscomp$0,depth$jscomp$0,widthSegments,heightSegments,depthSegments){function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){var segmentWidth=width/gridX,segmentHeight=height/gridY,widthHalf=width/2,heightHalf=height/2,depthHalf=depth/
2;height=gridX+1;for(var gridY1=gridY+1,groupCount=width=0,vector=new Vector3,iy=0;iy<gridY1;iy++)for(var y=iy*segmentHeight-heightHalf,ix=0;ix<height;ix++)vector[u]=(ix*segmentWidth-widthHalf)*udir,vector[v]=y*vdir,vector[w]=depthHalf,vertices.push(vector.x,vector.y,vector.z),vector[u]=0,vector[v]=0,vector[w]=0<depth?1:-1,normals.push(vector.x,vector.y,vector.z),uvs.push(ix/gridX),uvs.push(1-iy/gridY),width+=1;for(u=0;u<gridY;u++)for(v=0;v<gridX;v++)w=numberOfVertices+v+height*(u+1),udir=numberOfVertices+
(v+1)+height*(u+1),vdir=numberOfVertices+(v+1)+height*u,indices.push(numberOfVertices+v+height*u,w,vdir),indices.push(w,udir,vdir),groupCount+=6;scope.addGroup(groupStart,groupCount,materialIndex);groupStart+=groupCount;numberOfVertices+=width}width$jscomp$0=void 0===width$jscomp$0?1:width$jscomp$0;height$jscomp$0=void 0===height$jscomp$0?1:height$jscomp$0;depth$jscomp$0=void 0===depth$jscomp$0?1:depth$jscomp$0;widthSegments=void 0===widthSegments?1:widthSegments;heightSegments=void 0===heightSegments?
1:heightSegments;depthSegments=void 0===depthSegments?1:depthSegments;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="BoxGeometry";$jscomp$super$this.parameters={width:width$jscomp$0,height:height$jscomp$0,depth:depth$jscomp$0,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};var scope=$jscomp$super$this;widthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);depthSegments=Math.floor(depthSegments);var indices=
[],vertices=[],normals=[],uvs=[],numberOfVertices=0,groupStart=0;buildPlane("z","y","x",-1,-1,depth$jscomp$0,height$jscomp$0,width$jscomp$0,depthSegments,heightSegments,0);buildPlane("z","y","x",1,-1,depth$jscomp$0,height$jscomp$0,-width$jscomp$0,depthSegments,heightSegments,1);buildPlane("x","z","y",1,1,width$jscomp$0,depth$jscomp$0,height$jscomp$0,widthSegments,depthSegments,2);buildPlane("x","z","y",1,-1,width$jscomp$0,depth$jscomp$0,-height$jscomp$0,widthSegments,depthSegments,3);buildPlane("x",
"y","z",1,-1,width$jscomp$0,height$jscomp$0,depth$jscomp$0,widthSegments,heightSegments,4);buildPlane("x","y","z",-1,-1,width$jscomp$0,height$jscomp$0,-depth$jscomp$0,widthSegments,heightSegments,5);$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(BoxGeometry,
BufferGeometry);BoxGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};BoxGeometry.fromJSON=function(data){return new BoxGeometry(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments)};var UniformsUtils={clone:cloneUniforms,merge:mergeUniforms},ShaderMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isShaderMaterial=
!0;$jscomp$super$this.type="ShaderMaterial";$jscomp$super$this.defines={};$jscomp$super$this.uniforms={};$jscomp$super$this.uniformsGroups=[];$jscomp$super$this.vertexShader="void main() {\n\tgl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";$jscomp$super$this.fragmentShader="void main() {\n\tgl_FragColor \x3d vec4( 1.0, 0.0, 0.0, 1.0 );\n}";$jscomp$super$this.linewidth=1;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.fog=
!1;$jscomp$super$this.lights=!1;$jscomp$super$this.clipping=!1;$jscomp$super$this.forceSinglePass=!0;$jscomp$super$this.extensions={clipCullDistance:!1,multiDraw:!1};$jscomp$super$this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]};$jscomp$super$this.index0AttributeName=void 0;$jscomp$super$this.uniformsNeedUpdate=!1;$jscomp$super$this.glslVersion=null;void 0!==parameters&&$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(ShaderMaterial,Material);ShaderMaterial.prototype.copy=
function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);for(var src=source.uniformsGroups,dst=[],u=0;u<src.length;u++)dst.push(src[u].clone());this.uniformsGroups=dst;this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.fog=source.fog;this.lights=source.lights;this.clipping=source.clipping;this.extensions=
Object.assign({},source.extensions);this.glslVersion=source.glslVersion;return this};ShaderMaterial.prototype.toJSON=function(meta){var data=Material.prototype.toJSON.call(this,meta);data.glslVersion=this.glslVersion;data.uniforms={};for(var name in this.uniforms){var value=this.uniforms[name].value;data.uniforms[name]=value&&value.isTexture?{type:"t",value:value.toJSON(meta).uuid}:value&&value.isColor?{type:"c",value:value.getHex()}:value&&value.isVector2?{type:"v2",value:value.toArray()}:value&&
value.isVector3?{type:"v3",value:value.toArray()}:value&&value.isVector4?{type:"v4",value:value.toArray()}:value&&value.isMatrix3?{type:"m3",value:value.toArray()}:value&&value.isMatrix4?{type:"m4",value:value.toArray()}:{value:value}}0<Object.keys(this.defines).length&&(data.defines=this.defines);data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;data.lights=this.lights;data.clipping=this.clipping;meta={};for(var key in this.extensions)!0===this.extensions[key]&&(meta[key]=
!0);0<Object.keys(meta).length&&(data.extensions=meta);return data};var Camera=function(){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isCamera=!0;$jscomp$super$this.type="Camera";$jscomp$super$this.matrixWorldInverse=new Matrix4;$jscomp$super$this.projectionMatrix=new Matrix4;$jscomp$super$this.projectionMatrixInverse=new Matrix4;$jscomp$super$this.coordinateSystem=2E3;$jscomp$super$this._reversedDepth=!1;return $jscomp$super$this};$jscomp.inherits(Camera,Object3D);Camera.prototype.copy=
function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);this.coordinateSystem=source.coordinateSystem;return this};Camera.prototype.getWorldDirection=function(target){return Object3D.prototype.getWorldDirection.call(this,target).negate()};Camera.prototype.updateMatrixWorld=function(force){Object3D.prototype.updateMatrixWorld.call(this,
force);this.matrixWorldInverse.copy(this.matrixWorld).invert()};Camera.prototype.updateWorldMatrix=function(updateParents,updateChildren){Object3D.prototype.updateWorldMatrix.call(this,updateParents,updateChildren);this.matrixWorldInverse.copy(this.matrixWorld).invert()};Camera.prototype.clone=function(){return(new this.constructor).copy(this)};$jscomp.global.Object.defineProperties(Camera.prototype,{reversedDepth:{configurable:!0,enumerable:!0,get:function(){return this._reversedDepth}}});var _v3$1=
new Vector3,_minTarget=new Vector2,_maxTarget=new Vector2,PerspectiveCamera=function(fov,aspect,near,far){fov=void 0===fov?50:fov;aspect=void 0===aspect?1:aspect;near=void 0===near?.1:near;far=void 0===far?2E3:far;var $jscomp$super$this=Camera.call(this)||this;$jscomp$super$this.isPerspectiveCamera=!0;$jscomp$super$this.type="PerspectiveCamera";$jscomp$super$this.fov=fov;$jscomp$super$this.zoom=1;$jscomp$super$this.near=near;$jscomp$super$this.far=far;$jscomp$super$this.focus=10;$jscomp$super$this.aspect=
aspect;$jscomp$super$this.view=null;$jscomp$super$this.filmGauge=35;$jscomp$super$this.filmOffset=0;$jscomp$super$this.updateProjectionMatrix();return $jscomp$super$this};$jscomp.inherits(PerspectiveCamera,Camera);PerspectiveCamera.prototype.copy=function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=null===source.view?null:Object.assign({},
source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this};PerspectiveCamera.prototype.setFocalLength=function(focalLength){focalLength=.5*this.getFilmHeight()/focalLength;this.fov=2*RAD2DEG*Math.atan(focalLength);this.updateProjectionMatrix()};PerspectiveCamera.prototype.getFocalLength=function(){var vExtentSlope=Math.tan(.5*DEG2RAD*this.fov);return.5*this.getFilmHeight()/vExtentSlope};PerspectiveCamera.prototype.getEffectiveFOV=function(){return 2*RAD2DEG*Math.atan(Math.tan(.5*
DEG2RAD*this.fov)/this.zoom)};PerspectiveCamera.prototype.getFilmWidth=function(){return this.filmGauge*Math.min(this.aspect,1)};PerspectiveCamera.prototype.getFilmHeight=function(){return this.filmGauge/Math.max(this.aspect,1)};PerspectiveCamera.prototype.getViewBounds=function(distance,minTarget,maxTarget){_v3$1.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse);minTarget.set(_v3$1.x,_v3$1.y).multiplyScalar(-distance/_v3$1.z);_v3$1.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse);maxTarget.set(_v3$1.x,
_v3$1.y).multiplyScalar(-distance/_v3$1.z)};PerspectiveCamera.prototype.getViewSize=function(distance,target){this.getViewBounds(distance,_minTarget,_maxTarget);return target.subVectors(_maxTarget,_minTarget)};PerspectiveCamera.prototype.setViewOffset=function(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=
fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix()};PerspectiveCamera.prototype.clearViewOffset=function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()};PerspectiveCamera.prototype.updateProjectionMatrix=function(){var near=this.near,top=near*Math.tan(.5*DEG2RAD*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-.5*width,view=this.view;if(null!==this.view&&this.view.enabled){var fullWidth=
view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight}view=this.filmOffset;0!==view&&(left+=near*view/this.getFilmWidth());this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far,this.coordinateSystem,this.reversedDepth);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()};PerspectiveCamera.prototype.toJSON=function(meta){meta=Camera.prototype.toJSON.call(this,
meta);meta.object.fov=this.fov;meta.object.zoom=this.zoom;meta.object.near=this.near;meta.object.far=this.far;meta.object.focus=this.focus;meta.object.aspect=this.aspect;null!==this.view&&(meta.object.view=Object.assign({},this.view));meta.object.filmGauge=this.filmGauge;meta.object.filmOffset=this.filmOffset;return meta};var CubeCamera=function(near,far,renderTarget){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.type="CubeCamera";$jscomp$super$this.renderTarget=renderTarget;
$jscomp$super$this.coordinateSystem=null;$jscomp$super$this.activeMipmapLevel=0;renderTarget=new PerspectiveCamera(-90,1,near,far);renderTarget.layers=$jscomp$super$this.layers;$jscomp$super$this.add(renderTarget);renderTarget=new PerspectiveCamera(-90,1,near,far);renderTarget.layers=$jscomp$super$this.layers;$jscomp$super$this.add(renderTarget);renderTarget=new PerspectiveCamera(-90,1,near,far);renderTarget.layers=$jscomp$super$this.layers;$jscomp$super$this.add(renderTarget);renderTarget=new PerspectiveCamera(-90,
1,near,far);renderTarget.layers=$jscomp$super$this.layers;$jscomp$super$this.add(renderTarget);renderTarget=new PerspectiveCamera(-90,1,near,far);renderTarget.layers=$jscomp$super$this.layers;$jscomp$super$this.add(renderTarget);near=new PerspectiveCamera(-90,1,near,far);near.layers=$jscomp$super$this.layers;$jscomp$super$this.add(near);return $jscomp$super$this};$jscomp.inherits(CubeCamera,Object3D);CubeCamera.prototype.updateCoordinateSystem=function(){var coordinateSystem=this.coordinateSystem,
cameras=this.children.concat(),$jscomp$destructuring$var0=$jscomp.makeIterator(cameras),cameraPX=$jscomp$destructuring$var0.next().value,cameraNX=$jscomp$destructuring$var0.next().value,cameraPY=$jscomp$destructuring$var0.next().value,cameraNY=$jscomp$destructuring$var0.next().value,cameraPZ=$jscomp$destructuring$var0.next().value,cameraNZ=$jscomp$destructuring$var0.next().value,$jscomp$iter$8=$jscomp.makeIterator(cameras);for($jscomp$destructuring$var0=$jscomp$iter$8.next();!$jscomp$destructuring$var0.done;$jscomp$destructuring$var0=
$jscomp$iter$8.next())this.remove($jscomp$destructuring$var0.value);if(2E3===coordinateSystem)cameraPX.up.set(0,1,0),cameraPX.lookAt(1,0,0),cameraNX.up.set(0,1,0),cameraNX.lookAt(-1,0,0),cameraPY.up.set(0,0,-1),cameraPY.lookAt(0,1,0),cameraNY.up.set(0,0,1),cameraNY.lookAt(0,-1,0),cameraPZ.up.set(0,1,0),cameraPZ.lookAt(0,0,1),cameraNZ.up.set(0,1,0),cameraNZ.lookAt(0,0,-1);else if(2001===coordinateSystem)cameraPX.up.set(0,-1,0),cameraPX.lookAt(-1,0,0),cameraNX.up.set(0,-1,0),cameraNX.lookAt(1,0,0),
cameraPY.up.set(0,0,1),cameraPY.lookAt(0,1,0),cameraNY.up.set(0,0,-1),cameraNY.lookAt(0,-1,0),cameraPZ.up.set(0,-1,0),cameraPZ.lookAt(0,0,1),cameraNZ.up.set(0,-1,0),cameraNZ.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+coordinateSystem);coordinateSystem=$jscomp.makeIterator(cameras);for($jscomp$destructuring$var0=coordinateSystem.next();!$jscomp$destructuring$var0.done;$jscomp$destructuring$var0=coordinateSystem.next())cameras=$jscomp$destructuring$var0.value,
this.add(cameras),cameras.updateMatrixWorld()};CubeCamera.prototype.update=function(renderer,scene){null===this.parent&&this.updateMatrixWorld();var renderTarget=this.renderTarget,activeMipmapLevel=this.activeMipmapLevel;this.coordinateSystem!==renderer.coordinateSystem&&(this.coordinateSystem=renderer.coordinateSystem,this.updateCoordinateSystem());var $jscomp$destructuring$var2=$jscomp.makeIterator(this.children),cameraPX=$jscomp$destructuring$var2.next().value,cameraNX=$jscomp$destructuring$var2.next().value,
cameraPY=$jscomp$destructuring$var2.next().value,cameraNY=$jscomp$destructuring$var2.next().value,cameraPZ=$jscomp$destructuring$var2.next().value;$jscomp$destructuring$var2=$jscomp$destructuring$var2.next().value;var currentRenderTarget=renderer.getRenderTarget(),currentActiveCubeFace=renderer.getActiveCubeFace(),currentActiveMipmapLevel=renderer.getActiveMipmapLevel(),currentXrEnabled=renderer.xr.enabled;renderer.xr.enabled=!1;var generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=
!1;renderer.setRenderTarget(renderTarget,0,activeMipmapLevel);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1,activeMipmapLevel);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2,activeMipmapLevel);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3,activeMipmapLevel);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4,activeMipmapLevel);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;
renderer.setRenderTarget(renderTarget,5,activeMipmapLevel);renderer.render(scene,$jscomp$destructuring$var2);renderer.setRenderTarget(currentRenderTarget,currentActiveCubeFace,currentActiveMipmapLevel);renderer.xr.enabled=currentXrEnabled;renderTarget.texture.needsPMREMUpdate=!0};var CubeTexture=function(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace){images=void 0===images?[]:images;images=Texture.call(this,images,void 0===mapping?301:mapping,wrapS,wrapT,magFilter,
minFilter,format,type,anisotropy,colorSpace)||this;images.isCubeTexture=!0;images.flipY=!1;return images};$jscomp.inherits(CubeTexture,Texture);$jscomp.global.Object.defineProperties(CubeTexture.prototype,{images:{configurable:!0,enumerable:!0,get:function(){return this.image},set:function(value){this.image=value}}});var WebGLCubeRenderTarget=function(size,options){size=void 0===size?1:size;options=void 0===options?{}:options;var $jscomp$super$this=WebGLRenderTarget.call(this,size,size,options)||
this;$jscomp$super$this.isWebGLCubeRenderTarget=!0;size={width:size,height:size,depth:1};$jscomp$super$this.texture=new CubeTexture([size,size,size,size,size,size]);$jscomp$super$this._setTextureOptions(options);$jscomp$super$this.texture.isRenderTargetTexture=!0;return $jscomp$super$this};$jscomp.inherits(WebGLCubeRenderTarget,WebGLRenderTarget);WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(renderer,texture){this.texture.type=texture.type;this.texture.colorSpace=texture.colorSpace;
this.texture.generateMipmaps=texture.generateMipmaps;this.texture.minFilter=texture.minFilter;this.texture.magFilter=texture.magFilter;var geometry=new BoxGeometry(5,5,5),material=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms({tEquirect:{value:null}}),vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include \x3cbegin_vertex\x3e\n\t\t\t\t\t#include \x3cproject_vertex\x3e\n\n\t\t\t\t}\n\t\t\t",
fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include \x3ccommon\x3e\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction \x3d normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV \x3d equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor \x3d texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",side:1,blending:0});material.uniforms.tEquirect.value=texture;geometry=new Mesh(geometry,material);material=texture.minFilter;1008===texture.minFilter&&
(texture.minFilter=1006);(new CubeCamera(1,10,this)).update(renderer,geometry);texture.minFilter=material;geometry.geometry.dispose();geometry.material.dispose();return this};WebGLCubeRenderTarget.prototype.clear=function(renderer,color,depth,stencil){color=void 0===color?!0:color;depth=void 0===depth?!0:depth;stencil=void 0===stencil?!0:stencil;for(var currentRenderTarget=renderer.getRenderTarget(),i=0;6>i;i++)renderer.setRenderTarget(this,i),renderer.clear(color,depth,stencil);renderer.setRenderTarget(currentRenderTarget)};
var Group=function(){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isGroup=!0;$jscomp$super$this.type="Group";return $jscomp$super$this};$jscomp.inherits(Group,Object3D);var _moveEvent={type:"move"},WebXRController=function(){this._hand=this._grip=this._targetRay=null};WebXRController.prototype.getHandSpace=function(){null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1});return this._hand};
WebXRController.prototype.getTargetRaySpace=function(){null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Vector3,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Vector3);return this._targetRay};WebXRController.prototype.getGripSpace=function(){null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=
!1,this._grip.linearVelocity=new Vector3,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Vector3);return this._grip};WebXRController.prototype.dispatchEvent=function(event){null!==this._targetRay&&this._targetRay.dispatchEvent(event);null!==this._grip&&this._grip.dispatchEvent(event);null!==this._hand&&this._hand.dispatchEvent(event);return this};WebXRController.prototype.connect=function(inputSource){if(inputSource&&inputSource.hand){var hand=this._hand;if(hand)for(var $jscomp$iter$10=
$jscomp.makeIterator(inputSource.hand.values()),$jscomp$key$inputjoint=$jscomp$iter$10.next();!$jscomp$key$inputjoint.done;$jscomp$key$inputjoint=$jscomp$iter$10.next())this._getHandJoint(hand,$jscomp$key$inputjoint.value)}this.dispatchEvent({type:"connected",data:inputSource});return this};WebXRController.prototype.disconnect=function(inputSource){this.dispatchEvent({type:"disconnected",data:inputSource});null!==this._targetRay&&(this._targetRay.visible=!1);null!==this._grip&&(this._grip.visible=
!1);null!==this._hand&&(this._hand.visible=!1);return this};WebXRController.prototype.update=function(inputSource,frame,referenceSpace){var inputPose=null,gripPose=null,handPose=null,targetRay=this._targetRay,grip=this._grip,hand=this._hand;if(inputSource&&"visible-blurred"!==frame.session.visibilityState){if(hand&&inputSource.hand){handPose=!0;for(var $jscomp$iter$11=$jscomp.makeIterator(inputSource.hand.values()),$jscomp$key$inputjoint=$jscomp$iter$11.next();!$jscomp$key$inputjoint.done;$jscomp$key$inputjoint=
$jscomp$iter$11.next()){var inputjoint=$jscomp$key$inputjoint.value;$jscomp$key$inputjoint=frame.getJointPose(inputjoint,referenceSpace);inputjoint=this._getHandJoint(hand,inputjoint);null!==$jscomp$key$inputjoint&&(inputjoint.matrix.fromArray($jscomp$key$inputjoint.transform.matrix),inputjoint.matrix.decompose(inputjoint.position,inputjoint.rotation,inputjoint.scale),inputjoint.matrixWorldNeedsUpdate=!0,inputjoint.jointRadius=$jscomp$key$inputjoint.radius);inputjoint.visible=null!==$jscomp$key$inputjoint}$jscomp$iter$11=
hand.joints["index-finger-tip"].position.distanceTo(hand.joints["thumb-tip"].position);hand.inputState.pinching&&.025<$jscomp$iter$11?(hand.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:inputSource.handedness,target:this})):!hand.inputState.pinching&&.015>=$jscomp$iter$11&&(hand.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:inputSource.handedness,target:this}))}else null!==grip&&inputSource.gripSpace&&(gripPose=frame.getPose(inputSource.gripSpace,
referenceSpace),null!==gripPose&&(grip.matrix.fromArray(gripPose.transform.matrix),grip.matrix.decompose(grip.position,grip.rotation,grip.scale),grip.matrixWorldNeedsUpdate=!0,gripPose.linearVelocity?(grip.hasLinearVelocity=!0,grip.linearVelocity.copy(gripPose.linearVelocity)):grip.hasLinearVelocity=!1,gripPose.angularVelocity?(grip.hasAngularVelocity=!0,grip.angularVelocity.copy(gripPose.angularVelocity)):grip.hasAngularVelocity=!1));null!==targetRay&&(inputPose=frame.getPose(inputSource.targetRaySpace,
referenceSpace),null===inputPose&&null!==gripPose&&(inputPose=gripPose),null!==inputPose&&(targetRay.matrix.fromArray(inputPose.transform.matrix),targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale),targetRay.matrixWorldNeedsUpdate=!0,inputPose.linearVelocity?(targetRay.hasLinearVelocity=!0,targetRay.linearVelocity.copy(inputPose.linearVelocity)):targetRay.hasLinearVelocity=!1,inputPose.angularVelocity?(targetRay.hasAngularVelocity=!0,targetRay.angularVelocity.copy(inputPose.angularVelocity)):
targetRay.hasAngularVelocity=!1,this.dispatchEvent(_moveEvent)))}null!==targetRay&&(targetRay.visible=null!==inputPose);null!==grip&&(grip.visible=null!==gripPose);null!==hand&&(hand.visible=null!==handPose);return this};WebXRController.prototype._getHandJoint=function(hand,inputjoint){if(void 0===hand.joints[inputjoint.jointName]){var joint=new Group;joint.matrixAutoUpdate=!1;joint.visible=!1;hand.joints[inputjoint.jointName]=joint;hand.add(joint)}return hand.joints[inputjoint.jointName]};var FogExp2=
function(color,density){density=void 0===density?2.5E-4:density;this.isFogExp2=!0;this.name="";this.color=new Color(color);this.density=density};FogExp2.prototype.clone=function(){return new FogExp2(this.color,this.density)};FogExp2.prototype.toJSON=function(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}};var Fog=function(color,near,far){near=void 0===near?1:near;far=void 0===far?1E3:far;this.isFog=!0;this.name="";this.color=new Color(color);this.near=near;
this.far=far};Fog.prototype.clone=function(){return new Fog(this.color,this.near,this.far)};Fog.prototype.toJSON=function(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}};var Scene=function(){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isScene=!0;$jscomp$super$this.type="Scene";$jscomp$super$this.background=null;$jscomp$super$this.environment=null;$jscomp$super$this.fog=null;$jscomp$super$this.backgroundBlurriness=0;$jscomp$super$this.backgroundIntensity=
1;$jscomp$super$this.backgroundRotation=new Euler;$jscomp$super$this.environmentIntensity=1;$jscomp$super$this.environmentRotation=new Euler;$jscomp$super$this.overrideMaterial=null;"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:$jscomp$super$this}));return $jscomp$super$this};$jscomp.inherits(Scene,Object3D);Scene.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);null!==source.background&&(this.background=
source.background.clone());null!==source.environment&&(this.environment=source.environment.clone());null!==source.fog&&(this.fog=source.fog.clone());this.backgroundBlurriness=source.backgroundBlurriness;this.backgroundIntensity=source.backgroundIntensity;this.backgroundRotation.copy(source.backgroundRotation);this.environmentIntensity=source.environmentIntensity;this.environmentRotation.copy(source.environmentRotation);null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone());
this.matrixAutoUpdate=source.matrixAutoUpdate;return this};Scene.prototype.toJSON=function(meta){meta=Object3D.prototype.toJSON.call(this,meta);null!==this.fog&&(meta.object.fog=this.fog.toJSON());0<this.backgroundBlurriness&&(meta.object.backgroundBlurriness=this.backgroundBlurriness);1!==this.backgroundIntensity&&(meta.object.backgroundIntensity=this.backgroundIntensity);meta.object.backgroundRotation=this.backgroundRotation.toArray();1!==this.environmentIntensity&&(meta.object.environmentIntensity=
this.environmentIntensity);meta.object.environmentRotation=this.environmentRotation.toArray();return meta};var InterleavedBuffer=function(array,stride){this.isInterleavedBuffer=!0;this.array=array;this.stride=stride;this.count=void 0!==array?array.length/stride:0;this.usage=35044;this.updateRanges=[];this.version=0;this.uuid=generateUUID()};InterleavedBuffer.prototype.onUploadCallback=function(){};InterleavedBuffer.prototype.setUsage=function(value){this.usage=value;return this};InterleavedBuffer.prototype.addUpdateRange=
function(start,count){this.updateRanges.push({start:start,count:count})};InterleavedBuffer.prototype.clearUpdateRanges=function(){this.updateRanges.length=0};InterleavedBuffer.prototype.copy=function(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this};InterleavedBuffer.prototype.copyAt=function(index1,interleavedBuffer,index2){index1*=this.stride;index2*=interleavedBuffer.stride;for(var i=0,l=this.stride;i<
l;i++)this.array[index1+i]=interleavedBuffer.array[index2+i];return this};InterleavedBuffer.prototype.set=function(value,offset){this.array.set(value,void 0===offset?0:offset);return this};InterleavedBuffer.prototype.clone=function(data){void 0===data.arrayBuffers&&(data.arrayBuffers={});void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID());void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);data=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);
data=new this.constructor(data,this.stride);data.setUsage(this.usage);return data};InterleavedBuffer.prototype.onUpload=function(callback){this.onUploadCallback=callback;return this};InterleavedBuffer.prototype.toJSON=function(data){void 0===data.arrayBuffers&&(data.arrayBuffers={});void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=generateUUID());void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer)));
return{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}};$jscomp.global.Object.defineProperties(InterleavedBuffer.prototype,{needsUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===value&&this.version++}}});var _vector$7=new Vector3,InterleavedBufferAttribute=function(interleavedBuffer,itemSize,offset,normalized){this.isInterleavedBufferAttribute=!0;this.name="";this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=
void 0===normalized?!1:normalized};InterleavedBufferAttribute.prototype.applyMatrix4=function(m){for(var i=0,l=this.data.count;i<l;i++)_vector$7.fromBufferAttribute(this,i),_vector$7.applyMatrix4(m),this.setXYZ(i,_vector$7.x,_vector$7.y,_vector$7.z);return this};InterleavedBufferAttribute.prototype.applyNormalMatrix=function(m){for(var i=0,l=this.count;i<l;i++)_vector$7.fromBufferAttribute(this,i),_vector$7.applyNormalMatrix(m),this.setXYZ(i,_vector$7.x,_vector$7.y,_vector$7.z);return this};InterleavedBufferAttribute.prototype.transformDirection=
function(m){for(var i=0,l=this.count;i<l;i++)_vector$7.fromBufferAttribute(this,i),_vector$7.transformDirection(m),this.setXYZ(i,_vector$7.x,_vector$7.y,_vector$7.z);return this};InterleavedBufferAttribute.prototype.getComponent=function(index,component){index=this.array[index*this.data.stride+this.offset+component];this.normalized&&(index=denormalize(index,this.array));return index};InterleavedBufferAttribute.prototype.setComponent=function(index,component,value){this.normalized&&(value=normalize(value,
this.array));this.data.array[index*this.data.stride+this.offset+component]=value;return this};InterleavedBufferAttribute.prototype.setX=function(index,x){this.normalized&&(x=normalize(x,this.array));this.data.array[index*this.data.stride+this.offset]=x;return this};InterleavedBufferAttribute.prototype.setY=function(index,y){this.normalized&&(y=normalize(y,this.array));this.data.array[index*this.data.stride+this.offset+1]=y;return this};InterleavedBufferAttribute.prototype.setZ=function(index,z){this.normalized&&
(z=normalize(z,this.array));this.data.array[index*this.data.stride+this.offset+2]=z;return this};InterleavedBufferAttribute.prototype.setW=function(index,w){this.normalized&&(w=normalize(w,this.array));this.data.array[index*this.data.stride+this.offset+3]=w;return this};InterleavedBufferAttribute.prototype.getX=function(index){index=this.data.array[index*this.data.stride+this.offset];this.normalized&&(index=denormalize(index,this.array));return index};InterleavedBufferAttribute.prototype.getY=function(index){index=
this.data.array[index*this.data.stride+this.offset+1];this.normalized&&(index=denormalize(index,this.array));return index};InterleavedBufferAttribute.prototype.getZ=function(index){index=this.data.array[index*this.data.stride+this.offset+2];this.normalized&&(index=denormalize(index,this.array));return index};InterleavedBufferAttribute.prototype.getW=function(index){index=this.data.array[index*this.data.stride+this.offset+3];this.normalized&&(index=denormalize(index,this.array));return index};InterleavedBufferAttribute.prototype.setXY=
function(index,x,y){index=index*this.data.stride+this.offset;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array));this.data.array[index+0]=x;this.data.array[index+1]=y;return this};InterleavedBufferAttribute.prototype.setXYZ=function(index,x,y,z){index=index*this.data.stride+this.offset;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array));this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this};InterleavedBufferAttribute.prototype.setXYZW=
function(index,x,y,z,w){index=index*this.data.stride+this.offset;this.normalized&&(x=normalize(x,this.array),y=normalize(y,this.array),z=normalize(z,this.array),w=normalize(w,this.array));this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this};InterleavedBufferAttribute.prototype.clone=function(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");
data=[];for(var i=0;i<this.count;i++)for(var index=i*this.data.stride+this.offset,j=0;j<this.itemSize;j++)data.push(this.data.array[index+j]);return new BufferAttribute(new this.array.constructor(data),this.itemSize,this.normalized)}void 0===data.interleavedBuffers&&(data.interleavedBuffers={});void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.clone(data));return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,
this.offset,this.normalized)};InterleavedBufferAttribute.prototype.toJSON=function(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");data=[];for(var i=0;i<this.count;i++)for(var index=i*this.data.stride+this.offset,j=0;j<this.itemSize;j++)data.push(this.data.array[index+j]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:data,normalized:this.normalized}}void 0===data.interleavedBuffers&&
(data.interleavedBuffers={});void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data));return{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}};$jscomp.global.Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{configurable:!0,enumerable:!0,get:function(){return this.data.count}},array:{configurable:!0,enumerable:!0,get:function(){return this.data.array}},
needsUpdate:{configurable:!0,enumerable:!0,set:function(value){this.data.needsUpdate=value}}});var SpriteMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isSpriteMaterial=!0;$jscomp$super$this.type="SpriteMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.map=null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.rotation=0;$jscomp$super$this.sizeAttenuation=!0;$jscomp$super$this.transparent=!0;$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);
return $jscomp$super$this};$jscomp.inherits(SpriteMaterial,Material);SpriteMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;this.fog=source.fog;return this};var _geometry,_intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=
new Matrix4,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,Sprite=function(material){material=void 0===material?new SpriteMaterial:material;var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isSprite=!0;$jscomp$super$this.type="Sprite";if(void 0===_geometry){_geometry=new BufferGeometry;var float32Array=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]);float32Array=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,
1,2,0,2,3]);_geometry.setAttribute("position",new InterleavedBufferAttribute(float32Array,3,0,!1));_geometry.setAttribute("uv",new InterleavedBufferAttribute(float32Array,2,3,!1))}$jscomp$super$this.geometry=_geometry;$jscomp$super$this.material=material;$jscomp$super$this.center=new Vector2(.5,.5);$jscomp$super$this.count=1;return $jscomp$super$this};$jscomp.inherits(Sprite,Object3D);Sprite.prototype.raycast=function(raycaster,intersects){null===raycaster.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.');
_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);raycaster.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);var rotation=this.material.rotation;if(0!==rotation){var cos=Math.cos(rotation);var sin=Math.sin(rotation)}rotation=this.center;transformVertex(_vA.set(-.5,
-.5,0),_mvPosition,rotation,_worldScale,sin,cos);transformVertex(_vB.set(.5,-.5,0),_mvPosition,rotation,_worldScale,sin,cos);transformVertex(_vC.set(.5,.5,0),_mvPosition,rotation,_worldScale,sin,cos);_uvA.set(0,0);_uvB.set(1,0);_uvC.set(1,1);var intersect=raycaster.ray.intersectTriangle(_vA,_vB,_vC,!1,_intersectPoint);if(null===intersect&&(transformVertex(_vB.set(-.5,.5,0),_mvPosition,rotation,_worldScale,sin,cos),_uvB.set(0,1),intersect=raycaster.ray.intersectTriangle(_vA,_vC,_vB,!1,_intersectPoint),
null===intersect))return;sin=raycaster.ray.origin.distanceTo(_intersectPoint);sin<raycaster.near||sin>raycaster.far||intersects.push({distance:sin,point:_intersectPoint.clone(),uv:Triangle.getInterpolation(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2),face:null,object:this})};Sprite.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);void 0!==source.center&&this.center.copy(source.center);this.material=source.material;return this};var _v1$2=new Vector3,
_v2$1=new Vector3,LOD=function(){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isLOD=!0;$jscomp$super$this._currentLevel=0;$jscomp$super$this.type="LOD";Object.defineProperties($jscomp$super$this,{levels:{enumerable:!0,value:[]}});$jscomp$super$this.autoUpdate=!0;return $jscomp$super$this};$jscomp.inherits(LOD,Object3D);LOD.prototype.copy=function(source){Object3D.prototype.copy.call(this,source,!1);for(var levels=source.levels,i=0,l=levels.length;i<l;i++){var level=levels[i];
this.addLevel(level.object.clone(),level.distance,level.hysteresis)}this.autoUpdate=source.autoUpdate;return this};LOD.prototype.addLevel=function(object,distance,hysteresis){distance=Math.abs(void 0===distance?0:distance);var levels=this.levels,l;for(l=0;l<levels.length&&!(distance<levels[l].distance);l++);levels.splice(l,0,{distance:distance,hysteresis:void 0===hysteresis?0:hysteresis,object:object});this.add(object);return this};LOD.prototype.removeLevel=function(distance){for(var levels=this.levels,
i=0;i<levels.length;i++)if(levels[i].distance===distance)return distance=levels.splice(i,1),this.remove(distance[0].object),!0;return!1};LOD.prototype.getCurrentLevel=function(){return this._currentLevel};LOD.prototype.getObjectForDistance=function(distance){var levels=this.levels;if(0<levels.length){var l;var i=1;for(l=levels.length;i<l;i++){var levelDistance=levels[i].distance;levels[i].object.visible&&(levelDistance-=levelDistance*levels[i].hysteresis);if(distance<levelDistance)break}return levels[i-
1].object}return null};LOD.prototype.raycast=function(raycaster,intersects){if(0<this.levels.length){_v1$2.setFromMatrixPosition(this.matrixWorld);var distance=raycaster.ray.origin.distanceTo(_v1$2);this.getObjectForDistance(distance).raycast(raycaster,intersects)}};LOD.prototype.update=function(camera){var levels=this.levels;if(1<levels.length){_v1$2.setFromMatrixPosition(camera.matrixWorld);_v2$1.setFromMatrixPosition(this.matrixWorld);camera=_v1$2.distanceTo(_v2$1)/camera.zoom;levels[0].object.visible=
!0;var l;var i=1;for(l=levels.length;i<l;i++){var levelDistance=levels[i].distance;levels[i].object.visible&&(levelDistance-=levelDistance*levels[i].hysteresis);if(camera>=levelDistance)levels[i-1].object.visible=!1,levels[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<l;i++)levels[i].object.visible=!1}};LOD.prototype.toJSON=function(meta){meta=Object3D.prototype.toJSON.call(this,meta);!1===this.autoUpdate&&(meta.object.autoUpdate=!1);meta.object.levels=[];for(var levels=this.levels,
i=0,l=levels.length;i<l;i++){var level=levels[i];meta.object.levels.push({object:level.object.uuid,distance:level.distance,hysteresis:level.hysteresis})}return meta};var _basePosition=new Vector3,_skinIndex=new Vector4,_skinWeight=new Vector4,_vector3=new Vector3,_matrix4=new Matrix4,_vertex=new Vector3,_sphere$5=new Sphere,_inverseMatrix$2=new Matrix4,_ray$2=new Ray,SkinnedMesh=function(geometry,material){geometry=Mesh.call(this,geometry,material)||this;geometry.isSkinnedMesh=!0;geometry.type="SkinnedMesh";
geometry.bindMode="attached";geometry.bindMatrix=new Matrix4;geometry.bindMatrixInverse=new Matrix4;geometry.boundingBox=null;geometry.boundingSphere=null;return geometry};$jscomp.inherits(SkinnedMesh,Mesh);SkinnedMesh.prototype.computeBoundingBox=function(){var geometry=this.geometry;null===this.boundingBox&&(this.boundingBox=new Box3);this.boundingBox.makeEmpty();geometry=geometry.getAttribute("position");for(var i=0;i<geometry.count;i++)this.getVertexPosition(i,_vertex),this.boundingBox.expandByPoint(_vertex)};
SkinnedMesh.prototype.computeBoundingSphere=function(){var geometry=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new Sphere);this.boundingSphere.makeEmpty();geometry=geometry.getAttribute("position");for(var i=0;i<geometry.count;i++)this.getVertexPosition(i,_vertex),this.boundingSphere.expandByPoint(_vertex)};SkinnedMesh.prototype.copy=function(source,recursive){Mesh.prototype.copy.call(this,source,recursive);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);
this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;null!==source.boundingBox&&(this.boundingBox=source.boundingBox.clone());null!==source.boundingSphere&&(this.boundingSphere=source.boundingSphere.clone());return this};SkinnedMesh.prototype.raycast=function(raycaster,intersects){var matrixWorld=this.matrixWorld;void 0!==this.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),_sphere$5.copy(this.boundingSphere),_sphere$5.applyMatrix4(matrixWorld),!1!==
raycaster.ray.intersectsSphere(_sphere$5)&&(_inverseMatrix$2.copy(matrixWorld).invert(),_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2),null!==this.boundingBox&&!1===_ray$2.intersectsBox(this.boundingBox)||this._computeIntersections(raycaster,intersects,_ray$2)))};SkinnedMesh.prototype.getVertexPosition=function(index,target){Mesh.prototype.getVertexPosition.call(this,index,target);this.applyBoneTransform(index,target);return target};SkinnedMesh.prototype.bind=function(skeleton,bindMatrix){this.skeleton=
skeleton;void 0===bindMatrix&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),bindMatrix=this.matrixWorld);this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.copy(bindMatrix).invert()};SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};SkinnedMesh.prototype.normalizeSkinWeights=function(){for(var vector=new Vector4,skinWeight=this.geometry.attributes.skinWeight,i=0,l=skinWeight.count;i<l;i++){vector.fromBufferAttribute(skinWeight,i);var scale=1/vector.manhattanLength();
Infinity!==scale?vector.multiplyScalar(scale):vector.set(1,0,0,0);skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w)}};SkinnedMesh.prototype.updateMatrixWorld=function(force){Mesh.prototype.updateMatrixWorld.call(this,force);"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)};SkinnedMesh.prototype.applyBoneTransform=
function(index,target){var skeleton=this.skeleton,geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);_basePosition.copy(target).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(index=0;4>index;index++)if(geometry=_skinWeight.getComponent(index),0!==geometry){var boneIndex=_skinIndex.getComponent(index);_matrix4.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);
target.addScaledVector(_vector3.copy(_basePosition).applyMatrix4(_matrix4),geometry)}return target.applyMatrix4(this.bindMatrixInverse)};var Bone=function(){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isBone=!0;$jscomp$super$this.type="Bone";return $jscomp$super$this};$jscomp.inherits(Bone,Object3D);var DataTexture=function(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,colorSpace){data=void 0===data?null:data;width=void 0===width?1:width;
height=void 0===height?1:height;format=Texture.call(this,null,mapping,wrapS,wrapT,void 0===magFilter?1003:magFilter,void 0===minFilter?1003:minFilter,format,type,anisotropy,colorSpace)||this;format.isDataTexture=!0;format.image={data:data,width:width,height:height};format.generateMipmaps=!1;format.flipY=!1;format.unpackAlignment=1;return format};$jscomp.inherits(DataTexture,Texture);var _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4,Skeleton=function(bones,boneInverses){bones=void 0===bones?
[]:bones;boneInverses=void 0===boneInverses?[]:boneInverses;this.uuid=generateUUID();this.bones=bones.slice(0);this.boneInverses=boneInverses;this.boneTexture=this.boneMatrices=null;this.init()};Skeleton.prototype.init=function(){var bones=this.bones,boneInverses=this.boneInverses;this.boneMatrices=new Float32Array(16*bones.length);if(0===boneInverses.length)this.calculateInverses();else if(bones.length!==boneInverses.length)for(console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),
this.boneInverses=[],bones=0,boneInverses=this.bones.length;bones<boneInverses;bones++)this.boneInverses.push(new Matrix4)};Skeleton.prototype.calculateInverses=function(){for(var i=this.boneInverses.length=0,il=this.bones.length;i<il;i++){var inverse=new Matrix4;this.bones[i]&&inverse.copy(this.bones[i].matrixWorld).invert();this.boneInverses.push(inverse)}};Skeleton.prototype.pose=function(){for(var i=0,il=this.bones.length;i<il;i++){var bone=this.bones[i];bone&&bone.matrixWorld.copy(this.boneInverses[i]).invert()}i=
0;for(il=this.bones.length;i<il;i++)if(bone=this.bones[i])bone.parent&&bone.parent.isBone?(bone.matrix.copy(bone.parent.matrixWorld).invert(),bone.matrix.multiply(bone.matrixWorld)):bone.matrix.copy(bone.matrixWorld),bone.matrix.decompose(bone.position,bone.quaternion,bone.scale)};Skeleton.prototype.update=function(){for(var bones=this.bones,boneInverses=this.boneInverses,boneMatrices=this.boneMatrices,boneTexture=this.boneTexture,i=0,il=bones.length;i<il;i++)_offsetMatrix.multiplyMatrices(bones[i]?
bones[i].matrixWorld:_identityMatrix,boneInverses[i]),_offsetMatrix.toArray(boneMatrices,16*i);null!==boneTexture&&(boneTexture.needsUpdate=!0)};Skeleton.prototype.clone=function(){return new Skeleton(this.bones,this.boneInverses)};Skeleton.prototype.computeBoneTexture=function(){var size=Math.sqrt(4*this.bones.length);size=4*Math.ceil(size/4);size=Math.max(size,4);var boneMatrices=new Float32Array(size*size*4);boneMatrices.set(this.boneMatrices);size=new DataTexture(boneMatrices,size,size,1023,1015);
size.needsUpdate=!0;this.boneMatrices=boneMatrices;this.boneTexture=size;return this};Skeleton.prototype.getBoneByName=function(name){for(var i=0,il=this.bones.length;i<il;i++){var bone=this.bones[i];if(bone.name===name)return bone}};Skeleton.prototype.dispose=function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)};Skeleton.prototype.fromJSON=function(json,bones){this.uuid=json.uuid;for(var i=0,l=json.bones.length;i<l;i++){var uuid=json.bones[i],bone=bones[uuid];void 0===
bone&&(console.warn("THREE.Skeleton: No bone found with UUID:",uuid),bone=new Bone);this.bones.push(bone);this.boneInverses.push((new Matrix4).fromArray(json.boneInverses[i]))}this.init();return this};Skeleton.prototype.toJSON=function(){var data={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};data.uuid=this.uuid;for(var bones=this.bones,boneInverses=this.boneInverses,i=0,l=bones.length;i<l;i++)data.bones.push(bones[i].uuid),data.boneInverses.push(boneInverses[i].toArray());
return data};var InstancedBufferAttribute=function(array,itemSize,normalized,meshPerAttribute){meshPerAttribute=void 0===meshPerAttribute?1:meshPerAttribute;array=BufferAttribute.call(this,array,itemSize,normalized)||this;array.isInstancedBufferAttribute=!0;array.meshPerAttribute=meshPerAttribute;return array};$jscomp.inherits(InstancedBufferAttribute,BufferAttribute);InstancedBufferAttribute.prototype.copy=function(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;
return this};InstancedBufferAttribute.prototype.toJSON=function(){var data=BufferAttribute.prototype.toJSON.call(this);data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=!0;return data};var _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_box3=new Box3,_identity=new Matrix4,_mesh$1=new Mesh,_sphere$4=new Sphere,InstancedMesh=function(geometry,material,count){geometry=Mesh.call(this,geometry,material)||this;geometry.isInstancedMesh=
!0;geometry.instanceMatrix=new InstancedBufferAttribute(new Float32Array(16*count),16);geometry.instanceColor=null;geometry.morphTexture=null;geometry.count=count;geometry.boundingBox=null;geometry.boundingSphere=null;for(material=0;material<count;material++)geometry.setMatrixAt(material,_identity);return geometry};$jscomp.inherits(InstancedMesh,Mesh);InstancedMesh.prototype.computeBoundingBox=function(){var geometry=this.geometry,count=this.count;null===this.boundingBox&&(this.boundingBox=new Box3);
null===geometry.boundingBox&&geometry.computeBoundingBox();this.boundingBox.makeEmpty();for(var i=0;i<count;i++)this.getMatrixAt(i,_instanceLocalMatrix),_box3.copy(geometry.boundingBox).applyMatrix4(_instanceLocalMatrix),this.boundingBox.union(_box3)};InstancedMesh.prototype.computeBoundingSphere=function(){var geometry=this.geometry,count=this.count;null===this.boundingSphere&&(this.boundingSphere=new Sphere);null===geometry.boundingSphere&&geometry.computeBoundingSphere();this.boundingSphere.makeEmpty();
for(var i=0;i<count;i++)this.getMatrixAt(i,_instanceLocalMatrix),_sphere$4.copy(geometry.boundingSphere).applyMatrix4(_instanceLocalMatrix),this.boundingSphere.union(_sphere$4)};InstancedMesh.prototype.copy=function(source,recursive){Mesh.prototype.copy.call(this,source,recursive);this.instanceMatrix.copy(source.instanceMatrix);null!==source.morphTexture&&(this.morphTexture=source.morphTexture.clone());null!==source.instanceColor&&(this.instanceColor=source.instanceColor.clone());this.count=source.count;
null!==source.boundingBox&&(this.boundingBox=source.boundingBox.clone());null!==source.boundingSphere&&(this.boundingSphere=source.boundingSphere.clone());return this};InstancedMesh.prototype.getColorAt=function(index,color){color.fromArray(this.instanceColor.array,3*index)};InstancedMesh.prototype.getMatrixAt=function(index,matrix){matrix.fromArray(this.instanceMatrix.array,16*index)};InstancedMesh.prototype.getMorphAt=function(index,object){object=object.morphTargetInfluences;var array=this.morphTexture.source.data.data;
index=index*(object.length+1)+1;for(var i=0;i<object.length;i++)object[i]=array[index+i]};InstancedMesh.prototype.raycast=function(raycaster,intersects){var matrixWorld=this.matrixWorld,raycastTimes=this.count;_mesh$1.geometry=this.geometry;_mesh$1.material=this.material;if(void 0!==_mesh$1.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),_sphere$4.copy(this.boundingSphere),_sphere$4.applyMatrix4(matrixWorld),!1!==raycaster.ray.intersectsSphere(_sphere$4)))for(var instanceId=0;instanceId<
raycastTimes;instanceId++){this.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);_mesh$1.matrixWorld=_instanceWorldMatrix;_mesh$1.raycast(raycaster,_instanceIntersects);for(var i=0,l=_instanceIntersects.length;i<l;i++){var intersect$110=_instanceIntersects[i];intersect$110.instanceId=instanceId;intersect$110.object=this;intersects.push(intersect$110)}_instanceIntersects.length=0}};InstancedMesh.prototype.setColorAt=function(index,
color){null===this.instanceColor&&(this.instanceColor=new InstancedBufferAttribute((new Float32Array(3*this.instanceMatrix.count)).fill(1),3));color.toArray(this.instanceColor.array,3*index)};InstancedMesh.prototype.setMatrixAt=function(index,matrix){matrix.toArray(this.instanceMatrix.array,16*index)};InstancedMesh.prototype.setMorphAt=function(index,object){object=object.morphTargetInfluences;var len=object.length+1;null===this.morphTexture&&(this.morphTexture=new DataTexture(new Float32Array(len*
this.count),len,this.count,1028,1015));for(var array=this.morphTexture.source.data.data,morphInfluencesSum=0,i=0;i<object.length;i++)morphInfluencesSum+=object[i];index*=len;array[index]=this.geometry.morphTargetsRelative?1:1-morphInfluencesSum;array.set(object,index+1)};InstancedMesh.prototype.updateMorphTargets=function(){};InstancedMesh.prototype.dispose=function(){this.dispatchEvent({type:"dispose"});null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)};var _vector1=
new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3,Plane=function(normal,constant){normal=void 0===normal?new Vector3(1,0,0):normal;this.isPlane=!0;this.normal=normal;this.constant=void 0===constant?0:constant};Plane.prototype.set=function(normal,constant){this.normal.copy(normal);this.constant=constant;return this};Plane.prototype.setComponents=function(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this};Plane.prototype.setFromNormalAndCoplanarPoint=function(normal,point){this.normal.copy(normal);
this.constant=-point.dot(this.normal);return this};Plane.prototype.setFromCoplanarPoints=function(a,b,c){b=_vector1.subVectors(c,b).cross(_vector2.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(b,a);return this};Plane.prototype.copy=function(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this};Plane.prototype.normalize=function(){var inverseNormalLength=1/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;
return this};Plane.prototype.negate=function(){this.constant*=-1;this.normal.negate();return this};Plane.prototype.distanceToPoint=function(point){return this.normal.dot(point)+this.constant};Plane.prototype.distanceToSphere=function(sphere){return this.distanceToPoint(sphere.center)-sphere.radius};Plane.prototype.projectPoint=function(point,target){return target.copy(point).addScaledVector(this.normal,-this.distanceToPoint(point))};Plane.prototype.intersectLine=function(line,target){var direction=
line.delta(_vector1),denominator=this.normal.dot(direction);if(0===denominator)return 0===this.distanceToPoint(line.start)?target.copy(line.start):null;denominator=-(line.start.dot(this.normal)+this.constant)/denominator;return 0>denominator||1<denominator?null:target.copy(line.start).addScaledVector(direction,denominator)};Plane.prototype.intersectsLine=function(line){var startSign=this.distanceToPoint(line.start);line=this.distanceToPoint(line.end);return 0>startSign&&0<line||0>line&&0<startSign};
Plane.prototype.intersectsBox=function(box){return box.intersectsPlane(this)};Plane.prototype.intersectsSphere=function(sphere){return sphere.intersectsPlane(this)};Plane.prototype.coplanarPoint=function(target){return target.copy(this.normal).multiplyScalar(-this.constant)};Plane.prototype.applyMatrix4=function(matrix,optionalNormalMatrix){optionalNormalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);matrix=this.coplanarPoint(_vector1).applyMatrix4(matrix);optionalNormalMatrix=
this.normal.applyMatrix3(optionalNormalMatrix).normalize();this.constant=-matrix.dot(optionalNormalMatrix);return this};Plane.prototype.translate=function(offset){this.constant-=offset.dot(this.normal);return this};Plane.prototype.equals=function(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant};Plane.prototype.clone=function(){return(new this.constructor).copy(this)};var _sphere$3=new Sphere,_defaultSpriteCenter=new Vector2(.5,.5),_vector$6=new Vector3,Frustum=function(p0,
p1,p2,p3,p4,p5){p0=void 0===p0?new Plane:p0;p1=void 0===p1?new Plane:p1;p2=void 0===p2?new Plane:p2;p3=void 0===p3?new Plane:p3;p4=void 0===p4?new Plane:p4;p5=void 0===p5?new Plane:p5;this.planes=[p0,p1,p2,p3,p4,p5]};Frustum.prototype.set=function(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this};Frustum.prototype.copy=function(frustum){for(var planes=this.planes,i=0;6>i;i++)planes[i].copy(frustum.planes[i]);
return this};Frustum.prototype.setFromProjectionMatrix=function(m,coordinateSystem,reversedDepth){coordinateSystem=void 0===coordinateSystem?2E3:coordinateSystem;reversedDepth=void 0===reversedDepth?!1:reversedDepth;var planes=this.planes,me=m.elements;m=me[0];var me1=me[1],me2=me[2],me3=me[3],me4=me[4],me5=me[5],me6=me[6],me7=me[7],me8=me[8],me9=me[9],me10=me[10],me11=me[11],me12=me[12],me13=me[13],me14=me[14];me=me[15];planes[0].setComponents(me3-m,me7-me4,me11-me8,me-me12).normalize();planes[1].setComponents(me3+
m,me7+me4,me11+me8,me+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me-me13).normalize();if(reversedDepth)planes[4].setComponents(me2,me6,me10,me14).normalize(),planes[5].setComponents(me3-me2,me7-me6,me11-me10,me-me14).normalize();else if(planes[4].setComponents(me3-me2,me7-me6,me11-me10,me-me14).normalize(),2E3===coordinateSystem)planes[5].setComponents(me3+me2,me7+me6,me11+me10,me+me14).normalize();else if(2001===
coordinateSystem)planes[5].setComponents(me2,me6,me10,me14).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+coordinateSystem);return this};Frustum.prototype.intersectsObject=function(object){if(void 0!==object.boundingSphere)null===object.boundingSphere&&object.computeBoundingSphere(),_sphere$3.copy(object.boundingSphere).applyMatrix4(object.matrixWorld);else{var geometry=object.geometry;null===geometry.boundingSphere&&geometry.computeBoundingSphere();
_sphere$3.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld)}return this.intersectsSphere(_sphere$3)};Frustum.prototype.intersectsSprite=function(sprite){_sphere$3.center.set(0,0,0);var offset=_defaultSpriteCenter.distanceTo(sprite.center);_sphere$3.radius=.7071067811865476+offset;_sphere$3.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$3)};Frustum.prototype.intersectsSphere=function(sphere){var planes=this.planes,center=sphere.center;sphere=-sphere.radius;for(var i=
0;6>i;i++)if(planes[i].distanceToPoint(center)<sphere)return!1;return!0};Frustum.prototype.intersectsBox=function(box){for(var planes=this.planes,i=0;6>i;i++){var plane=planes[i];_vector$6.x=0<plane.normal.x?box.max.x:box.min.x;_vector$6.y=0<plane.normal.y?box.max.y:box.min.y;_vector$6.z=0<plane.normal.z?box.max.z:box.min.z;if(0>plane.distanceToPoint(_vector$6))return!1}return!0};Frustum.prototype.containsPoint=function(point){for(var planes=this.planes,i=0;6>i;i++)if(0>planes[i].distanceToPoint(point))return!1;
return!0};Frustum.prototype.clone=function(){return(new this.constructor).copy(this)};var _projScreenMatrix$2=new Matrix4,_frustum$1=new Frustum,FrustumArray=function(){this.coordinateSystem=2E3};FrustumArray.prototype.intersectsObject=function(object,cameraArray){if(!cameraArray.isArrayCamera||0===cameraArray.cameras.length)return!1;for(var i=0;i<cameraArray.cameras.length;i++){var camera=cameraArray.cameras[i];_projScreenMatrix$2.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);
_frustum$1.setFromProjectionMatrix(_projScreenMatrix$2,camera.coordinateSystem,camera.reversedDepth);if(_frustum$1.intersectsObject(object))return!0}return!1};FrustumArray.prototype.intersectsSprite=function(sprite,cameraArray){if(!cameraArray||!cameraArray.cameras||0===cameraArray.cameras.length)return!1;for(var i=0;i<cameraArray.cameras.length;i++){var camera=cameraArray.cameras[i];_projScreenMatrix$2.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum$1.setFromProjectionMatrix(_projScreenMatrix$2,
camera.coordinateSystem,camera.reversedDepth);if(_frustum$1.intersectsSprite(sprite))return!0}return!1};FrustumArray.prototype.intersectsSphere=function(sphere,cameraArray){if(!cameraArray||!cameraArray.cameras||0===cameraArray.cameras.length)return!1;for(var i=0;i<cameraArray.cameras.length;i++){var camera=cameraArray.cameras[i];_projScreenMatrix$2.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum$1.setFromProjectionMatrix(_projScreenMatrix$2,camera.coordinateSystem,camera.reversedDepth);
if(_frustum$1.intersectsSphere(sphere))return!0}return!1};FrustumArray.prototype.intersectsBox=function(box,cameraArray){if(!cameraArray||!cameraArray.cameras||0===cameraArray.cameras.length)return!1;for(var i=0;i<cameraArray.cameras.length;i++){var camera=cameraArray.cameras[i];_projScreenMatrix$2.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum$1.setFromProjectionMatrix(_projScreenMatrix$2,camera.coordinateSystem,camera.reversedDepth);if(_frustum$1.intersectsBox(box))return!0}return!1};
FrustumArray.prototype.containsPoint=function(point,cameraArray){if(!cameraArray||!cameraArray.cameras||0===cameraArray.cameras.length)return!1;for(var i=0;i<cameraArray.cameras.length;i++){var camera=cameraArray.cameras[i];_projScreenMatrix$2.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum$1.setFromProjectionMatrix(_projScreenMatrix$2,camera.coordinateSystem,camera.reversedDepth);if(_frustum$1.containsPoint(point))return!0}return!1};FrustumArray.prototype.clone=function(){return new FrustumArray};
var MultiDrawRenderList=function(){this.index=0;this.pool=[];this.list=[]};MultiDrawRenderList.prototype.push=function(start,count,z,index){var pool=this.pool,list=this.list;this.index>=pool.length&&pool.push({start:-1,count:-1,z:-1,index:-1});pool=pool[this.index];list.push(pool);this.index++;pool.start=start;pool.count=count;pool.z=z;pool.index=index};MultiDrawRenderList.prototype.reset=function(){this.index=this.list.length=0};var _matrix$1=new Matrix4,_whiteColor=new Color(1,1,1),_frustum=new Frustum,
_frustumArray=new FrustumArray,_box$1=new Box3,_sphere$2=new Sphere,_vector$5=new Vector3,_forward$1=new Vector3,_temp=new Vector3,_renderList=new MultiDrawRenderList,_mesh=new Mesh,_batchIntersects=[],BatchedMesh=function(maxInstanceCount,maxVertexCount,maxIndexCount,material){maxIndexCount=void 0===maxIndexCount?2*maxVertexCount:maxIndexCount;material=Mesh.call(this,new BufferGeometry,material)||this;material.isBatchedMesh=!0;material.perObjectFrustumCulled=!0;material.sortObjects=!0;material.boundingBox=
null;material.boundingSphere=null;material.customSort=null;material._instanceInfo=[];material._geometryInfo=[];material._availableInstanceIds=[];material._availableGeometryIds=[];material._nextIndexStart=0;material._nextVertexStart=0;material._geometryCount=0;material._visibilityChanged=!0;material._geometryInitialized=!1;material._maxInstanceCount=maxInstanceCount;material._maxVertexCount=maxVertexCount;material._maxIndexCount=maxIndexCount;material._multiDrawCounts=new Int32Array(maxInstanceCount);
material._multiDrawStarts=new Int32Array(maxInstanceCount);material._multiDrawCount=0;material._multiDrawInstances=null;material._matricesTexture=null;material._indirectTexture=null;material._colorsTexture=null;material._initMatricesTexture();material._initIndirectTexture();return material};$jscomp.inherits(BatchedMesh,Mesh);BatchedMesh.prototype._initMatricesTexture=function(){var size=Math.sqrt(4*this._maxInstanceCount);size=4*Math.ceil(size/4);size=Math.max(size,4);var matricesArray=new Float32Array(size*
size*4);this._matricesTexture=new DataTexture(matricesArray,size,size,1023,1015)};BatchedMesh.prototype._initIndirectTexture=function(){var size=Math.sqrt(this._maxInstanceCount);size=Math.ceil(size);var indirectArray=new Uint32Array(size*size);this._indirectTexture=new DataTexture(indirectArray,size,size,1029,1014)};BatchedMesh.prototype._initColorsTexture=function(){var size=Math.sqrt(this._maxInstanceCount);size=Math.ceil(size);var colorsArray=(new Float32Array(size*size*4)).fill(1);size=new DataTexture(colorsArray,
size,size,1023,1015);size.colorSpace=ColorManagement.workingColorSpace;this._colorsTexture=size};BatchedMesh.prototype._initializeGeometry=function(reference){var geometry=this.geometry,maxVertexCount=this._maxVertexCount,maxIndexCount=this._maxIndexCount;if(!1===this._geometryInitialized){for(var attributeName in reference.attributes){var $jscomp$destructuring$var3=reference.getAttribute(attributeName),itemSize=$jscomp$destructuring$var3.itemSize,normalized=$jscomp$destructuring$var3.normalized;
$jscomp$destructuring$var3=new $jscomp$destructuring$var3.array.constructor(maxVertexCount*itemSize);itemSize=new BufferAttribute($jscomp$destructuring$var3,itemSize,normalized);geometry.setAttribute(attributeName,itemSize)}null!==reference.getIndex()&&(reference=65535<maxVertexCount?new Uint32Array(maxIndexCount):new Uint16Array(maxIndexCount),geometry.setIndex(new BufferAttribute(reference,1)));this._geometryInitialized=!0}};BatchedMesh.prototype._validateGeometry=function(geometry){var batchGeometry=
this.geometry;if(!!geometry.getIndex()!==!!batchGeometry.getIndex())throw Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(var attributeName in batchGeometry.attributes){if(!geometry.hasAttribute(attributeName))throw Error('THREE.BatchedMesh: Added geometry missing "'+attributeName+'". All geometries must have consistent attributes.');var srcAttribute=geometry.getAttribute(attributeName),dstAttribute=batchGeometry.getAttribute(attributeName);if(srcAttribute.itemSize!==
dstAttribute.itemSize||srcAttribute.normalized!==dstAttribute.normalized)throw Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.");}};BatchedMesh.prototype.validateInstanceId=function(instanceId){var instanceInfo=this._instanceInfo;if(0>instanceId||instanceId>=instanceInfo.length||!1===instanceInfo[instanceId].active)throw Error("THREE.BatchedMesh: Invalid instanceId "+instanceId+". Instance is either out of range or has been deleted.");};BatchedMesh.prototype.validateGeometryId=
function(geometryId){var geometryInfoList=this._geometryInfo;if(0>geometryId||geometryId>=geometryInfoList.length||!1===geometryInfoList[geometryId].active)throw Error("THREE.BatchedMesh: Invalid geometryId "+geometryId+". Geometry is either out of range or has been deleted.");};BatchedMesh.prototype.setCustomSort=function(func){this.customSort=func;return this};BatchedMesh.prototype.computeBoundingBox=function(){null===this.boundingBox&&(this.boundingBox=new Box3);var boundingBox=this.boundingBox,
instanceInfo=this._instanceInfo;boundingBox.makeEmpty();for(var i=0,l=instanceInfo.length;i<l;i++)if(!1!==instanceInfo[i].active){var geometryId=instanceInfo[i].geometryIndex;this.getMatrixAt(i,_matrix$1);this.getBoundingBoxAt(geometryId,_box$1).applyMatrix4(_matrix$1);boundingBox.union(_box$1)}};BatchedMesh.prototype.computeBoundingSphere=function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var boundingSphere=this.boundingSphere,instanceInfo=this._instanceInfo;boundingSphere.makeEmpty();
for(var i=0,l=instanceInfo.length;i<l;i++)if(!1!==instanceInfo[i].active){var geometryId=instanceInfo[i].geometryIndex;this.getMatrixAt(i,_matrix$1);this.getBoundingSphereAt(geometryId,_sphere$2).applyMatrix4(_matrix$1);boundingSphere.union(_sphere$2)}};BatchedMesh.prototype.addInstance=function(geometryId){if(this._instanceInfo.length>=this.maxInstanceCount&&0===this._availableInstanceIds.length)throw Error("THREE.BatchedMesh: Maximum item count reached.");var instanceInfo={visible:!0,active:!0,
geometryIndex:geometryId};0<this._availableInstanceIds.length?(this._availableInstanceIds.sort(ascIdSort),geometryId=this._availableInstanceIds.shift(),this._instanceInfo[geometryId]=instanceInfo):(geometryId=this._instanceInfo.length,this._instanceInfo.push(instanceInfo));instanceInfo=this._matricesTexture;_matrix$1.identity().toArray(instanceInfo.image.data,16*geometryId);instanceInfo.needsUpdate=!0;if(instanceInfo=this._colorsTexture)_whiteColor.toArray(instanceInfo.image.data,4*geometryId),instanceInfo.needsUpdate=
!0;this._visibilityChanged=!0;return geometryId};BatchedMesh.prototype.addGeometry=function(geometry,reservedVertexCount,reservedIndexCount){reservedVertexCount=void 0===reservedVertexCount?-1:reservedVertexCount;reservedIndexCount=void 0===reservedIndexCount?-1:reservedIndexCount;this._initializeGeometry(geometry);this._validateGeometry(geometry);var geometryInfo={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,
boundingSphere:null,active:!0},geometryInfoList=this._geometryInfo;geometryInfo.vertexStart=this._nextVertexStart;geometryInfo.reservedVertexCount=-1===reservedVertexCount?geometry.getAttribute("position").count:reservedVertexCount;reservedVertexCount=geometry.getIndex();null!==reservedVertexCount&&(geometryInfo.indexStart=this._nextIndexStart,geometryInfo.reservedIndexCount=-1===reservedIndexCount?reservedVertexCount.count:reservedIndexCount);if(-1!==geometryInfo.indexStart&&geometryInfo.indexStart+
geometryInfo.reservedIndexCount>this._maxIndexCount||geometryInfo.vertexStart+geometryInfo.reservedVertexCount>this._maxVertexCount)throw Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");0<this._availableGeometryIds.length?(this._availableGeometryIds.sort(ascIdSort),reservedIndexCount=this._availableGeometryIds.shift(),geometryInfoList[reservedIndexCount]=geometryInfo):(reservedIndexCount=this._geometryCount,this._geometryCount++,geometryInfoList.push(geometryInfo));
this.setGeometryAt(reservedIndexCount,geometry);this._nextIndexStart=geometryInfo.indexStart+geometryInfo.reservedIndexCount;this._nextVertexStart=geometryInfo.vertexStart+geometryInfo.reservedVertexCount;return reservedIndexCount};BatchedMesh.prototype.setGeometryAt=function(geometryId,geometry){if(geometryId>=this._geometryCount)throw Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(geometry);var batchGeometry=this.geometry,hasIndex=null!==batchGeometry.getIndex(),
dstIndex=batchGeometry.getIndex(),srcIndex=geometry.getIndex(),geometryInfo=this._geometryInfo[geometryId];if(hasIndex&&srcIndex.count>geometryInfo.reservedIndexCount||geometry.attributes.position.count>geometryInfo.reservedVertexCount)throw Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");var vertexStart=geometryInfo.vertexStart,reservedVertexCount=geometryInfo.reservedVertexCount;geometryInfo.vertexCount=geometry.getAttribute("position").count;for(var attributeName in batchGeometry.attributes){var srcAttribute=
geometry.getAttribute(attributeName),dstAttribute=batchGeometry.getAttribute(attributeName),targetOffset=vertexStart;targetOffset=void 0===targetOffset?0:targetOffset;var itemSize=dstAttribute.itemSize;if(srcAttribute.isInterleavedBufferAttribute||srcAttribute.array.constructor!==dstAttribute.array.constructor)for(var vertexCount=srcAttribute.count,i=0;i<vertexCount;i++)for(var c=0;c<itemSize;c++)dstAttribute.setComponent(i+targetOffset,c,srcAttribute.getComponent(i,c));else dstAttribute.array.set(srcAttribute.array,
targetOffset*itemSize);dstAttribute.needsUpdate=!0;targetOffset=srcAttribute.itemSize;srcAttribute=srcAttribute.count;for(itemSize=reservedVertexCount;srcAttribute<itemSize;srcAttribute++)for(vertexCount=vertexStart+srcAttribute,i=0;i<targetOffset;i++)dstAttribute.setComponent(vertexCount,i,0);dstAttribute.needsUpdate=!0;dstAttribute.addUpdateRange(vertexStart*targetOffset,reservedVertexCount*targetOffset)}if(hasIndex){batchGeometry=geometryInfo.indexStart;reservedVertexCount=geometryInfo.reservedIndexCount;
geometryInfo.indexCount=geometry.getIndex().count;for(attributeName=0;attributeName<srcIndex.count;attributeName++)dstIndex.setX(batchGeometry+attributeName,vertexStart+srcIndex.getX(attributeName));for(srcIndex=srcIndex.count;srcIndex<reservedVertexCount;srcIndex++)dstIndex.setX(batchGeometry+srcIndex,vertexStart);dstIndex.needsUpdate=!0;dstIndex.addUpdateRange(batchGeometry,geometryInfo.reservedIndexCount)}geometryInfo.start=hasIndex?geometryInfo.indexStart:geometryInfo.vertexStart;geometryInfo.count=
hasIndex?geometryInfo.indexCount:geometryInfo.vertexCount;geometryInfo.boundingBox=null;null!==geometry.boundingBox&&(geometryInfo.boundingBox=geometry.boundingBox.clone());geometryInfo.boundingSphere=null;null!==geometry.boundingSphere&&(geometryInfo.boundingSphere=geometry.boundingSphere.clone());this._visibilityChanged=!0;return geometryId};BatchedMesh.prototype.deleteGeometry=function(geometryId){var geometryInfoList=this._geometryInfo;if(geometryId>=geometryInfoList.length||!1===geometryInfoList[geometryId].active)return this;
for(var instanceInfo=this._instanceInfo,i=0,l=instanceInfo.length;i<l;i++)instanceInfo[i].active&&instanceInfo[i].geometryIndex===geometryId&&this.deleteInstance(i);geometryInfoList[geometryId].active=!1;this._availableGeometryIds.push(geometryId);this._visibilityChanged=!0;return this};BatchedMesh.prototype.deleteInstance=function(instanceId){this.validateInstanceId(instanceId);this._instanceInfo[instanceId].active=!1;this._availableInstanceIds.push(instanceId);this._visibilityChanged=!0;return this};
BatchedMesh.prototype.optimize=function(){for(var nextVertexStart=0,nextIndexStart=0,geometryInfoList=this._geometryInfo,indices=geometryInfoList.map(function(e,i){return i}).sort(function(a,b){return geometryInfoList[a].vertexStart-geometryInfoList[b].vertexStart}),geometry=this.geometry,i$jscomp$0=0,l=geometryInfoList.length;i$jscomp$0<l;i$jscomp$0++){var geometryInfo=geometryInfoList[indices[i$jscomp$0]];if(!1!==geometryInfo.active){if(null!==geometry.index){if(geometryInfo.indexStart!==nextIndexStart){var $jscomp$destructuring$var4=
geometryInfo,indexStart=$jscomp$destructuring$var4.indexStart,reservedIndexCount=$jscomp$destructuring$var4.reservedIndexCount,index$115=geometry.index,array=index$115.array;$jscomp$destructuring$var4=nextVertexStart-$jscomp$destructuring$var4.vertexStart;for(var j=indexStart;j<indexStart+reservedIndexCount;j++)array[j]+=$jscomp$destructuring$var4;index$115.array.copyWithin(nextIndexStart,indexStart,indexStart+reservedIndexCount);index$115.addUpdateRange(nextIndexStart,reservedIndexCount);geometryInfo.indexStart=
nextIndexStart}nextIndexStart+=geometryInfo.reservedIndexCount}if(geometryInfo.vertexStart!==nextVertexStart){reservedIndexCount=geometryInfo;indexStart=reservedIndexCount.vertexStart;reservedIndexCount=reservedIndexCount.reservedVertexCount;index$115=geometry.attributes;for(var key in index$115)$jscomp$destructuring$var4=array=index$115[key],j=$jscomp$destructuring$var4.itemSize,$jscomp$destructuring$var4.array.copyWithin(nextVertexStart*j,indexStart*j,(indexStart+reservedIndexCount)*j),array.addUpdateRange(nextVertexStart*
j,reservedIndexCount*j);geometryInfo.vertexStart=nextVertexStart}nextVertexStart+=geometryInfo.reservedVertexCount;geometryInfo.start=geometry.index?geometryInfo.indexStart:geometryInfo.vertexStart;this._nextIndexStart=geometry.index?geometryInfo.indexStart+geometryInfo.reservedIndexCount:0;this._nextVertexStart=geometryInfo.vertexStart+geometryInfo.reservedVertexCount}}return this};BatchedMesh.prototype.getBoundingBoxAt=function(geometryId,target){if(geometryId>=this._geometryCount)return null;var geometry=
this.geometry;geometryId=this._geometryInfo[geometryId];if(null===geometryId.boundingBox){var box=new Box3,index=geometry.index;geometry=geometry.attributes.position;for(var i=geometryId.start,l=geometryId.start+geometryId.count;i<l;i++){var iv=i;index&&(iv=index.getX(iv));box.expandByPoint(_vector$5.fromBufferAttribute(geometry,iv))}geometryId.boundingBox=box}target.copy(geometryId.boundingBox);return target};BatchedMesh.prototype.getBoundingSphereAt=function(geometryId,target){if(geometryId>=this._geometryCount)return null;
var geometry=this.geometry,geometryInfo=this._geometryInfo[geometryId];if(null===geometryInfo.boundingSphere){var sphere=new Sphere;this.getBoundingBoxAt(geometryId,_box$1);_box$1.getCenter(sphere.center);geometryId=geometry.index;geometry=geometry.attributes.position;for(var maxRadiusSq=0,i=geometryInfo.start,l=geometryInfo.start+geometryInfo.count;i<l;i++){var iv=i;geometryId&&(iv=geometryId.getX(iv));_vector$5.fromBufferAttribute(geometry,iv);maxRadiusSq=Math.max(maxRadiusSq,sphere.center.distanceToSquared(_vector$5))}sphere.radius=
Math.sqrt(maxRadiusSq);geometryInfo.boundingSphere=sphere}target.copy(geometryInfo.boundingSphere);return target};BatchedMesh.prototype.setMatrixAt=function(instanceId,matrix){this.validateInstanceId(instanceId);var matricesTexture=this._matricesTexture;matrix.toArray(this._matricesTexture.image.data,16*instanceId);matricesTexture.needsUpdate=!0;return this};BatchedMesh.prototype.getMatrixAt=function(instanceId,matrix){this.validateInstanceId(instanceId);return matrix.fromArray(this._matricesTexture.image.data,
16*instanceId)};BatchedMesh.prototype.setColorAt=function(instanceId,color){this.validateInstanceId(instanceId);null===this._colorsTexture&&this._initColorsTexture();color.toArray(this._colorsTexture.image.data,4*instanceId);this._colorsTexture.needsUpdate=!0;return this};BatchedMesh.prototype.getColorAt=function(instanceId,color){this.validateInstanceId(instanceId);return color.fromArray(this._colorsTexture.image.data,4*instanceId)};BatchedMesh.prototype.setVisibleAt=function(instanceId,visible){this.validateInstanceId(instanceId);
if(this._instanceInfo[instanceId].visible===visible)return this;this._instanceInfo[instanceId].visible=visible;this._visibilityChanged=!0;return this};BatchedMesh.prototype.getVisibleAt=function(instanceId){this.validateInstanceId(instanceId);return this._instanceInfo[instanceId].visible};BatchedMesh.prototype.setGeometryIdAt=function(instanceId,geometryId){this.validateInstanceId(instanceId);this.validateGeometryId(geometryId);this._instanceInfo[instanceId].geometryIndex=geometryId;return this};
BatchedMesh.prototype.getGeometryIdAt=function(instanceId){this.validateInstanceId(instanceId);return this._instanceInfo[instanceId].geometryIndex};BatchedMesh.prototype.getGeometryRangeAt=function(geometryId,target){target=void 0===target?{}:target;this.validateGeometryId(geometryId);geometryId=this._geometryInfo[geometryId];target.vertexStart=geometryId.vertexStart;target.vertexCount=geometryId.vertexCount;target.reservedVertexCount=geometryId.reservedVertexCount;target.indexStart=geometryId.indexStart;
target.indexCount=geometryId.indexCount;target.reservedIndexCount=geometryId.reservedIndexCount;target.start=geometryId.start;target.count=geometryId.count;return target};BatchedMesh.prototype.setInstanceCount=function(maxInstanceCount){var availableInstanceIds=this._availableInstanceIds,instanceInfo=this._instanceInfo;for(availableInstanceIds.sort(ascIdSort);availableInstanceIds[availableInstanceIds.length-1]===instanceInfo.length-1;)instanceInfo.pop(),availableInstanceIds.pop();if(maxInstanceCount<
instanceInfo.length)throw Error("BatchedMesh: Instance ids outside the range "+maxInstanceCount+" are being used. Cannot shrink instance count.");availableInstanceIds=new Int32Array(maxInstanceCount);instanceInfo=new Int32Array(maxInstanceCount);copyArrayContents(this._multiDrawCounts,availableInstanceIds);copyArrayContents(this._multiDrawStarts,instanceInfo);this._multiDrawCounts=availableInstanceIds;this._multiDrawStarts=instanceInfo;this._maxInstanceCount=maxInstanceCount;maxInstanceCount=this._indirectTexture;
availableInstanceIds=this._matricesTexture;instanceInfo=this._colorsTexture;maxInstanceCount.dispose();this._initIndirectTexture();copyArrayContents(maxInstanceCount.image.data,this._indirectTexture.image.data);availableInstanceIds.dispose();this._initMatricesTexture();copyArrayContents(availableInstanceIds.image.data,this._matricesTexture.image.data);instanceInfo&&(instanceInfo.dispose(),this._initColorsTexture(),copyArrayContents(instanceInfo.image.data,this._colorsTexture.image.data))};BatchedMesh.prototype.setGeometrySize=
function(maxVertexCount,maxIndexCount){var validRanges=[].concat($jscomp.arrayFromIterable(this._geometryInfo)).filter(function(info){return info.active});if(Math.max.apply(Math,$jscomp.arrayFromIterable(validRanges.map(function(range){return range.vertexStart+range.reservedVertexCount})))>maxVertexCount)throw Error("BatchedMesh: Geometry vertex values are being used outside the range "+maxIndexCount+". Cannot shrink further.");if(this.geometry.index&&Math.max.apply(Math,$jscomp.arrayFromIterable(validRanges.map(function(range){return range.indexStart+
range.reservedIndexCount})))>maxIndexCount)throw Error("BatchedMesh: Geometry index values are being used outside the range "+maxIndexCount+". Cannot shrink further.");validRanges=this.geometry;validRanges.dispose();this._maxVertexCount=maxVertexCount;this._maxIndexCount=maxIndexCount;this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new BufferGeometry,this._initializeGeometry(validRanges));maxVertexCount=this.geometry;validRanges.index&&copyArrayContents(validRanges.index.array,
maxVertexCount.index.array);for(var key in validRanges.attributes)copyArrayContents(validRanges.attributes[key].array,maxVertexCount.attributes[key].array)};BatchedMesh.prototype.raycast=function(raycaster,intersects){var instanceInfo=this._instanceInfo,geometryInfoList=this._geometryInfo,matrixWorld=this.matrixWorld,batchGeometry=this.geometry;_mesh.material=this.material;_mesh.geometry.index=batchGeometry.index;_mesh.geometry.attributes=batchGeometry.attributes;null===_mesh.geometry.boundingBox&&
(_mesh.geometry.boundingBox=new Box3);null===_mesh.geometry.boundingSphere&&(_mesh.geometry.boundingSphere=new Sphere);batchGeometry=0;for(var l=instanceInfo.length;batchGeometry<l;batchGeometry++)if(instanceInfo[batchGeometry].visible&&instanceInfo[batchGeometry].active){var geometryId=instanceInfo[batchGeometry].geometryIndex,geometryInfo=geometryInfoList[geometryId];_mesh.geometry.setDrawRange(geometryInfo.start,geometryInfo.count);this.getMatrixAt(batchGeometry,_mesh.matrixWorld).premultiply(matrixWorld);
this.getBoundingBoxAt(geometryId,_mesh.geometry.boundingBox);this.getBoundingSphereAt(geometryId,_mesh.geometry.boundingSphere);_mesh.raycast(raycaster,_batchIntersects);geometryId=0;for(geometryInfo=_batchIntersects.length;geometryId<geometryInfo;geometryId++){var intersect$119=_batchIntersects[geometryId];intersect$119.object=this;intersect$119.batchId=batchGeometry;intersects.push(intersect$119)}_batchIntersects.length=0}_mesh.material=null;_mesh.geometry.index=null;_mesh.geometry.attributes={};
_mesh.geometry.setDrawRange(0,Infinity)};BatchedMesh.prototype.copy=function(source){Mesh.prototype.copy.call(this,source);this.geometry=source.geometry.clone();this.perObjectFrustumCulled=source.perObjectFrustumCulled;this.sortObjects=source.sortObjects;this.boundingBox=null!==source.boundingBox?source.boundingBox.clone():null;this.boundingSphere=null!==source.boundingSphere?source.boundingSphere.clone():null;this._geometryInfo=source._geometryInfo.map(function(info){return Object.assign({},info,
{boundingBox:null!==info.boundingBox?info.boundingBox.clone():null,boundingSphere:null!==info.boundingSphere?info.boundingSphere.clone():null})});this._instanceInfo=source._instanceInfo.map(function(info){return Object.assign({},info)});this._availableInstanceIds=source._availableInstanceIds.slice();this._availableGeometryIds=source._availableGeometryIds.slice();this._nextIndexStart=source._nextIndexStart;this._nextVertexStart=source._nextVertexStart;this._geometryCount=source._geometryCount;this._maxInstanceCount=
source._maxInstanceCount;this._maxVertexCount=source._maxVertexCount;this._maxIndexCount=source._maxIndexCount;this._geometryInitialized=source._geometryInitialized;this._multiDrawCounts=source._multiDrawCounts.slice();this._multiDrawStarts=source._multiDrawStarts.slice();this._indirectTexture=source._indirectTexture.clone();this._indirectTexture.image.data=this._indirectTexture.image.data.slice();this._matricesTexture=source._matricesTexture.clone();this._matricesTexture.image.data=this._matricesTexture.image.data.slice();
null!==this._colorsTexture&&(this._colorsTexture=source._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice());return this};BatchedMesh.prototype.dispose=function(){this.geometry.dispose();this._matricesTexture.dispose();this._matricesTexture=null;this._indirectTexture.dispose();this._indirectTexture=null;null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null)};BatchedMesh.prototype.onBeforeRender=function(renderer,scene,camera,geometry,
material){if(this._visibilityChanged||this.perObjectFrustumCulled||this.sortObjects){renderer=geometry.getIndex();renderer=null===renderer?1:renderer.array.BYTES_PER_ELEMENT;var instanceInfo=this._instanceInfo;scene=this._multiDrawStarts;geometry=this._multiDrawCounts;var geometryInfoList=this._geometryInfo,perObjectFrustumCulled=this.perObjectFrustumCulled,indirectTexture=this._indirectTexture,indirectArray=indirectTexture.image.data,frustum=camera.isArrayCamera?_frustumArray:_frustum;perObjectFrustumCulled&&
!camera.isArrayCamera&&(_matrix$1.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse).multiply(this.matrixWorld),_frustum.setFromProjectionMatrix(_matrix$1,camera.coordinateSystem,camera.reversedDepth));var multiDrawCount=0;if(this.sortObjects){_matrix$1.copy(this.matrixWorld).invert();_vector$5.setFromMatrixPosition(camera.matrixWorld).applyMatrix4(_matrix$1);_forward$1.set(0,0,-1).transformDirection(camera.matrixWorld).transformDirection(_matrix$1);for(var i=0,l=instanceInfo.length;i<
l;i++)if(instanceInfo[i].visible&&instanceInfo[i].active){var geometryId=instanceInfo[i].geometryIndex;this.getMatrixAt(i,_matrix$1);this.getBoundingSphereAt(geometryId,_sphere$2).applyMatrix4(_matrix$1);var culled=!1;perObjectFrustumCulled&&(culled=!frustum.intersectsSphere(_sphere$2,camera));culled||(geometryId=geometryInfoList[geometryId],culled=_temp.subVectors(_sphere$2.center,_vector$5).dot(_forward$1),_renderList.push(geometryId.start,geometryId.count,culled,i))}instanceInfo=_renderList.list;
geometryInfoList=this.customSort;null===geometryInfoList?instanceInfo.sort(material.transparent?sortTransparent:sortOpaque):geometryInfoList.call(this,instanceInfo,camera);camera=0;for(material=instanceInfo.length;camera<material;camera++)geometryInfoList=instanceInfo[camera],scene[multiDrawCount]=geometryInfoList.start*renderer,geometry[multiDrawCount]=geometryInfoList.count,indirectArray[multiDrawCount]=geometryInfoList.index,multiDrawCount++;_renderList.reset()}else for(material=0,i=instanceInfo.length;material<
i;material++)instanceInfo[material].visible&&instanceInfo[material].active&&(l=instanceInfo[material].geometryIndex,geometryId=!1,perObjectFrustumCulled&&(this.getMatrixAt(material,_matrix$1),this.getBoundingSphereAt(l,_sphere$2).applyMatrix4(_matrix$1),geometryId=!frustum.intersectsSphere(_sphere$2,camera)),geometryId||(l=geometryInfoList[l],scene[multiDrawCount]=l.start*renderer,geometry[multiDrawCount]=l.count,indirectArray[multiDrawCount]=material,multiDrawCount++));indirectTexture.needsUpdate=
!0;this._multiDrawCount=multiDrawCount;this._visibilityChanged=!1}};BatchedMesh.prototype.onBeforeShadow=function(renderer,object,camera,shadowCamera,geometry,depthMaterial){this.onBeforeRender(renderer,null,shadowCamera,geometry,depthMaterial)};$jscomp.global.Object.defineProperties(BatchedMesh.prototype,{maxInstanceCount:{configurable:!0,enumerable:!0,get:function(){return this._maxInstanceCount}},instanceCount:{configurable:!0,enumerable:!0,get:function(){return this._instanceInfo.length-this._availableInstanceIds.length}},
unusedVertexCount:{configurable:!0,enumerable:!0,get:function(){return this._maxVertexCount-this._nextVertexStart}},unusedIndexCount:{configurable:!0,enumerable:!0,get:function(){return this._maxIndexCount-this._nextIndexStart}}});var LineBasicMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isLineBasicMaterial=!0;$jscomp$super$this.type="LineBasicMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.map=null;$jscomp$super$this.linewidth=
1;$jscomp$super$this.linecap="round";$jscomp$super$this.linejoin="round";$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(LineBasicMaterial,Material);LineBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.fog=source.fog;return this};var _vStart=new Vector3,
_vEnd=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$1=new Sphere,_intersectPointOnRay=new Vector3,_intersectPointOnSegment=new Vector3,Line=function(geometry,material){geometry=void 0===geometry?new BufferGeometry:geometry;material=void 0===material?new LineBasicMaterial:material;var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isLine=!0;$jscomp$super$this.type="Line";$jscomp$super$this.geometry=geometry;$jscomp$super$this.material=material;$jscomp$super$this.morphTargetDictionary=
void 0;$jscomp$super$this.morphTargetInfluences=void 0;$jscomp$super$this.updateMorphTargets();return $jscomp$super$this};$jscomp.inherits(Line,Object3D);Line.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.material=Array.isArray(source.material)?source.material.slice():source.material;this.geometry=source.geometry;return this};Line.prototype.computeLineDistances=function(){var geometry=this.geometry;if(null===geometry.index){for(var positionAttribute=
geometry.attributes.position,lineDistances=[0],i=1,l=positionAttribute.count;i<l;i++)_vStart.fromBufferAttribute(positionAttribute,i-1),_vEnd.fromBufferAttribute(positionAttribute,i),lineDistances[i]=lineDistances[i-1],lineDistances[i]+=_vStart.distanceTo(_vEnd);geometry.setAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this};Line.prototype.raycast=function(raycaster,
intersects){var geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Line.threshold,drawRange=geometry.drawRange;null===geometry.boundingSphere&&geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere);_sphere$1.applyMatrix4(matrixWorld);_sphere$1.radius+=threshold;if(!1!==raycaster.ray.intersectsSphere(_sphere$1)){_inverseMatrix$1.copy(matrixWorld).invert();_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);matrixWorld=threshold/((this.scale.x+this.scale.y+
this.scale.z)/3);matrixWorld*=matrixWorld;threshold=this.isLineSegments?2:1;var index=geometry.index;geometry=geometry.attributes.position;if(null!==index){geometry=Math.max(0,drawRange.start);drawRange=Math.min(index.count,drawRange.start+drawRange.count);for(var i=geometry,l=drawRange-1;i<l;i+=threshold){var a=index.getX(i),b=index.getX(i+1);(a=checkIntersection(this,raycaster,_ray$1,matrixWorld,a,b,i))&&intersects.push(a)}this.isLineLoop&&(threshold=index.getX(drawRange-1),index=index.getX(geometry),
(raycaster=checkIntersection(this,raycaster,_ray$1,matrixWorld,threshold,index,drawRange-1))&&intersects.push(raycaster))}else{index=Math.max(0,drawRange.start);geometry=Math.min(geometry.count,drawRange.start+drawRange.count);drawRange=index;for(i=geometry-1;drawRange<i;drawRange+=threshold)(l=checkIntersection(this,raycaster,_ray$1,matrixWorld,drawRange,drawRange+1,drawRange))&&intersects.push(l);this.isLineLoop&&(raycaster=checkIntersection(this,raycaster,_ray$1,matrixWorld,geometry-1,index,geometry-
1))&&intersects.push(raycaster)}}};Line.prototype.updateMorphTargets=function(){var morphAttributes=this.geometry.morphAttributes,keys=Object.keys(morphAttributes);if(0<keys.length&&(morphAttributes=morphAttributes[keys[0]],void 0!==morphAttributes)){this.morphTargetInfluences=[];this.morphTargetDictionary={};keys=0;for(var ml=morphAttributes.length;keys<ml;keys++){var name=morphAttributes[keys].name||String(keys);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=keys}}};var _start=
new Vector3,_end=new Vector3,LineSegments=function(geometry,material){geometry=Line.call(this,geometry,material)||this;geometry.isLineSegments=!0;geometry.type="LineSegments";return geometry};$jscomp.inherits(LineSegments,Line);LineSegments.prototype.computeLineDistances=function(){var geometry=this.geometry;if(null===geometry.index){for(var positionAttribute=geometry.attributes.position,lineDistances=[],i=0,l=positionAttribute.count;i<l;i+=2)_start.fromBufferAttribute(positionAttribute,i),_end.fromBufferAttribute(positionAttribute,
i+1),lineDistances[i]=0===i?0:lineDistances[i-1],lineDistances[i+1]=lineDistances[i]+_start.distanceTo(_end);geometry.setAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this};var LineLoop=function(geometry,material){geometry=Line.call(this,geometry,material)||this;geometry.isLineLoop=!0;geometry.type="LineLoop";return geometry};$jscomp.inherits(LineLoop,
Line);var PointsMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isPointsMaterial=!0;$jscomp$super$this.type="PointsMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.map=null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.size=1;$jscomp$super$this.sizeAttenuation=!0;$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(PointsMaterial,Material);PointsMaterial.prototype.copy=
function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.fog=source.fog;return this};var _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_position$2=new Vector3,Points=function(geometry,material){geometry=void 0===geometry?new BufferGeometry:geometry;material=void 0===material?new PointsMaterial:material;var $jscomp$super$this=Object3D.call(this)||
this;$jscomp$super$this.isPoints=!0;$jscomp$super$this.type="Points";$jscomp$super$this.geometry=geometry;$jscomp$super$this.material=material;$jscomp$super$this.morphTargetDictionary=void 0;$jscomp$super$this.morphTargetInfluences=void 0;$jscomp$super$this.updateMorphTargets();return $jscomp$super$this};$jscomp.inherits(Points,Object3D);Points.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.material=Array.isArray(source.material)?source.material.slice():
source.material;this.geometry=source.geometry;return this};Points.prototype.raycast=function(raycaster,intersects){var geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Points.threshold,drawRange=geometry.drawRange;null===geometry.boundingSphere&&geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);_sphere.radius+=threshold;if(!1!==raycaster.ray.intersectsSphere(_sphere)){_inverseMatrix.copy(matrixWorld).invert();_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);
threshold/=(this.scale.x+this.scale.y+this.scale.z)/3;threshold*=threshold;var index=geometry.index;geometry=geometry.attributes.position;if(null!==index){var i=Math.max(0,drawRange.start);for(drawRange=Math.min(index.count,drawRange.start+drawRange.count);i<drawRange;i++){var a=index.getX(i);_position$2.fromBufferAttribute(geometry,a);testPoint(_position$2,a,threshold,matrixWorld,raycaster,intersects,this)}}else for(index=Math.max(0,drawRange.start),drawRange=Math.min(geometry.count,drawRange.start+
drawRange.count);index<drawRange;index++)_position$2.fromBufferAttribute(geometry,index),testPoint(_position$2,index,threshold,matrixWorld,raycaster,intersects,this)}};Points.prototype.updateMorphTargets=function(){var morphAttributes=this.geometry.morphAttributes,keys=Object.keys(morphAttributes);if(0<keys.length&&(morphAttributes=morphAttributes[keys[0]],void 0!==morphAttributes)){this.morphTargetInfluences=[];this.morphTargetDictionary={};keys=0;for(var ml=morphAttributes.length;keys<ml;keys++){var name=
morphAttributes[keys].name||String(keys);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=keys}}};var VideoTexture=function(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){function updateVideo(){scope.needsUpdate=!0;scope._requestVideoFrameCallbackId=video.requestVideoFrameCallback(updateVideo)}mapping=Texture.call(this,video,mapping,wrapS,wrapT,void 0===magFilter?1006:magFilter,void 0===minFilter?1006:minFilter,format,type,anisotropy)||this;mapping.isVideoTexture=
!0;mapping.generateMipmaps=!1;mapping._requestVideoFrameCallbackId=0;var scope=mapping;"requestVideoFrameCallback"in video&&(mapping._requestVideoFrameCallbackId=video.requestVideoFrameCallback(updateVideo));return mapping};$jscomp.inherits(VideoTexture,Texture);VideoTexture.prototype.clone=function(){return(new this.constructor(this.image)).copy(this)};VideoTexture.prototype.update=function(){var video=this.image;!1==="requestVideoFrameCallback"in video&&video.readyState>=video.HAVE_CURRENT_DATA&&
(this.needsUpdate=!0)};VideoTexture.prototype.dispose=function(){0!==this._requestVideoFrameCallbackId&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId);Texture.prototype.dispose.call(this)};var VideoFrameTexture=function(mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){mapping=VideoTexture.call(this,{},mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy)||this;mapping.isVideoFrameTexture=!0;return mapping};$jscomp.inherits(VideoFrameTexture,VideoTexture);
VideoFrameTexture.prototype.update=function(){};VideoFrameTexture.prototype.clone=function(){return(new this.constructor).copy(this)};VideoFrameTexture.prototype.setFrame=function(frame){this.image=frame;this.needsUpdate=!0};var FramebufferTexture=function(width,height){width=Texture.call(this,{width:width,height:height})||this;width.isFramebufferTexture=!0;width.magFilter=1003;width.minFilter=1003;width.generateMipmaps=!1;width.needsUpdate=!0;return width};$jscomp.inherits(FramebufferTexture,Texture);
var CompressedTexture=function(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,colorSpace){format=Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,colorSpace)||this;format.isCompressedTexture=!0;format.image={width:width,height:height};format.mipmaps=mipmaps;format.flipY=!1;format.generateMipmaps=!1;return format};$jscomp.inherits(CompressedTexture,Texture);var CompressedArrayTexture=function(mipmaps,width,height,depth,format,
type){mipmaps=CompressedTexture.call(this,mipmaps,width,height,format,type)||this;mipmaps.isCompressedArrayTexture=!0;mipmaps.image.depth=depth;mipmaps.wrapR=1001;mipmaps.layerUpdates=new Set;return mipmaps};$jscomp.inherits(CompressedArrayTexture,CompressedTexture);CompressedArrayTexture.prototype.addLayerUpdate=function(layerIndex){this.layerUpdates.add(layerIndex)};CompressedArrayTexture.prototype.clearLayerUpdates=function(){this.layerUpdates.clear()};var CompressedCubeTexture=function(images,
format,type){format=CompressedTexture.call(this,void 0,images[0].width,images[0].height,format,type,301)||this;format.isCompressedCubeTexture=!0;format.isCubeTexture=!0;format.image=images;return format};$jscomp.inherits(CompressedCubeTexture,CompressedTexture);var CanvasTexture=function(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){canvas=Texture.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy)||this;canvas.isCanvasTexture=!0;canvas.needsUpdate=
!0;return canvas};$jscomp.inherits(CanvasTexture,Texture);var DepthTexture=function(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format,depth){format=void 0===format?1026:format;if(1026!==format&&1027!==format)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");width=Texture.call(this,{width:width,height:height,depth:void 0===depth?1:depth},mapping,wrapS,wrapT,void 0===magFilter?1003:magFilter,void 0===minFilter?1003:minFilter,format,
void 0===type?1014:type,anisotropy)||this;width.isDepthTexture=!0;width.flipY=!1;width.generateMipmaps=!1;width.compareFunction=null;return width};$jscomp.inherits(DepthTexture,Texture);DepthTexture.prototype.copy=function(source){Texture.prototype.copy.call(this,source);this.source=new Source(Object.assign({},source.image));this.compareFunction=source.compareFunction;return this};DepthTexture.prototype.toJSON=function(meta){meta=Texture.prototype.toJSON.call(this,meta);null!==this.compareFunction&&
(meta.compareFunction=this.compareFunction);return meta};var ExternalTexture=function(sourceTexture){sourceTexture=void 0===sourceTexture?null:sourceTexture;var $jscomp$super$this=Texture.call(this)||this;$jscomp$super$this.sourceTexture=sourceTexture;$jscomp$super$this.isExternalTexture=!0;return $jscomp$super$this};$jscomp.inherits(ExternalTexture,Texture);ExternalTexture.prototype.copy=function(source){Texture.prototype.copy.call(this,source);this.sourceTexture=source.sourceTexture;return this};
var CapsuleGeometry=function(radius,height,capSegments,radialSegments,heightSegments){radius=void 0===radius?1:radius;height=void 0===height?1:height;capSegments=void 0===capSegments?4:capSegments;radialSegments=void 0===radialSegments?8:radialSegments;heightSegments=void 0===heightSegments?1:heightSegments;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="CapsuleGeometry";$jscomp$super$this.parameters={radius:radius,height:height,capSegments:capSegments,radialSegments:radialSegments,
heightSegments:heightSegments};height=Math.max(0,height);capSegments=Math.max(1,Math.floor(capSegments));radialSegments=Math.max(3,Math.floor(radialSegments));heightSegments=Math.max(1,Math.floor(heightSegments));for(var indices=[],vertices=[],normals=[],uvs=[],halfHeight=height/2,capArcLength=Math.PI/2*radius,cylinderPartLength=height,totalArcLength=2*capArcLength+cylinderPartLength,numVerticalSegments=2*capSegments+heightSegments,verticesPerRow=radialSegments+1,normal=new Vector3,vertex=new Vector3,
iy=0;iy<=numVerticalSegments;iy++){if(iy<=capSegments){var currentArcLength=iy/capSegments;var normalYComponent=currentArcLength*Math.PI/2;var profileY=-halfHeight-radius*Math.cos(normalYComponent);var profileRadius=radius*Math.sin(normalYComponent);normalYComponent=-radius*Math.cos(normalYComponent);currentArcLength*=capArcLength}else iy<=capSegments+heightSegments?(currentArcLength=(iy-capSegments)/heightSegments,profileY=-halfHeight+currentArcLength*height,profileRadius=radius,normalYComponent=
0,currentArcLength=capArcLength+currentArcLength*cylinderPartLength):(currentArcLength=(iy-capSegments-heightSegments)/capSegments,normalYComponent=currentArcLength*Math.PI/2,profileY=halfHeight+radius*Math.sin(normalYComponent),profileRadius=radius*Math.cos(normalYComponent),normalYComponent=radius*Math.sin(normalYComponent),currentArcLength=capArcLength+cylinderPartLength+currentArcLength*capArcLength);currentArcLength=Math.max(0,Math.min(1,currentArcLength/totalArcLength));var uOffset=0;0===iy?
uOffset=.5/radialSegments:iy===numVerticalSegments&&(uOffset=-.5/radialSegments);for(var ix=0;ix<=radialSegments;ix++){var u=ix/radialSegments,theta=u*Math.PI*2,sinTheta=Math.sin(theta);theta=Math.cos(theta);vertex.x=-profileRadius*theta;vertex.y=profileY;vertex.z=profileRadius*sinTheta;vertices.push(vertex.x,vertex.y,vertex.z);normal.set(-profileRadius*theta,normalYComponent,profileRadius*sinTheta);normal.normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u+uOffset,currentArcLength)}if(0<
iy)for(profileY=(iy-1)*verticesPerRow,profileRadius=0;profileRadius<radialSegments;profileRadius++)normalYComponent=profileY+profileRadius+1,currentArcLength=iy*verticesPerRow+profileRadius,uOffset=iy*verticesPerRow+profileRadius+1,indices.push(profileY+profileRadius,normalYComponent,currentArcLength),indices.push(normalYComponent,uOffset,currentArcLength)}$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",
new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(CapsuleGeometry,BufferGeometry);CapsuleGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};CapsuleGeometry.fromJSON=function(data){return new CapsuleGeometry(data.radius,data.height,data.capSegments,data.radialSegments,data.heightSegments)};var CircleGeometry=
function(radius,segments,thetaStart,thetaLength){radius=void 0===radius?1:radius;segments=void 0===segments?32:segments;thetaStart=void 0===thetaStart?0:thetaStart;thetaLength=void 0===thetaLength?2*Math.PI:thetaLength;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="CircleGeometry";$jscomp$super$this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};segments=Math.max(3,segments);var indices=[],vertices=[],normals=[],uvs=[],vertex=
new Vector3,uv=new Vector2;vertices.push(0,0,0);normals.push(0,0,1);uvs.push(.5,.5);for(var s=0,i=3;s<=segments;s++,i+=3){var segment=thetaStart+s/segments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,0,1);uv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y)}for(radius=1;radius<=segments;radius++)indices.push(radius,radius+1,0);$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",
new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(CircleGeometry,BufferGeometry);CircleGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};CircleGeometry.fromJSON=function(data){return new CircleGeometry(data.radius,
data.segments,data.thetaStart,data.thetaLength)};var CylinderGeometry=function(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){function generateCap(top){for(var centerIndexStart=index,uv=new Vector2,vertex=new Vector3,groupCount=0,radius=!0===top?radiusTop:radiusBottom,sign=!0===top?1:-1,x=1;x<=radialSegments;x++)vertices.push(0,halfHeight*sign,0),normals.push(0,sign,0),uvs.push(.5,.5),index++;x=index;for(var x$147=0;x$147<=radialSegments;x$147++){var theta=
x$147/radialSegments*thetaLength+thetaStart,cosTheta=Math.cos(theta);theta=Math.sin(theta);vertex.x=radius*theta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,sign,0);uv.x=.5*cosTheta+.5;uv.y=.5*theta*sign+.5;uvs.push(uv.x,uv.y);index++}for(uv=0;uv<radialSegments;uv++)vertex=centerIndexStart+uv,radius=x+uv,!0===top?indices.push(radius,radius+1,vertex):indices.push(radius+1,radius,vertex),groupCount+=3;scope.addGroup(groupStart,groupCount,
!0===top?1:2);groupStart+=groupCount}radiusTop=void 0===radiusTop?1:radiusTop;radiusBottom=void 0===radiusBottom?1:radiusBottom;height=void 0===height?1:height;radialSegments=void 0===radialSegments?32:radialSegments;heightSegments=void 0===heightSegments?1:heightSegments;openEnded=void 0===openEnded?!1:openEnded;thetaStart=void 0===thetaStart?0:thetaStart;thetaLength=void 0===thetaLength?2*Math.PI:thetaLength;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="CylinderGeometry";
$jscomp$super$this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};var scope=$jscomp$super$this;radialSegments=Math.floor(radialSegments);heightSegments=Math.floor(heightSegments);var indices=[],vertices=[],normals=[],uvs=[],index=0,indexArray=[],halfHeight=height/2,groupStart=0;(function(){for(var normal=new Vector3,vertex=new Vector3,groupCount=0,
slope=(radiusBottom-radiusTop)/height,y=0;y<=heightSegments;y++){for(var indexRow=[],v=y/heightSegments,radius=v*(radiusBottom-radiusTop)+radiusTop,x=0;x<=radialSegments;x++){var u=x/radialSegments,theta=u*thetaLength+thetaStart,sinTheta=Math.sin(theta);theta=Math.cos(theta);vertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*theta;vertices.push(vertex.x,vertex.y,vertex.z);normal.set(sinTheta,slope,theta).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u,1-v);indexRow.push(index++)}indexArray.push(indexRow)}for(normal=
0;normal<radialSegments;normal++)for(vertex=0;vertex<heightSegments;vertex++){slope=indexArray[vertex][normal];y=indexArray[vertex+1][normal];indexRow=indexArray[vertex+1][normal+1];v=indexArray[vertex][normal+1];if(0<radiusTop||0!==vertex)indices.push(slope,y,v),groupCount+=3;if(0<radiusBottom||vertex!==heightSegments-1)indices.push(y,indexRow,v),groupCount+=3}scope.addGroup(groupStart,groupCount,0);groupStart+=groupCount})();!1===openEnded&&(0<radiusTop&&generateCap(!0),0<radiusBottom&&generateCap(!1));
$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(CylinderGeometry,BufferGeometry);CylinderGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};
CylinderGeometry.fromJSON=function(data){return new CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength)};var ConeGeometry=function(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){radius=void 0===radius?1:radius;height=void 0===height?1:height;radialSegments=void 0===radialSegments?32:radialSegments;heightSegments=void 0===heightSegments?1:heightSegments;openEnded=void 0===
openEnded?!1:openEnded;thetaStart=void 0===thetaStart?0:thetaStart;thetaLength=void 0===thetaLength?2*Math.PI:thetaLength;var $jscomp$super$this=CylinderGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength)||this;$jscomp$super$this.type="ConeGeometry";$jscomp$super$this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};return $jscomp$super$this};
$jscomp.inherits(ConeGeometry,CylinderGeometry);ConeGeometry.fromJSON=function(data){return new ConeGeometry(data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength)};var PolyhedronGeometry=function(vertices,indices,radius$jscomp$0,detail$jscomp$0){function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z)}function getVertexByIndex(index,vertex){index*=3;vertex.x=vertices[index+0];vertex.y=vertices[index+1];vertex.z=vertices[index+
2]}function correctUV(uv,stride,vector,azimuth){0>azimuth&&1===uv.x&&(uvBuffer[stride]=uv.x-1);0===vector.x&&0===vector.z&&(uvBuffer[stride]=azimuth/2/Math.PI+.5)}vertices=void 0===vertices?[]:vertices;indices=void 0===indices?[]:indices;radius$jscomp$0=void 0===radius$jscomp$0?1:radius$jscomp$0;detail$jscomp$0=void 0===detail$jscomp$0?0:detail$jscomp$0;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="PolyhedronGeometry";$jscomp$super$this.parameters={vertices:vertices,
indices:indices,radius:radius$jscomp$0,detail:detail$jscomp$0};var vertexBuffer=[],uvBuffer=[];(function(detail){for(var a=new Vector3,b=new Vector3,c=new Vector3,i=0;i<indices.length;i+=3){getVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);for(var cols=detail+1,v=[],i$jscomp$0=0;i$jscomp$0<=cols;i$jscomp$0++){v[i$jscomp$0]=[];for(var aj=a.clone().lerp(c,i$jscomp$0/cols),bj=b.clone().lerp(c,i$jscomp$0/cols),rows=cols-i$jscomp$0,j=0;j<=rows;j++)v[i$jscomp$0][j]=
0===j&&i$jscomp$0===cols?aj:aj.clone().lerp(bj,j/rows)}for(i$jscomp$0=0;i$jscomp$0<cols;i$jscomp$0++)for(aj=0;aj<2*(cols-i$jscomp$0)-1;aj++)bj=Math.floor(aj/2),0===aj%2?(pushVertex(v[i$jscomp$0][bj+1]),pushVertex(v[i$jscomp$0+1][bj]),pushVertex(v[i$jscomp$0][bj])):(pushVertex(v[i$jscomp$0][bj+1]),pushVertex(v[i$jscomp$0+1][bj+1]),pushVertex(v[i$jscomp$0+1][bj]))}})(detail$jscomp$0);(function(radius){for(var vertex=new Vector3,i=0;i<vertexBuffer.length;i+=3)vertex.x=vertexBuffer[i+0],vertex.y=vertexBuffer[i+
1],vertex.z=vertexBuffer[i+2],vertex.normalize().multiplyScalar(radius),vertexBuffer[i+0]=vertex.x,vertexBuffer[i+1]=vertex.y,vertexBuffer[i+2]=vertex.z})(radius$jscomp$0);(function(){for(var vertex=new Vector3,i=0;i<vertexBuffer.length;i+=3)vertex.x=vertexBuffer[i+0],vertex.y=vertexBuffer[i+1],vertex.z=vertexBuffer[i+2],uvBuffer.push(Math.atan2(vertex.z,-vertex.x)/2/Math.PI+.5,1-(Math.atan2(-vertex.y,Math.sqrt(vertex.x*vertex.x+vertex.z*vertex.z))/Math.PI+.5));vertex=new Vector3;i=new Vector3;for(var c=
new Vector3,centroid=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2,i$jscomp$0=0,j=0;i$jscomp$0<vertexBuffer.length;i$jscomp$0+=9,j+=6){vertex.set(vertexBuffer[i$jscomp$0+0],vertexBuffer[i$jscomp$0+1],vertexBuffer[i$jscomp$0+2]);i.set(vertexBuffer[i$jscomp$0+3],vertexBuffer[i$jscomp$0+4],vertexBuffer[i$jscomp$0+5]);c.set(vertexBuffer[i$jscomp$0+6],vertexBuffer[i$jscomp$0+7],vertexBuffer[i$jscomp$0+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+
4],uvBuffer[j+5]);centroid.copy(vertex).add(i).add(c).divideScalar(3);var azi=Math.atan2(centroid.z,-centroid.x);correctUV(uvA,j+0,vertex,azi);correctUV(uvB,j+2,i,azi);correctUV(uvC,j+4,c,azi)}for(vertex=0;vertex<uvBuffer.length;vertex+=6)i=uvBuffer[vertex+0],c=uvBuffer[vertex+2],centroid=uvBuffer[vertex+4],uvA=Math.min(i,c,centroid),.9<Math.max(i,c,centroid)&&.1>uvA&&(.2>i&&(uvBuffer[vertex+0]+=1),.2>c&&(uvBuffer[vertex+2]+=1),.2>centroid&&(uvBuffer[vertex+4]+=1))})();$jscomp$super$this.setAttribute("position",
new Float32BufferAttribute(vertexBuffer,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(vertexBuffer.slice(),3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvBuffer,2));0===detail$jscomp$0?$jscomp$super$this.computeVertexNormals():$jscomp$super$this.normalizeNormals();return $jscomp$super$this};$jscomp.inherits(PolyhedronGeometry,BufferGeometry);PolyhedronGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=
Object.assign({},source.parameters);return this};PolyhedronGeometry.fromJSON=function(data){return new PolyhedronGeometry(data.vertices,data.indices,data.radius,data.details)};var DodecahedronGeometry=function(radius,detail){radius=void 0===radius?1:radius;detail=void 0===detail?0:detail;var $jscomp$super$this=(1+Math.sqrt(5))/2;var r=1/$jscomp$super$this;$jscomp$super$this=PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-$jscomp$super$this,0,-r,$jscomp$super$this,
0,r,-$jscomp$super$this,0,r,$jscomp$super$this,-r,-$jscomp$super$this,0,-r,$jscomp$super$this,0,r,-$jscomp$super$this,0,r,$jscomp$super$this,0,-$jscomp$super$this,0,-r,$jscomp$super$this,0,-r,-$jscomp$super$this,0,r,$jscomp$super$this,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,
1,5,9],radius,detail)||this;$jscomp$super$this.type="DodecahedronGeometry";$jscomp$super$this.parameters={radius:radius,detail:detail};return $jscomp$super$this};$jscomp.inherits(DodecahedronGeometry,PolyhedronGeometry);DodecahedronGeometry.fromJSON=function(data){return new DodecahedronGeometry(data.radius,data.detail)};var _v0$1=new Vector3,_v1$1=new Vector3,_normal=new Vector3,_triangle=new Triangle,EdgesGeometry=function(geometry,thresholdAngle){geometry=void 0===geometry?null:geometry;thresholdAngle=
void 0===thresholdAngle?1:thresholdAngle;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="EdgesGeometry";$jscomp$super$this.parameters={geometry:geometry,thresholdAngle:thresholdAngle};if(null!==geometry){var precision=Math.pow(10,4),thresholdDot=Math.cos(DEG2RAD*thresholdAngle),indexAttr=geometry.getIndex();geometry=geometry.getAttribute("position");var indexCount=indexAttr?indexAttr.count:geometry.count,indexArr=[0,0,0],vertKeys=["a","b","c"],hashes=Array(3);thresholdAngle=
{};for(var vertices=[],i=0;i<indexCount;i+=3){indexAttr?(indexArr[0]=indexAttr.getX(i),indexArr[1]=indexAttr.getX(i+1),indexArr[2]=indexAttr.getX(i+2)):(indexArr[0]=i,indexArr[1]=i+1,indexArr[2]=i+2);var $jscomp$destructuring$var7=_triangle,a=$jscomp$destructuring$var7.a,b=$jscomp$destructuring$var7.b;$jscomp$destructuring$var7=$jscomp$destructuring$var7.c;a.fromBufferAttribute(geometry,indexArr[0]);b.fromBufferAttribute(geometry,indexArr[1]);$jscomp$destructuring$var7.fromBufferAttribute(geometry,
indexArr[2]);_triangle.getNormal(_normal);hashes[0]=Math.round(a.x*precision)+","+Math.round(a.y*precision)+","+Math.round(a.z*precision);hashes[1]=Math.round(b.x*precision)+","+Math.round(b.y*precision)+","+Math.round(b.z*precision);hashes[2]=Math.round($jscomp$destructuring$var7.x*precision)+","+Math.round($jscomp$destructuring$var7.y*precision)+","+Math.round($jscomp$destructuring$var7.z*precision);if(hashes[0]!==hashes[1]&&hashes[1]!==hashes[2]&&hashes[2]!==hashes[0])for(a=0;3>a;a++){b=(a+1)%
3;var vecHash0=hashes[a],vecHash1=hashes[b];$jscomp$destructuring$var7=_triangle[vertKeys[a]];var v1=_triangle[vertKeys[b]],hash=vecHash0+"_"+vecHash1;vecHash0=vecHash1+"_"+vecHash0;vecHash0 in thresholdAngle&&thresholdAngle[vecHash0]?(_normal.dot(thresholdAngle[vecHash0].normal)<=thresholdDot&&(vertices.push($jscomp$destructuring$var7.x,$jscomp$destructuring$var7.y,$jscomp$destructuring$var7.z),vertices.push(v1.x,v1.y,v1.z)),thresholdAngle[vecHash0]=null):hash in thresholdAngle||(thresholdAngle[hash]=
{index0:indexArr[a],index1:indexArr[b],normal:_normal.clone()})}}for(var key in thresholdAngle)thresholdAngle[key]&&(precision=thresholdAngle[key],thresholdDot=precision.index1,_v0$1.fromBufferAttribute(geometry,precision.index0),_v1$1.fromBufferAttribute(geometry,thresholdDot),vertices.push(_v0$1.x,_v0$1.y,_v0$1.z),vertices.push(_v1$1.x,_v1$1.y,_v1$1.z));$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3))}return $jscomp$super$this};$jscomp.inherits(EdgesGeometry,BufferGeometry);
EdgesGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};var Curve=function(){this.type="Curve";this.arcLengthDivisions=200;this.needsUpdate=!1;this.cacheArcLengths=null};Curve.prototype.getPoint=function(){console.warn("THREE.Curve: .getPoint() not implemented.")};Curve.prototype.getPointAt=function(u,optionalTarget){u=this.getUtoTmapping(u);return this.getPoint(u,optionalTarget)};Curve.prototype.getPoints=
function(divisions){divisions=void 0===divisions?5:divisions;for(var points=[],d=0;d<=divisions;d++)points.push(this.getPoint(d/divisions));return points};Curve.prototype.getSpacedPoints=function(divisions){divisions=void 0===divisions?5:divisions;for(var points=[],d=0;d<=divisions;d++)points.push(this.getPointAt(d/divisions));return points};Curve.prototype.getLength=function(){var lengths=this.getLengths();return lengths[lengths.length-1]};Curve.prototype.getLengths=function(divisions){divisions=
void 0===divisions?this.arcLengthDivisions:divisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var cache=[],last=this.getPoint(0),sum=0;cache.push(0);for(var p=1;p<=divisions;p++){var current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current}return this.cacheArcLengths=cache};Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};Curve.prototype.getUtoTmapping=
function(u,distance){distance=void 0===distance?null:distance;var arcLengths=this.getLengths(),il=arcLengths.length;distance=distance?distance:u*arcLengths[il-1];for(var low=0,high=il-1,comparison;low<=high;)if(u=Math.floor(low+(high-low)/2),comparison=arcLengths[u]-distance,0>comparison)low=u+1;else if(0<comparison)high=u-1;else{high=u;break}u=high;if(arcLengths[u]===distance)return u/(il-1);low=arcLengths[u];return(u+(distance-low)/(arcLengths[u+1]-low))/(il-1)};Curve.prototype.getTangent=function(t,
optionalTarget){var t1=t-1E-4;t+=1E-4;0>t1&&(t1=0);1<t&&(t=1);t1=this.getPoint(t1);t=this.getPoint(t);optionalTarget=optionalTarget||(t1.isVector2?new Vector2:new Vector3);optionalTarget.copy(t).sub(t1).normalize();return optionalTarget};Curve.prototype.getTangentAt=function(u,optionalTarget){u=this.getUtoTmapping(u);return this.getTangent(u,optionalTarget)};Curve.prototype.computeFrenetFrames=function(segments,closed){closed=void 0===closed?!1:closed;for(var normal=new Vector3,tangents=[],normals=
[],binormals=[],vec=new Vector3,mat=new Matrix4,i=0;i<=segments;i++)tangents[i]=this.getTangentAt(i/segments,new Vector3);normals[0]=new Vector3;binormals[0]=new Vector3;i=Number.MAX_VALUE;var tx=Math.abs(tangents[0].x),ty=Math.abs(tangents[0].y),tz=Math.abs(tangents[0].z);tx<=i&&(i=tx,normal.set(1,0,0));ty<=i&&(i=ty,normal.set(0,1,0));tz<=i&&normal.set(0,0,1);vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);
for(normal=1;normal<=segments;normal++)normals[normal]=normals[normal-1].clone(),binormals[normal]=binormals[normal-1].clone(),vec.crossVectors(tangents[normal-1],tangents[normal]),vec.length()>Number.EPSILON&&(vec.normalize(),i=Math.acos(clamp(tangents[normal-1].dot(tangents[normal]),-1,1)),normals[normal].applyMatrix4(mat.makeRotationAxis(vec,i))),binormals[normal].crossVectors(tangents[normal],normals[normal]);if(!0===closed)for(closed=Math.acos(clamp(normals[0].dot(normals[segments]),-1,1)),closed/=
segments,0<tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))&&(closed=-closed),vec=1;vec<=segments;vec++)normals[vec].applyMatrix4(mat.makeRotationAxis(tangents[vec],closed*vec)),binormals[vec].crossVectors(tangents[vec],normals[vec]);return{tangents:tangents,normals:normals,binormals:binormals}};Curve.prototype.clone=function(){return(new this.constructor).copy(this)};Curve.prototype.copy=function(source){this.arcLengthDivisions=source.arcLengthDivisions;return this};Curve.prototype.toJSON=
function(){var data={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data};Curve.prototype.fromJSON=function(json){this.arcLengthDivisions=json.arcLengthDivisions;return this};var EllipseCurve=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){aX=void 0===aX?0:aX;aY=void 0===aY?0:aY;xRadius=void 0===xRadius?1:xRadius;yRadius=void 0===yRadius?1:yRadius;aStartAngle=void 0===aStartAngle?0:
aStartAngle;aEndAngle=void 0===aEndAngle?2*Math.PI:aEndAngle;aClockwise=void 0===aClockwise?!1:aClockwise;aRotation=void 0===aRotation?0:aRotation;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isEllipseCurve=!0;$jscomp$super$this.type="EllipseCurve";$jscomp$super$this.aX=aX;$jscomp$super$this.aY=aY;$jscomp$super$this.xRadius=xRadius;$jscomp$super$this.yRadius=yRadius;$jscomp$super$this.aStartAngle=aStartAngle;$jscomp$super$this.aEndAngle=aEndAngle;$jscomp$super$this.aClockwise=
aClockwise;$jscomp$super$this.aRotation=aRotation;return $jscomp$super$this};$jscomp.inherits(EllipseCurve,Curve);EllipseCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector2:optionalTarget;for(var twoPi=2*Math.PI,deltaAngle=this.aEndAngle-this.aStartAngle,samePoints=Math.abs(deltaAngle)<Number.EPSILON;0>deltaAngle;)deltaAngle+=twoPi;for(;deltaAngle>twoPi;)deltaAngle-=twoPi;deltaAngle<Number.EPSILON&&(deltaAngle=samePoints?0:twoPi);!0!==this.aClockwise||
samePoints||(deltaAngle=deltaAngle===twoPi?-twoPi:deltaAngle-twoPi);twoPi=this.aStartAngle+t*deltaAngle;t=this.aX+this.xRadius*Math.cos(twoPi);var y=this.aY+this.yRadius*Math.sin(twoPi);0!==this.aRotation&&(twoPi=Math.cos(this.aRotation),deltaAngle=Math.sin(this.aRotation),samePoints=t-this.aX,y-=this.aY,t=samePoints*twoPi-y*deltaAngle+this.aX,y=samePoints*deltaAngle+y*twoPi+this.aY);return optionalTarget.set(t,y)};EllipseCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);
this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this};EllipseCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;
data.aRotation=this.aRotation;return data};EllipseCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this};var ArcCurve=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){aX=EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise)||
this;aX.isArcCurve=!0;aX.type="ArcCurve";return aX};$jscomp.inherits(ArcCurve,EllipseCurve);var tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly,CatmullRomCurve3=function(points,closed,curveType,tension){points=void 0===points?[]:points;closed=void 0===closed?!1:closed;curveType=void 0===curveType?"centripetal":curveType;tension=void 0===tension?.5:tension;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isCatmullRomCurve3=!0;$jscomp$super$this.type="CatmullRomCurve3";
$jscomp$super$this.points=points;$jscomp$super$this.closed=closed;$jscomp$super$this.curveType=curveType;$jscomp$super$this.tension=tension;return $jscomp$super$this};$jscomp.inherits(CatmullRomCurve3,Curve);CatmullRomCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector3:optionalTarget;var points=this.points,l=points.length;t*=l-(this.closed?0:1);var intPoint=Math.floor(t);t-=intPoint;this.closed?intPoint+=0<intPoint?0:(Math.floor(Math.abs(intPoint)/
l)+1)*l:0===t&&intPoint===l-1&&(intPoint=l-2,t=1);if(this.closed||0<intPoint)var p0=points[(intPoint-1)%l];else tmp.subVectors(points[0],points[1]).add(points[0]),p0=tmp;var p1=points[intPoint%l],p2=points[(intPoint+1)%l];this.closed||intPoint+2<l?points=points[(intPoint+2)%l]:(tmp.subVectors(points[l-1],points[l-2]).add(points[l-1]),points=tmp);if("centripetal"===this.curveType||"chordal"===this.curveType){var pow="chordal"===this.curveType?.5:.25;l=Math.pow(p0.distanceToSquared(p1),pow);intPoint=
Math.pow(p1.distanceToSquared(p2),pow);pow=Math.pow(p2.distanceToSquared(points),pow);1E-4>intPoint&&(intPoint=1);1E-4>l&&(l=intPoint);1E-4>pow&&(pow=intPoint);px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,points.x,l,intPoint,pow);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,points.y,l,intPoint,pow);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,points.z,l,intPoint,pow)}else"catmullrom"===this.curveType&&(px.initCatmullRom(p0.x,p1.x,p2.x,points.x,this.tension),py.initCatmullRom(p0.y,p1.y,p2.y,points.y,this.tension),
pz.initCatmullRom(p0.z,p1.z,p2.z,points.z,this.tension));optionalTarget.set(px.calc(t),py.calc(t),pz.calc(t));return optionalTarget};CatmullRomCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++)this.points.push(source.points[i].clone());this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this};CatmullRomCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);
data.points=[];for(var i=0,l=this.points.length;i<l;i++)data.points.push(this.points[i].toArray());data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data};CatmullRomCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push((new Vector3).fromArray(point))}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this};
var CubicBezierCurve=function(v0,v1,v2,v3){v0=void 0===v0?new Vector2:v0;v1=void 0===v1?new Vector2:v1;v2=void 0===v2?new Vector2:v2;v3=void 0===v3?new Vector2:v3;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isCubicBezierCurve=!0;$jscomp$super$this.type="CubicBezierCurve";$jscomp$super$this.v0=v0;$jscomp$super$this.v1=v1;$jscomp$super$this.v2=v2;$jscomp$super$this.v3=v3;return $jscomp$super$this};$jscomp.inherits(CubicBezierCurve,Curve);CubicBezierCurve.prototype.getPoint=function(t,
optionalTarget){optionalTarget=void 0===optionalTarget?new Vector2:optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;optionalTarget.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return optionalTarget};CubicBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this};CubicBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);
data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data};CubicBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this};var CubicBezierCurve3=function(v0,v1,v2,v3){v0=void 0===v0?new Vector3:v0;v1=void 0===v1?new Vector3:v1;v2=void 0===v2?new Vector3:v2;v3=void 0===v3?new Vector3:v3;var $jscomp$super$this=
Curve.call(this)||this;$jscomp$super$this.isCubicBezierCurve3=!0;$jscomp$super$this.type="CubicBezierCurve3";$jscomp$super$this.v0=v0;$jscomp$super$this.v1=v1;$jscomp$super$this.v2=v2;$jscomp$super$this.v3=v3;return $jscomp$super$this};$jscomp.inherits(CubicBezierCurve3,Curve);CubicBezierCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector3:optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;optionalTarget.set(CubicBezier(t,v0.x,v1.x,v2.x,
v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return optionalTarget};CubicBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this};CubicBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data};
CubicBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this};var LineCurve=function(v1,v2){v1=void 0===v1?new Vector2:v1;v2=void 0===v2?new Vector2:v2;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isLineCurve=!0;$jscomp$super$this.type="LineCurve";$jscomp$super$this.v1=v1;$jscomp$super$this.v2=v2;return $jscomp$super$this};$jscomp.inherits(LineCurve,
Curve);LineCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector2:optionalTarget;1===t?optionalTarget.copy(this.v2):(optionalTarget.copy(this.v2).sub(this.v1),optionalTarget.multiplyScalar(t).add(this.v1));return optionalTarget};LineCurve.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget)};LineCurve.prototype.getTangent=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector2:optionalTarget;return optionalTarget.subVectors(this.v2,
this.v1).normalize()};LineCurve.prototype.getTangentAt=function(u,optionalTarget){return this.getTangent(u,optionalTarget)};LineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};LineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};LineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);
this.v2.fromArray(json.v2);return this};var LineCurve3=function(v1,v2){v1=void 0===v1?new Vector3:v1;v2=void 0===v2?new Vector3:v2;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isLineCurve3=!0;$jscomp$super$this.type="LineCurve3";$jscomp$super$this.v1=v1;$jscomp$super$this.v2=v2;return $jscomp$super$this};$jscomp.inherits(LineCurve3,Curve);LineCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector3:optionalTarget;1===t?optionalTarget.copy(this.v2):
(optionalTarget.copy(this.v2).sub(this.v1),optionalTarget.multiplyScalar(t).add(this.v1));return optionalTarget};LineCurve3.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget)};LineCurve3.prototype.getTangent=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector3:optionalTarget;return optionalTarget.subVectors(this.v2,this.v1).normalize()};LineCurve3.prototype.getTangentAt=function(u,optionalTarget){return this.getTangent(u,optionalTarget)};
LineCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};LineCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};LineCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};var QuadraticBezierCurve=function(v0,v1,v2){v0=void 0===v0?
new Vector2:v0;v1=void 0===v1?new Vector2:v1;v2=void 0===v2?new Vector2:v2;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isQuadraticBezierCurve=!0;$jscomp$super$this.type="QuadraticBezierCurve";$jscomp$super$this.v0=v0;$jscomp$super$this.v1=v1;$jscomp$super$this.v2=v2;return $jscomp$super$this};$jscomp.inherits(QuadraticBezierCurve,Curve);QuadraticBezierCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector2:optionalTarget;var v0=this.v0,
v1=this.v1,v2=this.v2;optionalTarget.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return optionalTarget};QuadraticBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};QuadraticBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};QuadraticBezierCurve.prototype.fromJSON=
function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};var QuadraticBezierCurve3=function(v0,v1,v2){v0=void 0===v0?new Vector3:v0;v1=void 0===v1?new Vector3:v1;v2=void 0===v2?new Vector3:v2;var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.isQuadraticBezierCurve3=!0;$jscomp$super$this.type="QuadraticBezierCurve3";$jscomp$super$this.v0=v0;$jscomp$super$this.v1=v1;$jscomp$super$this.v2=v2;return $jscomp$super$this};
$jscomp.inherits(QuadraticBezierCurve3,Curve);QuadraticBezierCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector3:optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2;optionalTarget.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return optionalTarget};QuadraticBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);
this.v2.copy(source.v2);return this};QuadraticBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};QuadraticBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};var SplineCurve=function(points){points=void 0===points?[]:points;var $jscomp$super$this=
Curve.call(this)||this;$jscomp$super$this.isSplineCurve=!0;$jscomp$super$this.type="SplineCurve";$jscomp$super$this.points=points;return $jscomp$super$this};$jscomp.inherits(SplineCurve,Curve);SplineCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=void 0===optionalTarget?new Vector2:optionalTarget;var points=this.points,p=(points.length-1)*t;t=Math.floor(p);p-=t;var p0=points[0===t?t:t-1],p1=points[t],p2=points[t>points.length-2?points.length-1:t+1];points=points[t>points.length-
3?points.length-1:t+2];optionalTarget.set(CatmullRom(p,p0.x,p1.x,p2.x,points.x),CatmullRom(p,p0.y,p1.y,p2.y,points.y));return optionalTarget};SplineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++)this.points.push(source.points[i].clone());return this};SplineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++)data.points.push(this.points[i].toArray());
return data};SplineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push((new Vector2).fromArray(point))}return this};var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,
QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve}),CurvePath=function(){var $jscomp$super$this=Curve.call(this)||this;$jscomp$super$this.type="CurvePath";$jscomp$super$this.curves=[];$jscomp$super$this.autoClose=!1;return $jscomp$super$this};$jscomp.inherits(CurvePath,Curve);CurvePath.prototype.add=function(curve){this.curves.push(curve)};CurvePath.prototype.closePath=function(){var startPoint=this.curves[0].getPoint(0),endPoint=this.curves[this.curves.length-1].getPoint(1);startPoint.equals(endPoint)||
this.curves.push(new Curves[!0===startPoint.isVector2?"LineCurve":"LineCurve3"](endPoint,startPoint));return this};CurvePath.prototype.getPoint=function(t,optionalTarget){var d=t*this.getLength(),curveLengths=this.getCurveLengths();for(t=0;t<curveLengths.length;){if(curveLengths[t]>=d)return d=curveLengths[t]-d,t=this.curves[t],curveLengths=t.getLength(),t.getPointAt(0===curveLengths?0:1-d/curveLengths,optionalTarget);t++}return null};CurvePath.prototype.getLength=function(){var lens=this.getCurveLengths();
return lens[lens.length-1]};CurvePath.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()};CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var lengths=[],sums=0,i=0,l=this.curves.length;i<l;i++)sums+=this.curves[i].getLength(),lengths.push(sums);return this.cacheLengths=lengths};CurvePath.prototype.getSpacedPoints=function(divisions){divisions=void 0===
divisions?40:divisions;for(var points=[],i=0;i<=divisions;i++)points.push(this.getPoint(i/divisions));this.autoClose&&points.push(points[0]);return points};CurvePath.prototype.getPoints=function(divisions){divisions=void 0===divisions?12:divisions;for(var points=[],last,i=0,curves=this.curves;i<curves.length;i++){var curve=curves[i];curve=curve.getPoints(curve.isEllipseCurve?2*divisions:curve.isLineCurve||curve.isLineCurve3?1:curve.isSplineCurve?divisions*curve.points.length:divisions);for(var j=
0;j<curve.length;j++){var point=curve[j];last&&last.equals(point)||(points.push(point),last=point)}}this.autoClose&&1<points.length&&!points[points.length-1].equals(points[0])&&points.push(points[0]);return points};CurvePath.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.curves=[];for(var i=0,l=source.curves.length;i<l;i++)this.curves.push(source.curves[i].clone());this.autoClose=source.autoClose;return this};CurvePath.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);
data.autoClose=this.autoClose;data.curves=[];for(var i=0,l=this.curves.length;i<l;i++)data.curves.push(this.curves[i].toJSON());return data};CurvePath.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.autoClose=json.autoClose;this.curves=[];for(var i=0,l=json.curves.length;i<l;i++){var curve=json.curves[i];this.curves.push((new Curves[curve.type]).fromJSON(curve))}return this};var Path=function(points){var $jscomp$super$this=CurvePath.call(this)||this;$jscomp$super$this.type=
"Path";$jscomp$super$this.currentPoint=new Vector2;points&&$jscomp$super$this.setFromPoints(points);return $jscomp$super$this};$jscomp.inherits(Path,CurvePath);Path.prototype.setFromPoints=function(points){this.moveTo(points[0].x,points[0].y);for(var i=1,l=points.length;i<l;i++)this.lineTo(points[i].x,points[i].y);return this};Path.prototype.moveTo=function(x,y){this.currentPoint.set(x,y);return this};Path.prototype.lineTo=function(x,y){var curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,
y));this.curves.push(curve);this.currentPoint.set(x,y);return this};Path.prototype.quadraticCurveTo=function(aCPx,aCPy,aX,aY){aCPx=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(aCPx);this.currentPoint.set(aX,aY);return this};Path.prototype.bezierCurveTo=function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){aCP1x=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(aCP1x);
this.currentPoint.set(aX,aY);return this};Path.prototype.splineThru=function(pts){var npts=[this.currentPoint.clone()].concat(pts);npts=new SplineCurve(npts);this.curves.push(npts);this.currentPoint.copy(pts[pts.length-1]);return this};Path.prototype.arc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absarc(aX+this.currentPoint.x,aY+this.currentPoint.y,aRadius,aStartAngle,aEndAngle,aClockwise);return this};Path.prototype.absarc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,
aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this};Path.prototype.ellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){this.absellipse(aX+this.currentPoint.x,aY+this.currentPoint.y,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this};Path.prototype.absellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){aX=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);0<this.curves.length&&
(aY=aX.getPoint(0),aY.equals(this.currentPoint)||this.lineTo(aY.x,aY.y));this.curves.push(aX);aX=aX.getPoint(1);this.currentPoint.copy(aX);return this};Path.prototype.copy=function(source){CurvePath.prototype.copy.call(this,source);this.currentPoint.copy(source.currentPoint);return this};Path.prototype.toJSON=function(){var data=CurvePath.prototype.toJSON.call(this);data.currentPoint=this.currentPoint.toArray();return data};Path.prototype.fromJSON=function(json){CurvePath.prototype.fromJSON.call(this,
json);this.currentPoint.fromArray(json.currentPoint);return this};var Shape=function(points){points=Path.call(this,points)||this;points.uuid=generateUUID();points.type="Shape";points.holes=[];return points};$jscomp.inherits(Shape,Path);Shape.prototype.getPointsHoles=function(divisions){for(var holesPts=[],i=0,l=this.holes.length;i<l;i++)holesPts[i]=this.holes[i].getPoints(divisions);return holesPts};Shape.prototype.extractPoints=function(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)}};
Shape.prototype.copy=function(source){Path.prototype.copy.call(this,source);this.holes=[];for(var i=0,l=source.holes.length;i<l;i++)this.holes.push(source.holes[i].clone());return this};Shape.prototype.toJSON=function(){var data=Path.prototype.toJSON.call(this);data.uuid=this.uuid;data.holes=[];for(var i=0,l=this.holes.length;i<l;i++)data.holes.push(this.holes[i].toJSON());return data};Shape.prototype.fromJSON=function(json){Path.prototype.fromJSON.call(this,json);this.uuid=json.uuid;this.holes=[];
for(var i=0,l=json.holes.length;i<l;i++){var hole=json.holes[i];this.holes.push((new Path).fromJSON(hole))}return this};var Earcut=function(){};Earcut.triangulate=function(data,holeIndices,dim$jscomp$0){dim$jscomp$0=void 0===dim$jscomp$0?2:dim$jscomp$0;dim$jscomp$0=void 0===dim$jscomp$0?2:dim$jscomp$0;var hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim$jscomp$0:data.length,outerNode=linkedList(data,0,outerLen,dim$jscomp$0,!0),triangles=[];if(outerNode&&outerNode.next!==
outerNode.prev){var minX,invSize;if(hasHoles){hasHoles=outerNode;var dim=dim$jscomp$0;outerNode=[];for(var i=0,len=holeIndices.length;i<len;i++){var list=linkedList(data,holeIndices[i]*dim,i<len-1?holeIndices[i+1]*dim:data.length,dim,!1);list===list.next&&(list.steiner=!0);outerNode.push(getLeftmost(list))}outerNode.sort(compareXYSlope);for(holeIndices=0;holeIndices<outerNode.length;holeIndices++)dim=outerNode[holeIndices],i=hasHoles,(hasHoles=findHoleBridge(dim,i))?(dim=splitPolygon(hasHoles,dim),
filterPoints(dim,dim.next),hasHoles=filterPoints(hasHoles,hasHoles.next)):hasHoles=i;outerNode=hasHoles}if(data.length>80*dim$jscomp$0){var minY=minX=Infinity;holeIndices=invSize=-Infinity;for(hasHoles=dim$jscomp$0;hasHoles<outerLen;hasHoles+=dim$jscomp$0)dim=data[hasHoles],i=data[hasHoles+1],dim<minX&&(minX=dim),i<minY&&(minY=i),dim>invSize&&(invSize=dim),i>holeIndices&&(holeIndices=i);invSize=Math.max(invSize-minX,holeIndices-minY);invSize=0!==invSize?32767/invSize:0}earcutLinked(outerNode,triangles,
dim$jscomp$0,minX,minY,invSize,0)}return triangles};var ShapeUtils=function(){};ShapeUtils.area=function(contour){for(var n=contour.length,a=0,p=n-1,q=0;q<n;p=q++)a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;return.5*a};ShapeUtils.isClockWise=function(pts){return 0>ShapeUtils.area(pts)};ShapeUtils.triangulateShape=function(contour,holes){var vertices=[],holeIndices=[],faces=[];removeDupEndPts(contour);addContour(vertices,contour);contour=contour.length;holes.forEach(removeDupEndPts);for(var i=
0;i<holes.length;i++)holeIndices.push(contour),contour+=holes[i].length,addContour(vertices,holes[i]);holes=Earcut.triangulate(vertices,holeIndices);for(vertices=0;vertices<holes.length;vertices+=3)faces.push(holes.slice(vertices,vertices+3));return faces};var ExtrudeGeometry=function(shapes,options){function addShape(shape){function mergeOverlappingPoints(points){for(var THRESHOLD_SQ=1E-10*1E-10,prevPos=points[0],i$157=1;i$157<=points.length;i$157++){var currentIndex=i$157%points.length,currentPos=
points[currentIndex],dx=currentPos.x-prevPos.x,dy=currentPos.y-prevPos.y,scalingFactorSqrt=Math.max(Math.abs(currentPos.x),Math.abs(currentPos.y),Math.abs(prevPos.x),Math.abs(prevPos.y));dx*dx+dy*dy<=THRESHOLD_SQ*scalingFactorSqrt*scalingFactorSqrt?(points.splice(currentIndex,1),i$157--):prevPos=currentPos}}function scalePt2(pt,vec,size){vec||console.error("THREE.ExtrudeGeometry: vec does not exist");return pt.clone().addScaledVector(vec,size)}function getBevelVec(inPt,inPrev,inNext){var v_trans_y=
inPt.x-inPrev.x;var shrink_by=inPt.y-inPrev.y;var v_trans_x=inNext.x-inPt.x;var v_next_y=inNext.y-inPt.y,v_prev_lensq=v_trans_y*v_trans_y+shrink_by*shrink_by;if(Math.abs(v_trans_y*v_next_y-shrink_by*v_trans_x)>Number.EPSILON){var v_prev_len=Math.sqrt(v_prev_lensq),v_next_len=Math.sqrt(v_trans_x*v_trans_x+v_next_y*v_next_y);v_prev_lensq=inPrev.x-shrink_by/v_prev_len;inPrev=inPrev.y+v_trans_y/v_prev_len;v_next_y=((inNext.x-v_next_y/v_next_len-v_prev_lensq)*v_next_y-(inNext.y+v_trans_x/v_next_len-inPrev)*
v_trans_x)/(v_trans_y*v_next_y-shrink_by*v_trans_x);v_trans_x=v_prev_lensq+v_trans_y*v_next_y-inPt.x;v_trans_y=inPrev+shrink_by*v_next_y-inPt.y;shrink_by=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(2>=shrink_by)return new Vector2(v_trans_x,v_trans_y);shrink_by=Math.sqrt(shrink_by/2)}else inPt=!1,v_trans_y>Number.EPSILON?v_trans_x>Number.EPSILON&&(inPt=!0):v_trans_y<-Number.EPSILON?v_trans_x<-Number.EPSILON&&(inPt=!0):Math.sign(shrink_by)===Math.sign(v_next_y)&&(inPt=!0),inPt?(v_trans_x=-shrink_by,
shrink_by=Math.sqrt(v_prev_lensq)):(v_trans_x=v_trans_y,v_trans_y=shrink_by,shrink_by=Math.sqrt(v_prev_lensq/2));return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by)}function sidewalls(contour,layeroffset){for(var i=contour.length;0<=--i;){var j$204=i,k$205=i-1;0>k$205&&(k$205=contour.length-1);for(var s$206=0,sl=steps+2*bevelSegments;s$206<sl;s$206++){var slen1=vlen*s$206,slen2=vlen*(s$206+1),b$207=layeroffset+k$205+slen1,c=layeroffset+k$205+slen2;slen2=layeroffset+j$204+slen2;addVertex(layeroffset+
j$204+slen1);addVertex(b$207);addVertex(slen2);addVertex(b$207);addVertex(c);addVertex(slen2);slen1=verticesArray.length/3;slen1=uvgen.generateSideWallUV(scope,verticesArray,slen1-6,slen1-3,slen1-2,slen1-1);addUV(slen1[0]);addUV(slen1[1]);addUV(slen1[3]);addUV(slen1[1]);addUV(slen1[2]);addUV(slen1[3])}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z)}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);a=verticesArray.length/3;a=uvgen.generateTopUV(scope,verticesArray,
a-3,a-2,a-1);addUV(a[0]);addUV(a[1]);addUV(a[2])}function addVertex(index){verticesArray.push(placeholder[3*index]);verticesArray.push(placeholder[3*index+1]);verticesArray.push(placeholder[3*index+2])}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y)}var placeholder=[],curveSegments=void 0!==options.curveSegments?options.curveSegments:12,steps=void 0!==options.steps?options.steps:1,depth=void 0!==options.depth?options.depth:1,bevelEnabled=void 0!==options.bevelEnabled?options.bevelEnabled:
!0,bevelThickness=void 0!==options.bevelThickness?options.bevelThickness:.2,bevelSize=void 0!==options.bevelSize?options.bevelSize:bevelThickness-.1,bevelOffset=void 0!==options.bevelOffset?options.bevelOffset:0,bevelSegments=void 0!==options.bevelSegments?options.bevelSegments:3,extrudePath=options.extrudePath,uvgen=void 0!==options.UVGenerator?options.UVGenerator:WorldUVGenerator,extrudeByPath=!1;if(extrudePath){var extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=!0;bevelEnabled=!1;
var splineTube=extrudePath.computeFrenetFrames(steps,!1);var binormal=new Vector3;var normal=new Vector3;var position2=new Vector3}bevelEnabled||(bevelOffset=bevelSize=bevelThickness=bevelSegments=0);shape=shape.extractPoints(curveSegments);extrudePath=shape.shape;var holes=shape.holes;if(!ShapeUtils.isClockWise(extrudePath))for(extrudePath=extrudePath.reverse(),shape=0,curveSegments=holes.length;shape<curveSegments;shape++){var ahole=holes[shape];ShapeUtils.isClockWise(ahole)&&(holes[shape]=ahole.reverse())}mergeOverlappingPoints(extrudePath);
holes.forEach(mergeOverlappingPoints);var numHoles=holes.length,contour$jscomp$0=extrudePath;for(shape=0;shape<numHoles;shape++)extrudePath=extrudePath.concat(holes[shape]);var vlen=extrudePath.length;shape=[];curveSegments=0;ahole=contour$jscomp$0.length;for(var j=ahole-1,k=curveSegments+1;curveSegments<ahole;curveSegments++,j++,k++)j===ahole&&(j=0),k===ahole&&(k=0),shape[curveSegments]=getBevelVec(contour$jscomp$0[curveSegments],contour$jscomp$0[j],contour$jscomp$0[k]);curveSegments=[];j=shape.concat();
for(k=0;k<numHoles;k++){var ahole$163=holes[k];ahole=[];for(var i$164=0,il$165=ahole$163.length,j$166=il$165-1,k$167=i$164+1;i$164<il$165;i$164++,j$166++,k$167++)j$166===il$165&&(j$166=0),k$167===il$165&&(k$167=0),ahole[i$164]=getBevelVec(ahole$163[i$164],ahole$163[j$166],ahole$163[k$167]);curveSegments.push(ahole);j=j.concat(ahole)}if(0===bevelSegments)var faces=ShapeUtils.triangulateShape(contour$jscomp$0,holes);else{k=[];ahole$163=[];for(i$164=0;i$164<bevelSegments;i$164++){il$165=i$164/bevelSegments;
j$166=bevelThickness*Math.cos(il$165*Math.PI/2);k$167=bevelSize*Math.sin(il$165*Math.PI/2)+bevelOffset;ahole=0;for(var il$170=contour$jscomp$0.length;ahole<il$170;ahole++){var vert=scalePt2(contour$jscomp$0[ahole],shape[ahole],k$167);v(vert.x,vert.y,-j$166);0===il$165&&k.push(vert)}il$170=0;for(vert=numHoles;il$170<vert;il$170++){var ahole$173=holes[il$170];ahole=curveSegments[il$170];for(var oneHoleVertices=[],i$174=0,il$175=ahole$173.length;i$174<il$175;i$174++){var vert$176=scalePt2(ahole$173[i$174],
ahole[i$174],k$167);v(vert$176.x,vert$176.y,-j$166);0===il$165&&oneHoleVertices.push(vert$176)}0===il$165&&ahole$163.push(oneHoleVertices)}}faces=ShapeUtils.triangulateShape(k,ahole$163)}var flen=faces.length;ahole=bevelSize+bevelOffset;for(numHoles=0;numHoles<vlen;numHoles++)k=bevelEnabled?scalePt2(extrudePath[numHoles],j[numHoles],ahole):extrudePath[numHoles],extrudeByPath?(normal.copy(splineTube.normals[0]).multiplyScalar(k.x),binormal.copy(splineTube.binormals[0]).multiplyScalar(k.y),position2.copy(extrudePts[0]).add(normal).add(binormal),
v(position2.x,position2.y,position2.z)):v(k.x,k.y,0);for(numHoles=1;numHoles<=steps;numHoles++)for(k=0;k<vlen;k++)ahole$163=bevelEnabled?scalePt2(extrudePath[k],j[k],ahole):extrudePath[k],extrudeByPath?(normal.copy(splineTube.normals[numHoles]).multiplyScalar(ahole$163.x),binormal.copy(splineTube.binormals[numHoles]).multiplyScalar(ahole$163.y),position2.copy(extrudePts[numHoles]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(ahole$163.x,ahole$163.y,depth/steps*numHoles);for(splineTube=
bevelSegments-1;0<=splineTube;splineTube--){normal=splineTube/bevelSegments;binormal=bevelThickness*Math.cos(normal*Math.PI/2);normal=bevelSize*Math.sin(normal*Math.PI/2)+bevelOffset;position2=0;for(extrudePath=contour$jscomp$0.length;position2<extrudePath;position2++)ahole=scalePt2(contour$jscomp$0[position2],shape[position2],normal),v(ahole.x,ahole.y,depth+binormal);position2=0;for(extrudePath=holes.length;position2<extrudePath;position2++)for(j=holes[position2],ahole=curveSegments[position2],numHoles=
0,k=j.length;numHoles<k;numHoles++)ahole$163=scalePt2(j[numHoles],ahole[numHoles],normal),extrudeByPath?v(ahole$163.x,ahole$163.y+extrudePts[steps-1].y,extrudePts[steps-1].x+binormal):v(ahole$163.x,ahole$163.y,depth+binormal)}(function(){var start=verticesArray.length/3;if(bevelEnabled){for(var offset=0*vlen,i$194=0;i$194<flen;i$194++){var face=faces[i$194];f3(face[2]+offset,face[1]+offset,face[0]+offset)}offset=vlen*(steps+2*bevelSegments);for(i$194=0;i$194<flen;i$194++)face=faces[i$194],f3(face[0]+
offset,face[1]+offset,face[2]+offset)}else{for(offset=0;offset<flen;offset++)i$194=faces[offset],f3(i$194[2],i$194[1],i$194[0]);for(offset=0;offset<flen;offset++)i$194=faces[offset],f3(i$194[0]+vlen*steps,i$194[1]+vlen*steps,i$194[2]+vlen*steps)}scope.addGroup(start,verticesArray.length/3-start,0)})();(function(){var start=verticesArray.length/3,layeroffset=0;sidewalls(contour$jscomp$0,layeroffset);layeroffset+=contour$jscomp$0.length;for(var h$201=0,hl$202=holes.length;h$201<hl$202;h$201++){var ahole$203=
holes[h$201];sidewalls(ahole$203,layeroffset);layeroffset+=ahole$203.length}scope.addGroup(start,verticesArray.length/3-start,1)})()}shapes=void 0===shapes?new Shape([new Vector2(.5,.5),new Vector2(-.5,.5),new Vector2(-.5,-.5),new Vector2(.5,-.5)]):shapes;options=void 0===options?{}:options;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="ExtrudeGeometry";$jscomp$super$this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];for(var scope=
$jscomp$super$this,verticesArray=[],uvArray=[],i$jscomp$0=0,l=shapes.length;i$jscomp$0<l;i$jscomp$0++)addShape(shapes[i$jscomp$0]);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(verticesArray,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvArray,2));$jscomp$super$this.computeVertexNormals();return $jscomp$super$this};$jscomp.inherits(ExtrudeGeometry,BufferGeometry);ExtrudeGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,
source);this.parameters=Object.assign({},source.parameters);return this};ExtrudeGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this),shapes=this.parameters.shapes,options=this.parameters.options;data.shapes=[];if(Array.isArray(shapes))for(var i=0,l=shapes.length;i<l;i++)data.shapes.push(shapes[i].uuid);else data.shapes.push(shapes.uuid);data.options=Object.assign({},options);void 0!==options.extrudePath&&(data.options.extrudePath=options.extrudePath.toJSON());return data};
ExtrudeGeometry.fromJSON=function(data,shapes){for(var geometryShapes=[],j=0,jl=data.shapes.length;j<jl;j++)geometryShapes.push(shapes[data.shapes[j]]);shapes=data.options.extrudePath;void 0!==shapes&&(data.options.extrudePath=(new Curves[shapes.type]).fromJSON(shapes));return new ExtrudeGeometry(geometryShapes,data.options)};var WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){geometry=vertices[3*indexB];indexB=vertices[3*indexB+1];var c_x=vertices[3*indexC];indexC=
vertices[3*indexC+1];return[new Vector2(vertices[3*indexA],vertices[3*indexA+1]),new Vector2(geometry,indexB),new Vector2(c_x,indexC)]},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){geometry=vertices[3*indexA];var a_y=vertices[3*indexA+1];indexA=vertices[3*indexA+2];var b_x=vertices[3*indexB],b_y=vertices[3*indexB+1];indexB=vertices[3*indexB+2];var c_x=vertices[3*indexC],c_y=vertices[3*indexC+1];indexC=vertices[3*indexC+2];var d_x=vertices[3*indexD],d_y=vertices[3*indexD+
1];vertices=vertices[3*indexD+2];return Math.abs(a_y-b_y)<Math.abs(geometry-b_x)?[new Vector2(geometry,1-indexA),new Vector2(b_x,1-indexB),new Vector2(c_x,1-indexC),new Vector2(d_x,1-vertices)]:[new Vector2(a_y,1-indexA),new Vector2(b_y,1-indexB),new Vector2(c_y,1-indexC),new Vector2(d_y,1-vertices)]}},IcosahedronGeometry=function(radius,detail){radius=void 0===radius?1:radius;detail=void 0===detail?0:detail;var $jscomp$super$this=(1+Math.sqrt(5))/2;$jscomp$super$this=PolyhedronGeometry.call(this,
[-1,$jscomp$super$this,0,1,$jscomp$super$this,0,-1,-$jscomp$super$this,0,1,-$jscomp$super$this,0,0,-1,$jscomp$super$this,0,1,$jscomp$super$this,0,-1,-$jscomp$super$this,0,1,-$jscomp$super$this,$jscomp$super$this,0,-1,$jscomp$super$this,0,1,-$jscomp$super$this,0,-1,-$jscomp$super$this,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],radius,detail)||this;$jscomp$super$this.type="IcosahedronGeometry";$jscomp$super$this.parameters=
{radius:radius,detail:detail};return $jscomp$super$this};$jscomp.inherits(IcosahedronGeometry,PolyhedronGeometry);IcosahedronGeometry.fromJSON=function(data){return new IcosahedronGeometry(data.radius,data.detail)};var LatheGeometry=function(points,segments,phiStart,phiLength){points=void 0===points?[new Vector2(0,-.5),new Vector2(.5,0),new Vector2(0,.5)]:points;segments=void 0===segments?12:segments;phiStart=void 0===phiStart?0:phiStart;phiLength=void 0===phiLength?2*Math.PI:phiLength;var $jscomp$super$this=
BufferGeometry.call(this)||this;$jscomp$super$this.type="LatheGeometry";$jscomp$super$this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments);phiLength=clamp(phiLength,0,2*Math.PI);for(var indices=[],vertices=[],uvs=[],initNormals=[],normals=[],inverseSegments=1/segments,vertex=new Vector3,uv=new Vector2,normal=new Vector3,curNormal=new Vector3,prevNormal=new Vector3,dx,dy,j=0;j<=points.length-1;j++)switch(j){case 0:dx=points[j+1].x-points[j].x;
dy=points[j+1].y-points[j].y;normal.x=1*dy;normal.y=-dx;normal.z=0*dy;prevNormal.copy(normal);normal.normalize();initNormals.push(normal.x,normal.y,normal.z);break;case points.length-1:initNormals.push(prevNormal.x,prevNormal.y,prevNormal.z);break;default:dx=points[j+1].x-points[j].x,dy=points[j+1].y-points[j].y,normal.x=1*dy,normal.y=-dx,normal.z=0*dy,curNormal.copy(normal),normal.x+=prevNormal.x,normal.y+=prevNormal.y,normal.z+=prevNormal.z,normal.normalize(),initNormals.push(normal.x,normal.y,
normal.z),prevNormal.copy(curNormal)}for(normal=0;normal<=segments;normal++)for(prevNormal=phiStart+normal*inverseSegments*phiLength,curNormal=Math.sin(prevNormal),prevNormal=Math.cos(prevNormal),dx=0;dx<=points.length-1;dx++)vertex.x=points[dx].x*curNormal,vertex.y=points[dx].y,vertex.z=points[dx].x*prevNormal,vertices.push(vertex.x,vertex.y,vertex.z),uv.x=normal/segments,uv.y=dx/(points.length-1),uvs.push(uv.x,uv.y),normals.push(initNormals[3*dx]*curNormal,initNormals[3*dx+1],initNormals[3*dx]*
prevNormal);for(phiStart=0;phiStart<segments;phiStart++)for(phiLength=0;phiLength<points.length-1;phiLength++)initNormals=phiLength+phiStart*points.length,inverseSegments=initNormals+points.length,vertex=initNormals+points.length+1,uv=initNormals+1,indices.push(initNormals,inverseSegments,uv),indices.push(vertex,uv,inverseSegments);$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,
2));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));return $jscomp$super$this};$jscomp.inherits(LatheGeometry,BufferGeometry);LatheGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};LatheGeometry.fromJSON=function(data){return new LatheGeometry(data.points,data.segments,data.phiStart,data.phiLength)};var OctahedronGeometry=function(radius,detail){radius=void 0===radius?
1:radius;detail=void 0===detail?0:detail;var $jscomp$super$this=PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],radius,detail)||this;$jscomp$super$this.type="OctahedronGeometry";$jscomp$super$this.parameters={radius:radius,detail:detail};return $jscomp$super$this};$jscomp.inherits(OctahedronGeometry,PolyhedronGeometry);OctahedronGeometry.fromJSON=function(data){return new OctahedronGeometry(data.radius,data.detail)};var PlaneGeometry=
function(width,height,widthSegments,heightSegments){width=void 0===width?1:width;height=void 0===height?1:height;widthSegments=void 0===widthSegments?1:widthSegments;heightSegments=void 0===heightSegments?1:heightSegments;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="PlaneGeometry";$jscomp$super$this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};var width_half=width/2,height_half=height/2;widthSegments=Math.floor(widthSegments);
heightSegments=Math.floor(heightSegments);var gridX1=widthSegments+1,gridY1=heightSegments+1,segment_width=width/widthSegments,segment_height=height/heightSegments;height=[];width=[];for(var normals=[],uvs=[],iy=0;iy<gridY1;iy++)for(var y=iy*segment_height-height_half,ix=0;ix<gridX1;ix++)width.push(ix*segment_width-width_half,-y,0),normals.push(0,0,1),uvs.push(ix/widthSegments),uvs.push(1-iy/heightSegments);for(width_half=0;width_half<heightSegments;width_half++)for(height_half=0;height_half<widthSegments;height_half++)gridY1=
height_half+gridX1*(width_half+1),segment_width=height_half+1+gridX1*(width_half+1),segment_height=height_half+1+gridX1*width_half,height.push(height_half+gridX1*width_half,gridY1,segment_height),height.push(gridY1,segment_width,segment_height);$jscomp$super$this.setIndex(height);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(width,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,
2));return $jscomp$super$this};$jscomp.inherits(PlaneGeometry,BufferGeometry);PlaneGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};PlaneGeometry.fromJSON=function(data){return new PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments)};var RingGeometry=function(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){innerRadius=void 0===innerRadius?.5:innerRadius;
outerRadius=void 0===outerRadius?1:outerRadius;thetaSegments=void 0===thetaSegments?32:thetaSegments;phiSegments=void 0===phiSegments?1:phiSegments;thetaStart=void 0===thetaStart?0:thetaStart;thetaLength=void 0===thetaLength?2*Math.PI:thetaLength;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="RingGeometry";$jscomp$super$this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};
thetaSegments=Math.max(3,thetaSegments);phiSegments=Math.max(1,phiSegments);var indices=[],vertices=[],normals=[],uvs=[],radius=innerRadius;innerRadius=(outerRadius-innerRadius)/phiSegments;for(var vertex=new Vector3,uv=new Vector2,j=0;j<=phiSegments;j++){for(var i=0;i<=thetaSegments;i++){var segment=thetaStart+i/thetaSegments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,0,1);uv.x=(vertex.x/outerRadius+1)/
2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y)}radius+=innerRadius}for(outerRadius=0;outerRadius<phiSegments;outerRadius++)for(thetaStart=outerRadius*(thetaSegments+1),thetaLength=0;thetaLength<thetaSegments;thetaLength++)radius=thetaLength+thetaStart,innerRadius=radius+thetaSegments+1,vertex=radius+thetaSegments+2,uv=radius+1,indices.push(radius,innerRadius,uv),indices.push(innerRadius,vertex,uv);$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,
3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(RingGeometry,BufferGeometry);RingGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};RingGeometry.fromJSON=function(data){return new RingGeometry(data.innerRadius,data.outerRadius,data.thetaSegments,
data.phiSegments,data.thetaStart,data.thetaLength)};var ShapeGeometry=function(shapes,curveSegments){function addShape(shape){var indexOffset=vertices.length/3,points=shape.extractPoints(curveSegments);shape=points.shape;var shapeHoles=points.holes;!1===ShapeUtils.isClockWise(shape)&&(shape=shape.reverse());points=0;for(var l=shapeHoles.length;points<l;points++){var shapeHole=shapeHoles[points];!0===ShapeUtils.isClockWise(shapeHole)&&(shapeHoles[points]=shapeHole.reverse())}points=ShapeUtils.triangulateShape(shape,
shapeHoles);l=0;for(shapeHole=shapeHoles.length;l<shapeHole;l++)shape=shape.concat(shapeHoles[l]);shapeHoles=0;for(l=shape.length;shapeHoles<l;shapeHoles++)shapeHole=shape[shapeHoles],vertices.push(shapeHole.x,shapeHole.y,0),normals.push(0,0,1),uvs.push(shapeHole.x,shapeHole.y);shape=0;for(shapeHoles=points.length;shape<shapeHoles;shape++)l=points[shape],indices.push(l[0]+indexOffset,l[1]+indexOffset,l[2]+indexOffset),groupCount+=3}shapes=void 0===shapes?new Shape([new Vector2(0,.5),new Vector2(-.5,
-.5),new Vector2(.5,-.5)]):shapes;curveSegments=void 0===curveSegments?12:curveSegments;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="ShapeGeometry";$jscomp$super$this.parameters={shapes:shapes,curveSegments:curveSegments};var indices=[],vertices=[],normals=[],uvs=[],groupStart=0,groupCount=0;if(!1===Array.isArray(shapes))addShape(shapes);else for(var i=0;i<shapes.length;i++)addShape(shapes[i]),$jscomp$super$this.addGroup(groupStart,groupCount,i),groupStart+=groupCount,
groupCount=0;$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(ShapeGeometry,BufferGeometry);ShapeGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);
return this};ShapeGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this),shapes=this.parameters.shapes;data.shapes=[];if(Array.isArray(shapes))for(var i=0,l=shapes.length;i<l;i++)data.shapes.push(shapes[i].uuid);else data.shapes.push(shapes.uuid);return data};ShapeGeometry.fromJSON=function(data,shapes){for(var geometryShapes=[],j=0,jl=data.shapes.length;j<jl;j++)geometryShapes.push(shapes[data.shapes[j]]);return new ShapeGeometry(geometryShapes,data.curveSegments)};
var SphereGeometry=function(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){radius=void 0===radius?1:radius;widthSegments=void 0===widthSegments?32:widthSegments;heightSegments=void 0===heightSegments?16:heightSegments;phiStart=void 0===phiStart?0:phiStart;phiLength=void 0===phiLength?2*Math.PI:phiLength;thetaStart=void 0===thetaStart?0:thetaStart;thetaLength=void 0===thetaLength?Math.PI:thetaLength;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type=
"SphereGeometry";$jscomp$super$this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};widthSegments=Math.max(3,Math.floor(widthSegments));heightSegments=Math.max(2,Math.floor(heightSegments));for(var thetaEnd=Math.min(thetaStart+thetaLength,Math.PI),index=0,grid=[],vertex=new Vector3,normal=new Vector3,indices=[],vertices=[],normals=[],uvs=[],iy=0;iy<=heightSegments;iy++){var verticesRow=
[],v=iy/heightSegments,uOffset=0;0===iy&&0===thetaStart?uOffset=.5/widthSegments:iy===heightSegments&&thetaEnd===Math.PI&&(uOffset=-.5/widthSegments);for(var ix=0;ix<=widthSegments;ix++){var u=ix/widthSegments;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);normal.copy(vertex).normalize();normals.push(normal.x,
normal.y,normal.z);uvs.push(u+uOffset,1-v);verticesRow.push(index++)}grid.push(verticesRow)}for(radius=0;radius<heightSegments;radius++)for(phiStart=0;phiStart<widthSegments;phiStart++)phiLength=grid[radius][phiStart+1],thetaLength=grid[radius][phiStart],index=grid[radius+1][phiStart],vertex=grid[radius+1][phiStart+1],(0!==radius||0<thetaStart)&&indices.push(phiLength,thetaLength,vertex),(radius!==heightSegments-1||thetaEnd<Math.PI)&&indices.push(thetaLength,index,vertex);$jscomp$super$this.setIndex(indices);
$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(SphereGeometry,BufferGeometry);SphereGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};SphereGeometry.fromJSON=function(data){return new SphereGeometry(data.radius,
data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength)};var TetrahedronGeometry=function(radius,detail){radius=void 0===radius?1:radius;detail=void 0===detail?0:detail;var $jscomp$super$this=PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],radius,detail)||this;$jscomp$super$this.type="TetrahedronGeometry";$jscomp$super$this.parameters={radius:radius,detail:detail};return $jscomp$super$this};$jscomp.inherits(TetrahedronGeometry,
PolyhedronGeometry);TetrahedronGeometry.fromJSON=function(data){return new TetrahedronGeometry(data.radius,data.detail)};var TorusGeometry=function(radius,tube,radialSegments,tubularSegments,arc){radius=void 0===radius?1:radius;tube=void 0===tube?.4:tube;radialSegments=void 0===radialSegments?12:radialSegments;tubularSegments=void 0===tubularSegments?48:tubularSegments;arc=void 0===arc?2*Math.PI:arc;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="TorusGeometry";$jscomp$super$this.parameters=
{radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radialSegments=Math.floor(radialSegments);tubularSegments=Math.floor(tubularSegments);for(var indices=[],vertices=[],normals=[],uvs=[],center=new Vector3,vertex=new Vector3,normal=new Vector3,j=0;j<=radialSegments;j++)for(var i=0;i<=tubularSegments;i++){var u=i/tubularSegments*arc,v=j/radialSegments*Math.PI*2;vertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);
vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);center.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(i/tubularSegments);uvs.push(j/radialSegments)}for(radius=1;radius<=radialSegments;radius++)for(tube=1;tube<=tubularSegments;tube++)arc=(tubularSegments+1)*(radius-1)+tube-1,center=(tubularSegments+1)*(radius-1)+tube,vertex=(tubularSegments+1)*radius+tube,indices.push((tubularSegments+
1)*radius+tube-1,arc,vertex),indices.push(arc,center,vertex);$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(TorusGeometry,BufferGeometry);TorusGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);
this.parameters=Object.assign({},source.parameters);return this};TorusGeometry.fromJSON=function(data){return new TorusGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc)};var TorusKnotGeometry=function(radius$jscomp$0,tube,tubularSegments,radialSegments,p$jscomp$0,q$jscomp$0){function calculatePositionOnCurve(u,p,q,radius,position){var su=Math.sin(u);p=q/p*u;q=Math.cos(p);position.x=radius*(2+q)*.5*Math.cos(u);position.y=radius*(2+q)*su*.5;position.z=radius*Math.sin(p)*
.5}radius$jscomp$0=void 0===radius$jscomp$0?1:radius$jscomp$0;tube=void 0===tube?.4:tube;tubularSegments=void 0===tubularSegments?64:tubularSegments;radialSegments=void 0===radialSegments?8:radialSegments;p$jscomp$0=void 0===p$jscomp$0?2:p$jscomp$0;q$jscomp$0=void 0===q$jscomp$0?3:q$jscomp$0;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="TorusKnotGeometry";$jscomp$super$this.parameters={radius:radius$jscomp$0,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,
p:p$jscomp$0,q:q$jscomp$0};tubularSegments=Math.floor(tubularSegments);radialSegments=Math.floor(radialSegments);for(var indices=[],vertices=[],normals=[],uvs=[],vertex=new Vector3,normal=new Vector3,P1=new Vector3,P2=new Vector3,B=new Vector3,T=new Vector3,N=new Vector3,i=0;i<=tubularSegments;++i){var u$jscomp$0=i/tubularSegments*p$jscomp$0*Math.PI*2;calculatePositionOnCurve(u$jscomp$0,p$jscomp$0,q$jscomp$0,radius$jscomp$0,P1);calculatePositionOnCurve(u$jscomp$0+.01,p$jscomp$0,q$jscomp$0,radius$jscomp$0,
P2);T.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);B.normalize();N.normalize();for(u$jscomp$0=0;u$jscomp$0<=radialSegments;++u$jscomp$0){var v=u$jscomp$0/radialSegments*Math.PI*2,cx=-tube*Math.cos(v);v=tube*Math.sin(v);vertex.x=P1.x+(cx*N.x+v*B.x);vertex.y=P1.y+(cx*N.y+v*B.y);vertex.z=P1.z+(cx*N.z+v*B.z);vertices.push(vertex.x,vertex.y,vertex.z);normal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(i/tubularSegments);uvs.push(u$jscomp$0/
radialSegments)}}for(radius$jscomp$0=1;radius$jscomp$0<=tubularSegments;radius$jscomp$0++)for(tube=1;tube<=radialSegments;tube++)p$jscomp$0=(radialSegments+1)*radius$jscomp$0+(tube-1),q$jscomp$0=(radialSegments+1)*radius$jscomp$0+tube,vertex=(radialSegments+1)*(radius$jscomp$0-1)+tube,indices.push((radialSegments+1)*(radius$jscomp$0-1)+(tube-1),p$jscomp$0,vertex),indices.push(p$jscomp$0,q$jscomp$0,vertex);$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,
3));$jscomp$super$this.setAttribute("normal",new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(TorusKnotGeometry,BufferGeometry);TorusKnotGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};TorusKnotGeometry.fromJSON=function(data){return new TorusKnotGeometry(data.radius,data.tube,data.tubularSegments,
data.radialSegments,data.p,data.q)};var TubeGeometry=function(path,tubularSegments,radius,radialSegments,closed){function generateSegment(i){P=path.getPointAt(i/tubularSegments,P);var N=frames.normals[i];i=frames.binormals[i];for(var j=0;j<=radialSegments;j++){var v=j/radialSegments*Math.PI*2,sin=Math.sin(v);v=-Math.cos(v);normal.x=v*N.x+sin*i.x;normal.y=v*N.y+sin*i.y;normal.z=v*N.z+sin*i.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);vertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*
normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z)}}path=void 0===path?new QuadraticBezierCurve3(new Vector3(-1,-1,0),new Vector3(-1,1,0),new Vector3(1,1,0)):path;tubularSegments=void 0===tubularSegments?64:tubularSegments;radius=void 0===radius?1:radius;radialSegments=void 0===radialSegments?8:radialSegments;closed=void 0===closed?!1:closed;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="TubeGeometry";$jscomp$super$this.parameters={path:path,
tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};var frames=path.computeFrenetFrames(tubularSegments,closed);$jscomp$super$this.tangents=frames.tangents;$jscomp$super$this.normals=frames.normals;$jscomp$super$this.binormals=frames.binormals;var vertex=new Vector3,normal=new Vector3,uv=new Vector2,P=new Vector3,vertices=[],normals=[],uvs=[],indices=[];(function(){for(var i=0;i<tubularSegments;i++)generateSegment(i);generateSegment(!1===closed?tubularSegments:
0);for(i=0;i<=tubularSegments;i++)for(var j=0;j<=radialSegments;j++)uv.x=i/tubularSegments,uv.y=j/radialSegments,uvs.push(uv.x,uv.y);for(i=1;i<=tubularSegments;i++)for(j=1;j<=radialSegments;j++){var b=(radialSegments+1)*i+(j-1),c=(radialSegments+1)*i+j,d=(radialSegments+1)*(i-1)+j;indices.push((radialSegments+1)*(i-1)+(j-1),b,d);indices.push(b,c,d)}})();$jscomp$super$this.setIndex(indices);$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("normal",
new Float32BufferAttribute(normals,3));$jscomp$super$this.setAttribute("uv",new Float32BufferAttribute(uvs,2));return $jscomp$super$this};$jscomp.inherits(TubeGeometry,BufferGeometry);TubeGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};TubeGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);data.path=this.parameters.path.toJSON();return data};TubeGeometry.fromJSON=
function(data){return new TubeGeometry((new Curves[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed)};var WireframeGeometry=function(geometry){geometry=void 0===geometry?null:geometry;var $jscomp$super$this=BufferGeometry.call(this)||this;$jscomp$super$this.type="WireframeGeometry";$jscomp$super$this.parameters={geometry:geometry};if(null!==geometry){var vertices=[],edges=new Set,start=new Vector3,end=new Vector3;if(null!==geometry.index){var position=
geometry.attributes.position,indices=geometry.index;geometry=geometry.groups;0===geometry.length&&(geometry=[{start:0,count:indices.count,materialIndex:0}]);for(var o=0,ol=geometry.length;o<ol;++o){var group=geometry[o],groupStart=group.start,i=groupStart;for(group=groupStart+group.count;i<group;i+=3)for(groupStart=0;3>groupStart;groupStart++){var index1=indices.getX(i+groupStart),index2=indices.getX(i+(groupStart+1)%3);start.fromBufferAttribute(position,index1);end.fromBufferAttribute(position,index2);
!0===isUniqueEdge(start,end,edges)&&(vertices.push(start.x,start.y,start.z),vertices.push(end.x,end.y,end.z))}}}else for(position=geometry.attributes.position,indices=0,geometry=position.count/3;indices<geometry;indices++)for(o=0;3>o;o++)ol=3*indices+(o+1)%3,start.fromBufferAttribute(position,3*indices+o),end.fromBufferAttribute(position,ol),!0===isUniqueEdge(start,end,edges)&&(vertices.push(start.x,start.y,start.z),vertices.push(end.x,end.y,end.z));$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,
3))}return $jscomp$super$this};$jscomp.inherits(WireframeGeometry,BufferGeometry);WireframeGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.parameters=Object.assign({},source.parameters);return this};var Geometries=Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,CapsuleGeometry:CapsuleGeometry,CircleGeometry:CircleGeometry,ConeGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,
ExtrudeGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,PlaneGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TorusGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry}),ShadowMaterial=function(parameters){var $jscomp$super$this=
Material.call(this)||this;$jscomp$super$this.isShadowMaterial=!0;$jscomp$super$this.type="ShadowMaterial";$jscomp$super$this.color=new Color(0);$jscomp$super$this.transparent=!0;$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(ShadowMaterial,Material);ShadowMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.fog=source.fog;return this};var RawShaderMaterial=function(parameters){parameters=
ShaderMaterial.call(this,parameters)||this;parameters.isRawShaderMaterial=!0;parameters.type="RawShaderMaterial";return parameters};$jscomp.inherits(RawShaderMaterial,ShaderMaterial);var MeshStandardMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshStandardMaterial=!0;$jscomp$super$this.type="MeshStandardMaterial";$jscomp$super$this.defines={STANDARD:""};$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.roughness=1;$jscomp$super$this.metalness=
0;$jscomp$super$this.map=null;$jscomp$super$this.lightMap=null;$jscomp$super$this.lightMapIntensity=1;$jscomp$super$this.aoMap=null;$jscomp$super$this.aoMapIntensity=1;$jscomp$super$this.emissive=new Color(0);$jscomp$super$this.emissiveIntensity=1;$jscomp$super$this.emissiveMap=null;$jscomp$super$this.bumpMap=null;$jscomp$super$this.bumpScale=1;$jscomp$super$this.normalMap=null;$jscomp$super$this.normalMapType=0;$jscomp$super$this.normalScale=new Vector2(1,1);$jscomp$super$this.displacementMap=null;
$jscomp$super$this.displacementScale=1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.roughnessMap=null;$jscomp$super$this.metalnessMap=null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.envMap=null;$jscomp$super$this.envMapRotation=new Euler;$jscomp$super$this.envMapIntensity=1;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.wireframeLinecap="round";$jscomp$super$this.wireframeLinejoin="round";$jscomp$super$this.flatShading=!1;$jscomp$super$this.fog=
!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshStandardMaterial,Material);MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={STANDARD:""};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);
this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;
this.envMap=source.envMap;this.envMapRotation.copy(source.envMapRotation);this.envMapIntensity=source.envMapIntensity;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.flatShading=source.flatShading;this.fog=source.fog;return this};var MeshPhysicalMaterial=function(parameters){var $jscomp$super$this=MeshStandardMaterial.call(this)||this;$jscomp$super$this.isMeshPhysicalMaterial=
!0;$jscomp$super$this.defines={STANDARD:"",PHYSICAL:""};$jscomp$super$this.type="MeshPhysicalMaterial";$jscomp$super$this.anisotropyRotation=0;$jscomp$super$this.anisotropyMap=null;$jscomp$super$this.clearcoatMap=null;$jscomp$super$this.clearcoatRoughness=0;$jscomp$super$this.clearcoatRoughnessMap=null;$jscomp$super$this.clearcoatNormalScale=new Vector2(1,1);$jscomp$super$this.clearcoatNormalMap=null;$jscomp$super$this.ior=1.5;Object.defineProperty($jscomp$super$this,"reflectivity",{get:function(){return clamp(2.5*
(this.ior-1)/(this.ior+1),0,1)},set:function(reflectivity){this.ior=(1+.4*reflectivity)/(1-.4*reflectivity)}});$jscomp$super$this.iridescenceMap=null;$jscomp$super$this.iridescenceIOR=1.3;$jscomp$super$this.iridescenceThicknessRange=[100,400];$jscomp$super$this.iridescenceThicknessMap=null;$jscomp$super$this.sheenColor=new Color(0);$jscomp$super$this.sheenColorMap=null;$jscomp$super$this.sheenRoughness=1;$jscomp$super$this.sheenRoughnessMap=null;$jscomp$super$this.transmissionMap=null;$jscomp$super$this.thickness=
0;$jscomp$super$this.thicknessMap=null;$jscomp$super$this.attenuationDistance=Infinity;$jscomp$super$this.attenuationColor=new Color(1,1,1);$jscomp$super$this.specularIntensity=1;$jscomp$super$this.specularIntensityMap=null;$jscomp$super$this.specularColor=new Color(1,1,1);$jscomp$super$this.specularColorMap=null;$jscomp$super$this._anisotropy=0;$jscomp$super$this._clearcoat=0;$jscomp$super$this._dispersion=0;$jscomp$super$this._iridescence=0;$jscomp$super$this._sheen=0;$jscomp$super$this._transmission=
0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshPhysicalMaterial,MeshStandardMaterial);MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines={STANDARD:"",PHYSICAL:""};this.anisotropy=source.anisotropy;this.anisotropyRotation=source.anisotropyRotation;this.anisotropyMap=source.anisotropyMap;this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;
this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.dispersion=source.dispersion;this.ior=source.ior;this.iridescence=source.iridescence;this.iridescenceMap=source.iridescenceMap;this.iridescenceIOR=source.iridescenceIOR;this.iridescenceThicknessRange=[].concat($jscomp.arrayFromIterable(source.iridescenceThicknessRange));this.iridescenceThicknessMap=source.iridescenceThicknessMap;
this.sheen=source.sheen;this.sheenColor.copy(source.sheenColor);this.sheenColorMap=source.sheenColorMap;this.sheenRoughness=source.sheenRoughness;this.sheenRoughnessMap=source.sheenRoughnessMap;this.transmission=source.transmission;this.transmissionMap=source.transmissionMap;this.thickness=source.thickness;this.thicknessMap=source.thicknessMap;this.attenuationDistance=source.attenuationDistance;this.attenuationColor.copy(source.attenuationColor);this.specularIntensity=source.specularIntensity;this.specularIntensityMap=
source.specularIntensityMap;this.specularColor.copy(source.specularColor);this.specularColorMap=source.specularColorMap;return this};$jscomp.global.Object.defineProperties(MeshPhysicalMaterial.prototype,{anisotropy:{configurable:!0,enumerable:!0,get:function(){return this._anisotropy},set:function(value){0<this._anisotropy!==0<value&&this.version++;this._anisotropy=value}},clearcoat:{configurable:!0,enumerable:!0,get:function(){return this._clearcoat},set:function(value){0<this._clearcoat!==0<value&&
this.version++;this._clearcoat=value}},iridescence:{configurable:!0,enumerable:!0,get:function(){return this._iridescence},set:function(value){0<this._iridescence!==0<value&&this.version++;this._iridescence=value}},dispersion:{configurable:!0,enumerable:!0,get:function(){return this._dispersion},set:function(value){0<this._dispersion!==0<value&&this.version++;this._dispersion=value}},sheen:{configurable:!0,enumerable:!0,get:function(){return this._sheen},set:function(value){0<this._sheen!==0<value&&
this.version++;this._sheen=value}},transmission:{configurable:!0,enumerable:!0,get:function(){return this._transmission},set:function(value){0<this._transmission!==0<value&&this.version++;this._transmission=value}}});var MeshPhongMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshPhongMaterial=!0;$jscomp$super$this.type="MeshPhongMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.specular=new Color(1118481);$jscomp$super$this.shininess=
30;$jscomp$super$this.map=null;$jscomp$super$this.lightMap=null;$jscomp$super$this.lightMapIntensity=1;$jscomp$super$this.aoMap=null;$jscomp$super$this.aoMapIntensity=1;$jscomp$super$this.emissive=new Color(0);$jscomp$super$this.emissiveIntensity=1;$jscomp$super$this.emissiveMap=null;$jscomp$super$this.bumpMap=null;$jscomp$super$this.bumpScale=1;$jscomp$super$this.normalMap=null;$jscomp$super$this.normalMapType=0;$jscomp$super$this.normalScale=new Vector2(1,1);$jscomp$super$this.displacementMap=null;
$jscomp$super$this.displacementScale=1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.specularMap=null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.envMap=null;$jscomp$super$this.envMapRotation=new Euler;$jscomp$super$this.combine=0;$jscomp$super$this.reflectivity=1;$jscomp$super$this.refractionRatio=.98;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.wireframeLinecap="round";$jscomp$super$this.wireframeLinejoin="round";$jscomp$super$this.flatShading=
!1;$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshPhongMaterial,Material);MeshPhongMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);
this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapRotation.copy(source.envMapRotation);
this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.flatShading=source.flatShading;this.fog=source.fog;return this};var MeshToonMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshToonMaterial=!0;$jscomp$super$this.defines=
{TOON:""};$jscomp$super$this.type="MeshToonMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.map=null;$jscomp$super$this.gradientMap=null;$jscomp$super$this.lightMap=null;$jscomp$super$this.lightMapIntensity=1;$jscomp$super$this.aoMap=null;$jscomp$super$this.aoMapIntensity=1;$jscomp$super$this.emissive=new Color(0);$jscomp$super$this.emissiveIntensity=1;$jscomp$super$this.emissiveMap=null;$jscomp$super$this.bumpMap=null;$jscomp$super$this.bumpScale=1;$jscomp$super$this.normalMap=
null;$jscomp$super$this.normalMapType=0;$jscomp$super$this.normalScale=new Vector2(1,1);$jscomp$super$this.displacementMap=null;$jscomp$super$this.displacementScale=1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.alphaMap=null;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.wireframeLinecap="round";$jscomp$super$this.wireframeLinejoin="round";$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshToonMaterial,
Material);MeshToonMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;
this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.fog=source.fog;return this};var MeshNormalMaterial=
function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshNormalMaterial=!0;$jscomp$super$this.type="MeshNormalMaterial";$jscomp$super$this.bumpMap=null;$jscomp$super$this.bumpScale=1;$jscomp$super$this.normalMap=null;$jscomp$super$this.normalMapType=0;$jscomp$super$this.normalScale=new Vector2(1,1);$jscomp$super$this.displacementMap=null;$jscomp$super$this.displacementScale=1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=
1;$jscomp$super$this.flatShading=!1;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshNormalMaterial,Material);MeshNormalMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;
this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.flatShading=source.flatShading;return this};var MeshLambertMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshLambertMaterial=!0;$jscomp$super$this.type="MeshLambertMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.map=null;$jscomp$super$this.lightMap=null;$jscomp$super$this.lightMapIntensity=
1;$jscomp$super$this.aoMap=null;$jscomp$super$this.aoMapIntensity=1;$jscomp$super$this.emissive=new Color(0);$jscomp$super$this.emissiveIntensity=1;$jscomp$super$this.emissiveMap=null;$jscomp$super$this.bumpMap=null;$jscomp$super$this.bumpScale=1;$jscomp$super$this.normalMap=null;$jscomp$super$this.normalMapType=0;$jscomp$super$this.normalScale=new Vector2(1,1);$jscomp$super$this.displacementMap=null;$jscomp$super$this.displacementScale=1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.specularMap=
null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.envMap=null;$jscomp$super$this.envMapRotation=new Euler;$jscomp$super$this.combine=0;$jscomp$super$this.reflectivity=1;$jscomp$super$this.refractionRatio=.98;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.wireframeLinecap="round";$jscomp$super$this.wireframeLinejoin="round";$jscomp$super$this.flatShading=!1;$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};
$jscomp.inherits(MeshLambertMaterial,Material);MeshLambertMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;
this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapRotation.copy(source.envMapRotation);this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;
this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.flatShading=source.flatShading;this.fog=source.fog;return this};var MeshDepthMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshDepthMaterial=!0;$jscomp$super$this.type="MeshDepthMaterial";$jscomp$super$this.depthPacking=3200;$jscomp$super$this.map=null;$jscomp$super$this.alphaMap=
null;$jscomp$super$this.displacementMap=null;$jscomp$super$this.displacementScale=1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.wireframe=!1;$jscomp$super$this.wireframeLinewidth=1;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshDepthMaterial,Material);MeshDepthMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.depthPacking=source.depthPacking;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=
source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this};var MeshDistanceMaterial=function(parameters){var $jscomp$super$this=Material.call(this)||this;$jscomp$super$this.isMeshDistanceMaterial=!0;$jscomp$super$this.type="MeshDistanceMaterial";$jscomp$super$this.map=null;$jscomp$super$this.alphaMap=null;$jscomp$super$this.displacementMap=null;$jscomp$super$this.displacementScale=
1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshDistanceMaterial,Material);MeshDistanceMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this};var MeshMatcapMaterial=function(parameters){var $jscomp$super$this=
Material.call(this)||this;$jscomp$super$this.isMeshMatcapMaterial=!0;$jscomp$super$this.defines={MATCAP:""};$jscomp$super$this.type="MeshMatcapMaterial";$jscomp$super$this.color=new Color(16777215);$jscomp$super$this.matcap=null;$jscomp$super$this.map=null;$jscomp$super$this.bumpMap=null;$jscomp$super$this.bumpScale=1;$jscomp$super$this.normalMap=null;$jscomp$super$this.normalMapType=0;$jscomp$super$this.normalScale=new Vector2(1,1);$jscomp$super$this.displacementMap=null;$jscomp$super$this.displacementScale=
1;$jscomp$super$this.displacementBias=0;$jscomp$super$this.alphaMap=null;$jscomp$super$this.flatShading=!1;$jscomp$super$this.fog=!0;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(MeshMatcapMaterial,Material);MeshMatcapMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={MATCAP:""};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;
this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.flatShading=source.flatShading;this.fog=source.fog;return this};var LineDashedMaterial=function(parameters){var $jscomp$super$this=LineBasicMaterial.call(this)||this;$jscomp$super$this.isLineDashedMaterial=!0;$jscomp$super$this.type=
"LineDashedMaterial";$jscomp$super$this.scale=1;$jscomp$super$this.dashSize=3;$jscomp$super$this.gapSize=1;$jscomp$super$this.setValues(parameters);return $jscomp$super$this};$jscomp.inherits(LineDashedMaterial,LineBasicMaterial);LineDashedMaterial.prototype.copy=function(source){LineBasicMaterial.prototype.copy.call(this,source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this};var AnimationUtils=function(){};AnimationUtils.convertArray=function(array,
type){return convertArray(array,type)};AnimationUtils.isTypedArray=function(object){return isTypedArray(object)};AnimationUtils.getKeyframeOrder=function(times){return getKeyframeOrder(times)};AnimationUtils.sortedArray=function(values,stride,order){return sortedArray(values,stride,order)};AnimationUtils.flattenJSON=function(jsonKeys,times,values,valuePropertyName){flattenJSON(jsonKeys,times,values,valuePropertyName)};AnimationUtils.subclip=function(sourceClip,name,startFrame,endFrame,fps){fps=void 0===
fps?30:fps;fps=void 0===fps?30:fps;sourceClip=sourceClip.clone();sourceClip.name=name;name=[];for(var i=0;i<sourceClip.tracks.length;++i){for(var track=sourceClip.tracks[i],valueSize=track.getValueSize(),times=[],values=[],j=0;j<track.times.length;++j){var frame=track.times[j]*fps;if(!(frame<startFrame||frame>=endFrame))for(times.push(track.times[j]),frame=0;frame<valueSize;++frame)values.push(track.values[j*valueSize+frame])}0!==times.length&&(track.times=convertArray(times,track.times.constructor),
track.values=convertArray(values,track.values.constructor),name.push(track))}sourceClip.tracks=name;startFrame=Infinity;for(endFrame=0;endFrame<sourceClip.tracks.length;++endFrame)startFrame>sourceClip.tracks[endFrame].times[0]&&(startFrame=sourceClip.tracks[endFrame].times[0]);for(endFrame=0;endFrame<sourceClip.tracks.length;++endFrame)sourceClip.tracks[endFrame].shift(-1*startFrame);sourceClip.resetDuration();return sourceClip};AnimationUtils.makeClipAdditive=function(targetClip,referenceFrame,
referenceClip,fps){return makeClipAdditive(targetClip,void 0===referenceFrame?0:referenceFrame,void 0===referenceClip?targetClip:referenceClip,void 0===fps?30:fps)};var Interpolant=function(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=void 0!==resultBuffer?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;this.settings=null;this.DefaultSettings_=
{}};Interpolant.prototype.evaluate=function(t){var pp=this.parameterPositions,i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];a:{b:{c:{d:if(!(t<t1)){for(var giveUpAt=i1+2;;){if(void 0===t1){if(t<t0)break d;this._cachedIndex=i1=pp.length;return this.copySampleValue_(i1-1)}if(i1===giveUpAt)break;t0=t1;t1=pp[++i1];if(t<t1)break b}t0=pp.length;break c}if(t>=t0)break a;else{t1=pp[1];t<t1&&(i1=2,t0=t1);for(giveUpAt=i1-2;;){if(void 0===t0)return this._cachedIndex=0,this.copySampleValue_(0);if(i1===giveUpAt)break;
t1=t0;t0=pp[--i1-1];if(t>=t0)break b}t0=i1;i1=0}}for(;i1<t0;)t1=i1+t0>>>1,t<pp[t1]?t0=t1:i1=t1+1;t1=pp[i1];t0=pp[i1-1];if(void 0===t0)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===t1)return this._cachedIndex=i1=pp.length,this.copySampleValue_(i1-1)}this._cachedIndex=i1;this.intervalChanged_(i1,t0,t1)}return this.interpolate_(i1,t0,t,t1)};Interpolant.prototype.getSettings_=function(){return this.settings||this.DefaultSettings_};Interpolant.prototype.copySampleValue_=function(index){var result=
this.resultBuffer,values=this.sampleValues,stride=this.valueSize;index*=stride;for(var i=0;i!==stride;++i)result[i]=values[index+i];return result};Interpolant.prototype.interpolate_=function(){throw Error("call to abstract method");};Interpolant.prototype.intervalChanged_=function(){};var CubicInterpolant=function(parameterPositions,sampleValues,sampleSize,resultBuffer){parameterPositions=Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)||this;parameterPositions._weightPrev=
-0;parameterPositions._offsetPrev=-0;parameterPositions._weightNext=-0;parameterPositions._offsetNext=-0;parameterPositions.DefaultSettings_={endingStart:2400,endingEnd:2400};return parameterPositions};$jscomp.inherits(CubicInterpolant,Interpolant);CubicInterpolant.prototype.intervalChanged_=function(i1,t0,t1){var pp=this.parameterPositions,iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(void 0===tPrev)switch(this.getSettings_().endingStart){case 2401:iPrev=i1;tPrev=2*t0-t1;break;case 2402:iPrev=
pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:iPrev=i1,tPrev=t1}if(void 0===tNext)switch(this.getSettings_().endingEnd){case 2401:iNext=i1;tNext=2*t1-t0;break;case 2402:iNext=1;tNext=t1+pp[1]-pp[0];break;default:iNext=i1-1,tNext=t0}i1=.5*(t1-t0);pp=this.valueSize;this._weightPrev=i1/(t0-tPrev);this._weightNext=i1/(tNext-t1);this._offsetPrev=iPrev*pp;this._offsetNext=iNext*pp};CubicInterpolant.prototype.interpolate_=function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,
stride=this.valueSize;i1*=stride;var o0=i1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0);t=p*p;t1=t*p;t0=-wP*t1+2*wP*t-wP*p;wP=(1+wP)*t1+(-1.5-2*wP)*t+(-.5+wP)*p+1;p=(-1-wN)*t1+(1.5+wN)*t+.5*p;wN=wN*t1-wN*t;for(t=0;t!==stride;++t)result[t]=t0*values[oP+t]+wP*values[o0+t]+p*values[i1+t]+wN*values[oN+t];return result};var LinearInterpolant=function(parameterPositions,sampleValues,sampleSize,resultBuffer){return Interpolant.call(this,parameterPositions,
sampleValues,sampleSize,resultBuffer)||this};$jscomp.inherits(LinearInterpolant,Interpolant);LinearInterpolant.prototype.interpolate_=function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;i1*=stride;var offset0=i1-stride;t0=(t-t0)/(t1-t0);t=1-t0;for(t1=0;t1!==stride;++t1)result[t1]=values[offset0+t1]*t+values[i1+t1]*t0;return result};var DiscreteInterpolant=function(parameterPositions,sampleValues,sampleSize,resultBuffer){return Interpolant.call(this,parameterPositions,
sampleValues,sampleSize,resultBuffer)||this};$jscomp.inherits(DiscreteInterpolant,Interpolant);DiscreteInterpolant.prototype.interpolate_=function(i1){return this.copySampleValue_(i1-1)};var KeyframeTrack=function(name,times,values,interpolation){if(void 0===name)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===times||0===times.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+name);this.name=name;this.times=convertArray(times,this.TimeBufferType);this.values=
convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation)};KeyframeTrack.toJSON=function(track){var trackType=track.constructor;if(trackType.toJSON!==this.toJSON)trackType=trackType.toJSON(track);else{trackType={name:track.name,times:convertArray(track.times,Array),values:convertArray(track.values,Array)};var interpolation=track.getInterpolation();interpolation!==track.DefaultInterpolation&&(trackType.interpolation=interpolation)}trackType.type=track.ValueTypeName;
return trackType};KeyframeTrack.prototype.InterpolantFactoryMethodDiscrete=function(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result)};KeyframeTrack.prototype.InterpolantFactoryMethodLinear=function(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result)};KeyframeTrack.prototype.InterpolantFactoryMethodSmooth=function(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result)};KeyframeTrack.prototype.setInterpolation=
function(interpolation){switch(interpolation){case 2300:var factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case 2301:factoryMethod=this.InterpolantFactoryMethodLinear;break;case 2302:factoryMethod=this.InterpolantFactoryMethodSmooth}if(void 0===factoryMethod){factoryMethod="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(interpolation!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);
else throw Error(factoryMethod);console.warn("THREE.KeyframeTrack:",factoryMethod);return this}this.createInterpolant=factoryMethod;return this};KeyframeTrack.prototype.getInterpolation=function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}};KeyframeTrack.prototype.getValueSize=function(){return this.values.length/this.times.length};KeyframeTrack.prototype.shift=
function(timeOffset){if(0!==timeOffset)for(var times=this.times,i=0,n=times.length;i!==n;++i)times[i]+=timeOffset;return this};KeyframeTrack.prototype.scale=function(timeScale){if(1!==timeScale)for(var times=this.times,i=0,n=times.length;i!==n;++i)times[i]*=timeScale;return this};KeyframeTrack.prototype.trim=function(startTime,endTime){for(var times=this.times,nKeys=times.length,from=0,to=nKeys-1;from!==nKeys&&times[from]<startTime;)++from;for(;-1!==to&&times[to]>endTime;)--to;++to;if(0!==from||to!==
nKeys)from>=to&&(to=Math.max(to,1),from=to-1),startTime=this.getValueSize(),this.times=times.slice(from,to),this.values=this.values.slice(from*startTime,to*startTime);return this};KeyframeTrack.prototype.validate=function(){var valid=!0,valueSize=this.getValueSize();0!==valueSize-Math.floor(valueSize)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),valid=!1);var times=this.times;valueSize=this.values;var nKeys=times.length;0===nKeys&&(console.error("THREE.KeyframeTrack: Track is empty.",
this),valid=!1);for(var prevTime=null,i=0;i!==nKeys;i++){var currTime=times[i];if("number"===typeof currTime&&isNaN(currTime)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,currTime);valid=!1;break}if(null!==prevTime&&prevTime>currTime){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,currTime,prevTime);valid=!1;break}prevTime=currTime}if(void 0!==valueSize&&isTypedArray(valueSize))for(times=0,nKeys=valueSize.length;times!==nKeys;++times)if(prevTime=valueSize[times],
isNaN(prevTime)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,times,prevTime);valid=!1;break}return valid};KeyframeTrack.prototype.optimize=function(){for(var times=this.times.slice(),values=this.values.slice(),stride=this.getValueSize(),smoothInterpolation=2302===this.getInterpolation(),lastIndex=times.length-1,writeIndex=1,i=1;i<lastIndex;++i){var keep=!1,time=times[i];if(time!==times[i+1]&&(1!==i||time!==times[0]))if(smoothInterpolation)keep=!0;else{time=i*stride;for(var offsetP=
time-stride,offsetN=time+stride,j=0;j!==stride;++j){var value=values[time+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=!0;break}}}if(keep){if(i!==writeIndex)for(times[writeIndex]=times[i],keep=i*stride,time=writeIndex*stride,offsetP=0;offsetP!==stride;++offsetP)values[time+offsetP]=values[keep+offsetP];++writeIndex}}if(0<lastIndex){times[writeIndex]=times[lastIndex];smoothInterpolation=lastIndex*stride;lastIndex=writeIndex*stride;for(i=0;i!==stride;++i)values[lastIndex+i]=values[smoothInterpolation+
i];++writeIndex}writeIndex!==times.length?(this.times=times.slice(0,writeIndex),this.values=values.slice(0,writeIndex*stride)):(this.times=times,this.values=values);return this};KeyframeTrack.prototype.clone=function(){var times=this.times.slice(),values=this.values.slice();times=new this.constructor(this.name,times,values);times.createInterpolant=this.createInterpolant;return times};KeyframeTrack.prototype.ValueTypeName="";KeyframeTrack.prototype.TimeBufferType=Float32Array;KeyframeTrack.prototype.ValueBufferType=
Float32Array;KeyframeTrack.prototype.DefaultInterpolation=2301;var BooleanKeyframeTrack=function(name,times,values){return KeyframeTrack.call(this,name,times,values)||this};$jscomp.inherits(BooleanKeyframeTrack,KeyframeTrack);BooleanKeyframeTrack.prototype.ValueTypeName="bool";BooleanKeyframeTrack.prototype.ValueBufferType=Array;BooleanKeyframeTrack.prototype.DefaultInterpolation=2300;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=
void 0;var ColorKeyframeTrack=function(name,times,values,interpolation){return KeyframeTrack.call(this,name,times,values,interpolation)||this};$jscomp.inherits(ColorKeyframeTrack,KeyframeTrack);ColorKeyframeTrack.prototype.ValueTypeName="color";var NumberKeyframeTrack=function(name,times,values,interpolation){return KeyframeTrack.call(this,name,times,values,interpolation)||this};$jscomp.inherits(NumberKeyframeTrack,KeyframeTrack);NumberKeyframeTrack.prototype.ValueTypeName="number";var QuaternionLinearInterpolant=
function(parameterPositions,sampleValues,sampleSize,resultBuffer){return Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)||this};$jscomp.inherits(QuaternionLinearInterpolant,Interpolant);QuaternionLinearInterpolant.prototype.interpolate_=function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;t0=(t-t0)/(t1-t0);i1*=stride;for(t=i1+stride;i1!==t;i1+=4)Quaternion.slerpFlat(result,0,values,i1-stride,values,i1,t0);return result};var QuaternionKeyframeTrack=
function(name,times,values,interpolation){return KeyframeTrack.call(this,name,times,values,interpolation)||this};$jscomp.inherits(QuaternionKeyframeTrack,KeyframeTrack);QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodLinear=function(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result)};QuaternionKeyframeTrack.prototype.ValueTypeName="quaternion";QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;var StringKeyframeTrack=function(name,
times,values){return KeyframeTrack.call(this,name,times,values)||this};$jscomp.inherits(StringKeyframeTrack,KeyframeTrack);StringKeyframeTrack.prototype.ValueTypeName="string";StringKeyframeTrack.prototype.ValueBufferType=Array;StringKeyframeTrack.prototype.DefaultInterpolation=2300;StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=void 0;StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=void 0;var VectorKeyframeTrack=function(name,times,values,interpolation){return KeyframeTrack.call(this,
name,times,values,interpolation)||this};$jscomp.inherits(VectorKeyframeTrack,KeyframeTrack);VectorKeyframeTrack.prototype.ValueTypeName="vector";var AnimationClip=function(name,duration,tracks,blendMode){tracks=void 0===tracks?[]:tracks;this.name=void 0===name?"":name;this.tracks=tracks;this.duration=void 0===duration?-1:duration;this.blendMode=void 0===blendMode?2500:blendMode;this.uuid=generateUUID();this.userData={};0>this.duration&&this.resetDuration()};AnimationClip.parse=function(json){for(var tracks=
[],jsonTracks=json.tracks,frameTime=1/(json.fps||1),i=0,n=jsonTracks.length;i!==n;++i)tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));tracks=new this(json.name,json.duration,tracks,json.blendMode);tracks.uuid=json.uuid;tracks.userData=JSON.parse(json.userData||"{}");return tracks};AnimationClip.toJSON=function(clip){var tracks=[],clipTracks=clip.tracks;clip={name:clip.name,duration:clip.duration,tracks:tracks,uuid:clip.uuid,blendMode:clip.blendMode,userData:JSON.stringify(clip.userData)};
for(var i=0,n=clipTracks.length;i!==n;++i)tracks.push(KeyframeTrack.toJSON(clipTracks[i]));return clip};AnimationClip.CreateFromMorphTargetSequence=function(name,morphTargetSequence,fps,noLoop){for(var numMorphTargets=morphTargetSequence.length,tracks=[],i=0;i<numMorphTargets;i++){var times=[],values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);var order=getKeyframeOrder(times);times=sortedArray(times,1,order);values=sortedArray(values,1,order);noLoop||
0!==times[0]||(times.push(numMorphTargets),values.push(values[0]));tracks.push((new NumberKeyframeTrack(".morphTargetInfluences["+morphTargetSequence[i].name+"]",times,values)).scale(1/fps))}return new this(name,-1,tracks)};AnimationClip.findByName=function(objectOrClipArray,name){var clipArray=objectOrClipArray;Array.isArray(objectOrClipArray)||(clipArray=objectOrClipArray.geometry&&objectOrClipArray.geometry.animations||objectOrClipArray.animations);for(objectOrClipArray=0;objectOrClipArray<clipArray.length;objectOrClipArray++)if(clipArray[objectOrClipArray].name===
name)return clipArray[objectOrClipArray];return null};AnimationClip.CreateClipsFromMorphTargetSequences=function(morphTargets,fps,noLoop){for(var animationToMorphTargets={},pattern=/^([\w-]*?)([\d]+)$/,i=0,il=morphTargets.length;i<il;i++){var morphTarget=morphTargets[i],parts=morphTarget.name.match(pattern);if(parts&&1<parts.length){parts=parts[1];var animationMorphTargets=animationToMorphTargets[parts];animationMorphTargets||(animationToMorphTargets[parts]=animationMorphTargets=[]);animationMorphTargets.push(morphTarget)}}morphTargets=
[];for(var name$249 in animationToMorphTargets)morphTargets.push(this.CreateFromMorphTargetSequence(name$249,animationToMorphTargets[name$249],fps,noLoop));return morphTargets};AnimationClip.parseAnimation=function(animation,bones){console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185");if(!animation)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,
destTracks){if(0!==animationKeys.length){var times=[],values=[];flattenJSON(animationKeys,times,values,propertyName);0!==times.length&&destTracks.push(new trackType(trackName,times,values))}},tracks=[],clipName=animation.name||"default",fps=animation.fps||30,blendMode=animation.blendMode,duration=animation.length||-1;animation=animation.hierarchy||[];for(var h=0;h<animation.length;h++){var animationKeys=animation[h].keys;if(animationKeys&&0!==animationKeys.length)if(animationKeys[0].morphTargets){duration=
{};var k=void 0;for(k=0;k<animationKeys.length;k++)if(animationKeys[k].morphTargets)for(var m=0;m<animationKeys[k].morphTargets.length;m++)duration[animationKeys[k].morphTargets[m]]=-1;for(var morphTargetName in duration){m=[];for(var values$jscomp$0=[],m$250=0;m$250!==animationKeys[k].morphTargets.length;++m$250){var animationKey=animationKeys[k];m.push(animationKey.time);values$jscomp$0.push(animationKey.morphTarget===morphTargetName?1:0)}tracks.push(new NumberKeyframeTrack(".morphTargetInfluence["+
morphTargetName+"]",m,values$jscomp$0))}duration=duration.length*fps}else k=".bones["+bones[h].name+"]",addNonemptyTrack(VectorKeyframeTrack,k+".position",animationKeys,"pos",tracks),addNonemptyTrack(QuaternionKeyframeTrack,k+".quaternion",animationKeys,"rot",tracks),addNonemptyTrack(VectorKeyframeTrack,k+".scale",animationKeys,"scl",tracks)}return 0===tracks.length?null:new this(clipName,duration,tracks,blendMode)};AnimationClip.prototype.resetDuration=function(){for(var duration=0,i=0,n=this.tracks.length;i!==
n;++i){var track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1])}this.duration=duration;return this};AnimationClip.prototype.trim=function(){for(var i=0;i<this.tracks.length;i++)this.tracks[i].trim(0,this.duration);return this};AnimationClip.prototype.validate=function(){for(var valid=!0,i=0;i<this.tracks.length;i++)valid=valid&&this.tracks[i].validate();return valid};AnimationClip.prototype.optimize=function(){for(var i=0;i<this.tracks.length;i++)this.tracks[i].optimize();
return this};AnimationClip.prototype.clone=function(){for(var tracks=[],i=0;i<this.tracks.length;i++)tracks.push(this.tracks[i].clone());tracks=new this.constructor(this.name,this.duration,tracks,this.blendMode);tracks.userData=JSON.parse(JSON.stringify(this.userData));return tracks};AnimationClip.prototype.toJSON=function(){return this.constructor.toJSON(this)};var Cache={enabled:!1,files:{},add:function(key,file){!1!==this.enabled&&(this.files[key]=file)},get:function(key){if(!1!==this.enabled)return this.files[key]},
remove:function(key){delete this.files[key]},clear:function(){this.files={}}},LoadingManager=function(onLoad,onProgress,onError){var scope=this,isLoading=!1,itemsLoaded=0,itemsTotal=0,urlModifier=void 0,handlers=[];this.onStart=void 0;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.abortController=new AbortController;this.itemStart=function(url){itemsTotal++;if(!1===isLoading&&void 0!==scope.onStart)scope.onStart(url,itemsLoaded,itemsTotal);isLoading=!0};this.itemEnd=function(url){itemsLoaded++;
if(void 0!==scope.onProgress)scope.onProgress(url,itemsLoaded,itemsTotal);if(itemsLoaded===itemsTotal&&(isLoading=!1,void 0!==scope.onLoad))scope.onLoad()};this.itemError=function(url){if(void 0!==scope.onError)scope.onError(url)};this.resolveURL=function(url){return urlModifier?urlModifier(url):url};this.setURLModifier=function(transform){urlModifier=transform;return this};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this};this.removeHandler=function(regex){regex=handlers.indexOf(regex);
-1!==regex&&handlers.splice(regex,2);return this};this.getHandler=function(file){for(var i=0,l=handlers.length;i<l;i+=2){var regex=handlers[i],loader=handlers[i+1];regex.global&&(regex.lastIndex=0);if(regex.test(file))return loader}return null};this.abort=function(){this.abortController.abort();this.abortController=new AbortController;return this}},DefaultLoadingManager=new LoadingManager,Loader=function(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager;this.crossOrigin="anonymous";
this.withCredentials=!1;this.resourcePath=this.path="";this.requestHeader={}};Loader.prototype.load=function(){};Loader.prototype.loadAsync=function(url,onProgress){var scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject)})};Loader.prototype.parse=function(){};Loader.prototype.setCrossOrigin=function(crossOrigin){this.crossOrigin=crossOrigin;return this};Loader.prototype.setWithCredentials=function(value){this.withCredentials=value;return this};Loader.prototype.setPath=
function(path){this.path=path;return this};Loader.prototype.setResourcePath=function(resourcePath){this.resourcePath=resourcePath;return this};Loader.prototype.setRequestHeader=function(requestHeader){this.requestHeader=requestHeader;return this};Loader.prototype.abort=function(){return this};Loader.DEFAULT_MATERIAL_NAME="__DEFAULT";var loading={},HttpError=function(message,response){message=Error.call(this,message);this.message=message.message;"stack"in message&&(this.stack=message.stack);this.response=
response};$jscomp.inherits(HttpError,Error);var FileLoader=function(manager){manager=Loader.call(this,manager)||this;manager.mimeType="";manager.responseType="";manager._abortController=new AbortController;return manager};$jscomp.inherits(FileLoader,Loader);FileLoader.prototype.load=function(url,onLoad,onProgress,onError){var $jscomp$this=this;void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var cached=Cache.get("file:"+url);if(void 0!==cached)return this.manager.itemStart(url),
setTimeout(function(){onLoad&&onLoad(cached);$jscomp$this.manager.itemEnd(url)},0),cached;if(void 0!==loading[url])loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});else{loading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});onProgress=new Request(url,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:"function"===typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):
this._abortController.signal});var mimeType=this.mimeType,responseType=this.responseType;fetch(onProgress).then(function(response){if(200===response.status||0===response.status){0===response.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");if("undefined"===typeof ReadableStream||void 0===response.body||void 0===response.body.getReader)return response;var callbacks=loading[url],reader=response.body.getReader(),total=(response=response.headers.get("X-File-Size")||response.headers.get("Content-Length"))?
parseInt(response):0,lengthComputable=0!==total,loaded=0;response=new ReadableStream({start:function(controller){function readData(){reader.read().then(function($jscomp$destructuring$var9){var value=$jscomp$destructuring$var9.value;if($jscomp$destructuring$var9.done)controller.close();else{loaded+=value.byteLength;$jscomp$destructuring$var9=new ProgressEvent("progress",{lengthComputable:lengthComputable,loaded:loaded,total:total});for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];
if(callback.onProgress)callback.onProgress($jscomp$destructuring$var9)}controller.enqueue(value);readData()}},function(e){controller.error(e)})}readData()}});return new Response(response)}throw new HttpError('fetch for "'+response.url+'" responded with '+response.status+": "+response.statusText,response);}).then(function(response){switch(responseType){case "arraybuffer":return response.arrayBuffer();case "blob":return response.blob();case "document":return response.text().then(function(text){return(new DOMParser).parseFromString(text,
mimeType)});case "json":return response.json();default:if(""===mimeType)return response.text();var exec=/charset="?([^;"\s]*)"?/i.exec(mimeType);exec=exec&&exec[1]?exec[1].toLowerCase():void 0;var decoder=new TextDecoder(exec);return response.arrayBuffer().then(function(ab){return decoder.decode(ab)})}}).then(function(data){Cache.add("file:"+url,data);var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onLoad)callback.onLoad(data)}}).catch(function(err){var callbacks=
loading[url];if(void 0===callbacks)throw $jscomp$this.manager.itemError(url),err;delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(err)}$jscomp$this.manager.itemError(url)}).finally(function(){$jscomp$this.manager.itemEnd(url)});this.manager.itemStart(url)}};FileLoader.prototype.setResponseType=function(value){this.responseType=value;return this};FileLoader.prototype.setMimeType=function(value){this.mimeType=value;return this};
FileLoader.prototype.abort=function(){this._abortController.abort();this._abortController=new AbortController;return this};var AnimationLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(AnimationLoader,Loader);AnimationLoader.prototype.load=function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?
onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)};AnimationLoader.prototype.parse=function(json){for(var animations=[],i=0;i<json.length;i++){var clip=AnimationClip.parse(json[i]);animations.push(clip)}return animations};var CompressedTextureLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(CompressedTextureLoader,Loader);CompressedTextureLoader.prototype.load=function(url,onLoad,onProgress,onError){function loadTexture(i){loader.load(url[i],
function(buffer){buffer=scope.parse(buffer,!0);images[i]={width:buffer.width,height:buffer.height,format:buffer.format,mipmaps:buffer.mipmaps};loaded+=1;6===loaded&&(1===buffer.mipmapCount&&(texture.minFilter=1006),texture.image=images,texture.format=buffer.format,texture.needsUpdate=!0,onLoad&&onLoad(texture))},onProgress,onError)}var scope=this,images=[],texture=new CompressedTexture,loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType("arraybuffer");loader.setRequestHeader(this.requestHeader);
loader.setWithCredentials(scope.withCredentials);var loaded=0;if(Array.isArray(url))for(var i$jscomp$0=0,il=url.length;i$jscomp$0<il;++i$jscomp$0)loadTexture(i$jscomp$0);else loader.load(url,function(buffer){buffer=scope.parse(buffer,!0);if(buffer.isCubemap){for(var faces=buffer.mipmaps.length/buffer.mipmapCount,f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i$251=0;i$251<buffer.mipmapCount;i$251++)images[f].mipmaps.push(buffer.mipmaps[f*buffer.mipmapCount+i$251]),images[f].format=buffer.format,
images[f].width=buffer.width,images[f].height=buffer.height}texture.image=images}else texture.image.width=buffer.width,texture.image.height=buffer.height,texture.mipmaps=buffer.mipmaps;1===buffer.mipmapCount&&(texture.minFilter=1006);texture.format=buffer.format;texture.needsUpdate=!0;onLoad&&onLoad(texture)},onProgress,onError);return texture};var _loading=new WeakMap,ImageLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(ImageLoader,Loader);ImageLoader.prototype.load=
function(url,onLoad,onProgress,onError){function onImageLoad(){removeEventListeners();onLoad&&onLoad(this);for(var callbacks=_loading.get(this)||[],i=0;i<callbacks.length;i++){var callback=callbacks[i];if(callback.onLoad)callback.onLoad(this)}_loading.delete(this);scope.manager.itemEnd(url)}function onImageError(event){removeEventListeners();onError&&onError(event);Cache.remove("image:"+url);for(var callbacks=_loading.get(this)||[],i=0;i<callbacks.length;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event)}_loading.delete(this);
scope.manager.itemError(url);scope.manager.itemEnd(url)}function removeEventListeners(){image.removeEventListener("load",onImageLoad,!1);image.removeEventListener("error",onImageError,!1)}void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get("image:"+url);if(void 0!==cached)return!0===cached.complete?(scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0)):(onProgress=_loading.get(cached),void 0===
onProgress&&(onProgress=[],_loading.set(cached,onProgress)),onProgress.push({onLoad:onLoad,onError:onError})),cached;var image=createElementNS("img");image.addEventListener("load",onImageLoad,!1);image.addEventListener("error",onImageError,!1);"data:"!==url.slice(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin);Cache.add("image:"+url,image);scope.manager.itemStart(url);image.src=url;return image};var CubeTextureLoader=function(manager){return Loader.call(this,manager)||this};
$jscomp.inherits(CubeTextureLoader,Loader);CubeTextureLoader.prototype.load=function(urls,onLoad,onProgress,onError){function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;6===loaded&&(texture.needsUpdate=!0,onLoad&&onLoad(texture))},void 0,onError)}var texture=new CubeTexture;texture.colorSpace="srgb";var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);var loaded=0;for(onProgress=0;onProgress<urls.length;++onProgress)loadTexture(onProgress);
return texture};var DataTextureLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(DataTextureLoader,Loader);DataTextureLoader.prototype.load=function(url,onLoad,onProgress,onError){var scope=this,texture=new DataTexture,loader=new FileLoader(this.manager);loader.setResponseType("arraybuffer");loader.setRequestHeader(this.requestHeader);loader.setPath(this.path);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){try{var texData=scope.parse(buffer)}catch(error){if(void 0!==
onError)onError(error);else{console.error(error);return}}void 0!==texData.image?texture.image=texData.image:void 0!==texData.data&&(texture.image.width=texData.width,texture.image.height=texData.height,texture.image.data=texData.data);texture.wrapS=void 0!==texData.wrapS?texData.wrapS:1001;texture.wrapT=void 0!==texData.wrapT?texData.wrapT:1001;texture.magFilter=void 0!==texData.magFilter?texData.magFilter:1006;texture.minFilter=void 0!==texData.minFilter?texData.minFilter:1006;texture.anisotropy=
void 0!==texData.anisotropy?texData.anisotropy:1;void 0!==texData.colorSpace&&(texture.colorSpace=texData.colorSpace);void 0!==texData.flipY&&(texture.flipY=texData.flipY);void 0!==texData.format&&(texture.format=texData.format);void 0!==texData.type&&(texture.type=texData.type);void 0!==texData.mipmaps&&(texture.mipmaps=texData.mipmaps,texture.minFilter=1008);1===texData.mipmapCount&&(texture.minFilter=1006);void 0!==texData.generateMipmaps&&(texture.generateMipmaps=texData.generateMipmaps);texture.needsUpdate=
!0;onLoad&&onLoad(texture,texData)},onProgress,onError);return texture};var TextureLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(TextureLoader,Loader);TextureLoader.prototype.load=function(url,onLoad,onProgress,onError){var texture=new Texture,loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;texture.needsUpdate=!0;void 0!==onLoad&&onLoad(texture)},onProgress,
onError);return texture};var Light=function(color,intensity){intensity=void 0===intensity?1:intensity;var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.isLight=!0;$jscomp$super$this.type="Light";$jscomp$super$this.color=new Color(color);$jscomp$super$this.intensity=intensity;return $jscomp$super$this};$jscomp.inherits(Light,Object3D);Light.prototype.dispose=function(){};Light.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.color.copy(source.color);
this.intensity=source.intensity;return this};Light.prototype.toJSON=function(meta){meta=Object3D.prototype.toJSON.call(this,meta);meta.object.color=this.color.getHex();meta.object.intensity=this.intensity;void 0!==this.groundColor&&(meta.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(meta.object.distance=this.distance);void 0!==this.angle&&(meta.object.angle=this.angle);void 0!==this.decay&&(meta.object.decay=this.decay);void 0!==this.penumbra&&(meta.object.penumbra=this.penumbra);
void 0!==this.shadow&&(meta.object.shadow=this.shadow.toJSON());void 0!==this.target&&(meta.object.target=this.target.uuid);return meta};var HemisphereLight=function(skyColor,groundColor,intensity){skyColor=Light.call(this,skyColor,intensity)||this;skyColor.isHemisphereLight=!0;skyColor.type="HemisphereLight";skyColor.position.copy(Object3D.DEFAULT_UP);skyColor.updateMatrix();skyColor.groundColor=new Color(groundColor);return skyColor};$jscomp.inherits(HemisphereLight,Light);HemisphereLight.prototype.copy=
function(source,recursive){Light.prototype.copy.call(this,source,recursive);this.groundColor.copy(source.groundColor);return this};var _projScreenMatrix$1=new Matrix4,_lightPositionWorld$1=new Vector3,_lookTarget$1=new Vector3,LightShadow=function(camera){this.camera=camera;this.intensity=1;this.normalBias=this.bias=0;this.radius=1;this.blurSamples=8;this.mapSize=new Vector2(512,512);this.mapType=1009;this.mapPass=this.map=null;this.matrix=new Matrix4;this.autoUpdate=!0;this.needsUpdate=!1;this._frustum=
new Frustum;this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)]};LightShadow.prototype.getViewportCount=function(){return this._viewportCount};LightShadow.prototype.getFrustum=function(){return this._frustum};LightShadow.prototype.updateMatrices=function(light){var shadowCamera=this.camera,shadowMatrix=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld$1);_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);
shadowCamera.lookAt(_lookTarget$1);shadowCamera.updateMatrixWorld();_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix$1,shadowCamera.coordinateSystem,shadowCamera.reversedDepth);shadowCamera.reversedDepth?shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);shadowMatrix.multiply(_projScreenMatrix$1)};LightShadow.prototype.getViewport=function(viewportIndex){return this._viewports[viewportIndex]};
LightShadow.prototype.getFrameExtents=function(){return this._frameExtents};LightShadow.prototype.dispose=function(){this.map&&this.map.dispose();this.mapPass&&this.mapPass.dispose()};LightShadow.prototype.copy=function(source){this.camera=source.camera.clone();this.intensity=source.intensity;this.bias=source.bias;this.radius=source.radius;this.autoUpdate=source.autoUpdate;this.needsUpdate=source.needsUpdate;this.normalBias=source.normalBias;this.blurSamples=source.blurSamples;this.mapSize.copy(source.mapSize);
return this};LightShadow.prototype.clone=function(){return(new this.constructor).copy(this)};LightShadow.prototype.toJSON=function(){var object={};1!==this.intensity&&(object.intensity=this.intensity);0!==this.bias&&(object.bias=this.bias);0!==this.normalBias&&(object.normalBias=this.normalBias);1!==this.radius&&(object.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(!1).object;delete object.camera.matrix;return object};
var SpotLightShadow=function(){var $jscomp$super$this=LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))||this;$jscomp$super$this.isSpotLightShadow=!0;$jscomp$super$this.focus=1;$jscomp$super$this.aspect=1;return $jscomp$super$this};$jscomp.inherits(SpotLightShadow,LightShadow);SpotLightShadow.prototype.updateMatrices=function(light){var camera=this.camera,fov=2*RAD2DEG*light.angle*this.focus,aspect=this.mapSize.width/this.mapSize.height*this.aspect,far=light.distance||camera.far;if(fov!==
camera.fov||aspect!==camera.aspect||far!==camera.far)camera.fov=fov,camera.aspect=aspect,camera.far=far,camera.updateProjectionMatrix();LightShadow.prototype.updateMatrices.call(this,light)};SpotLightShadow.prototype.copy=function(source){LightShadow.prototype.copy.call(this,source);this.focus=source.focus;return this};var SpotLight=function(color,intensity,distance,angle,penumbra,decay){distance=void 0===distance?0:distance;angle=void 0===angle?Math.PI/3:angle;penumbra=void 0===penumbra?0:penumbra;
decay=void 0===decay?2:decay;color=Light.call(this,color,intensity)||this;color.isSpotLight=!0;color.type="SpotLight";color.position.copy(Object3D.DEFAULT_UP);color.updateMatrix();color.target=new Object3D;color.distance=distance;color.angle=angle;color.penumbra=penumbra;color.decay=decay;color.map=null;color.shadow=new SpotLightShadow;return color};$jscomp.inherits(SpotLight,Light);SpotLight.prototype.dispose=function(){this.shadow.dispose()};SpotLight.prototype.copy=function(source,recursive){Light.prototype.copy.call(this,
source,recursive);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this};$jscomp.global.Object.defineProperties(SpotLight.prototype,{power:{configurable:!0,enumerable:!0,get:function(){return this.intensity*Math.PI},set:function(power){this.intensity=power/Math.PI}}});var _projScreenMatrix=new Matrix4,_lightPositionWorld=new Vector3,_lookTarget=new Vector3,PointLightShadow=
function(){var $jscomp$super$this=LightShadow.call(this,new PerspectiveCamera(90,1,.5,500))||this;$jscomp$super$this.isPointLightShadow=!0;$jscomp$super$this._frameExtents=new Vector2(4,2);$jscomp$super$this._viewportCount=6;$jscomp$super$this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)];$jscomp$super$this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,
1,0),new Vector3(0,-1,0)];$jscomp$super$this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];return $jscomp$super$this};$jscomp.inherits(PointLightShadow,LightShadow);PointLightShadow.prototype.updateMatrices=function(light,viewportIndex){viewportIndex=void 0===viewportIndex?0:viewportIndex;var camera=this.camera,shadowMatrix=this.matrix,far=light.distance||camera.far;far!==camera.far&&(camera.far=far,camera.updateProjectionMatrix());
_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(_lightPositionWorld);_lookTarget.copy(camera.position);_lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(_lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix,
camera.coordinateSystem,camera.reversedDepth)};var PointLight=function(color,intensity,distance,decay){distance=void 0===distance?0:distance;decay=void 0===decay?2:decay;color=Light.call(this,color,intensity)||this;color.isPointLight=!0;color.type="PointLight";color.distance=distance;color.decay=decay;color.shadow=new PointLightShadow;return color};$jscomp.inherits(PointLight,Light);PointLight.prototype.dispose=function(){this.shadow.dispose()};PointLight.prototype.copy=function(source,recursive){Light.prototype.copy.call(this,
source,recursive);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this};$jscomp.global.Object.defineProperties(PointLight.prototype,{power:{configurable:!0,enumerable:!0,get:function(){return 4*this.intensity*Math.PI},set:function(power){this.intensity=power/(4*Math.PI)}}});var OrthographicCamera=function(left,right,top,bottom,near,far){left=void 0===left?-1:left;right=void 0===right?1:right;top=void 0===top?1:top;bottom=void 0===bottom?-1:bottom;near=
void 0===near?.1:near;far=void 0===far?2E3:far;var $jscomp$super$this=Camera.call(this)||this;$jscomp$super$this.isOrthographicCamera=!0;$jscomp$super$this.type="OrthographicCamera";$jscomp$super$this.zoom=1;$jscomp$super$this.view=null;$jscomp$super$this.left=left;$jscomp$super$this.right=right;$jscomp$super$this.top=top;$jscomp$super$this.bottom=bottom;$jscomp$super$this.near=near;$jscomp$super$this.far=far;$jscomp$super$this.updateProjectionMatrix();return $jscomp$super$this};$jscomp.inherits(OrthographicCamera,
Camera);OrthographicCamera.prototype.copy=function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=null===source.view?null:Object.assign({},source.view);return this};OrthographicCamera.prototype.setViewOffset=function(fullWidth,fullHeight,x,y,width,height){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,
offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix()};OrthographicCamera.prototype.clearViewOffset=function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()};OrthographicCamera.prototype.updateProjectionMatrix=function(){var dx=(this.right-this.left)/(2*this.zoom),dy=(this.top-this.bottom)/(2*
this.zoom),cx=(this.right+this.left)/2,cy=(this.top+this.bottom)/2,left=cx-dx;cx+=dx;dx=cy+dy;dy=cy-dy;null!==this.view&&this.view.enabled&&(cy=(this.right-this.left)/this.view.fullWidth/this.zoom,dy=(this.top-this.bottom)/this.view.fullHeight/this.zoom,left+=cy*this.view.offsetX,cx=left+cy*this.view.width,dx-=dy*this.view.offsetY,dy=dx-dy*this.view.height);this.projectionMatrix.makeOrthographic(left,cx,dx,dy,this.near,this.far,this.coordinateSystem,this.reversedDepth);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()};
OrthographicCamera.prototype.toJSON=function(meta){meta=Camera.prototype.toJSON.call(this,meta);meta.object.zoom=this.zoom;meta.object.left=this.left;meta.object.right=this.right;meta.object.top=this.top;meta.object.bottom=this.bottom;meta.object.near=this.near;meta.object.far=this.far;null!==this.view&&(meta.object.view=Object.assign({},this.view));return meta};var DirectionalLightShadow=function(){var $jscomp$super$this=LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))||this;$jscomp$super$this.isDirectionalLightShadow=
!0;return $jscomp$super$this};$jscomp.inherits(DirectionalLightShadow,LightShadow);var DirectionalLight=function(color,intensity){color=Light.call(this,color,intensity)||this;color.isDirectionalLight=!0;color.type="DirectionalLight";color.position.copy(Object3D.DEFAULT_UP);color.updateMatrix();color.target=new Object3D;color.shadow=new DirectionalLightShadow;return color};$jscomp.inherits(DirectionalLight,Light);DirectionalLight.prototype.dispose=function(){this.shadow.dispose()};DirectionalLight.prototype.copy=
function(source){Light.prototype.copy.call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this};var AmbientLight=function(color,intensity){color=Light.call(this,color,intensity)||this;color.isAmbientLight=!0;color.type="AmbientLight";return color};$jscomp.inherits(AmbientLight,Light);var RectAreaLight=function(color,intensity,width,height){width=void 0===width?10:width;height=void 0===height?10:height;color=Light.call(this,color,intensity)||this;color.isRectAreaLight=
!0;color.type="RectAreaLight";color.width=width;color.height=height;return color};$jscomp.inherits(RectAreaLight,Light);RectAreaLight.prototype.copy=function(source){Light.prototype.copy.call(this,source);this.width=source.width;this.height=source.height;return this};RectAreaLight.prototype.toJSON=function(meta){meta=Light.prototype.toJSON.call(this,meta);meta.object.width=this.width;meta.object.height=this.height;return meta};$jscomp.global.Object.defineProperties(RectAreaLight.prototype,{power:{configurable:!0,
enumerable:!0,get:function(){return this.intensity*this.width*this.height*Math.PI},set:function(power){this.intensity=power/(this.width*this.height*Math.PI)}}});var SphericalHarmonics3=function(){this.isSphericalHarmonics3=!0;this.coefficients=[];for(var i=0;9>i;i++)this.coefficients.push(new Vector3)};SphericalHarmonics3.prototype.set=function(coefficients){for(var i=0;9>i;i++)this.coefficients[i].copy(coefficients[i]);return this};SphericalHarmonics3.prototype.zero=function(){for(var i=0;9>i;i++)this.coefficients[i].set(0,
0,0);return this};SphericalHarmonics3.prototype.getAt=function(normal,target){var x=normal.x,y=normal.y;normal=normal.z;var coeff=this.coefficients;target.copy(coeff[0]).multiplyScalar(.282095);target.addScaledVector(coeff[1],.488603*y);target.addScaledVector(coeff[2],.488603*normal);target.addScaledVector(coeff[3],.488603*x);target.addScaledVector(coeff[4],1.092548*x*y);target.addScaledVector(coeff[5],1.092548*y*normal);target.addScaledVector(coeff[6],.315392*(3*normal*normal-1));target.addScaledVector(coeff[7],
1.092548*x*normal);target.addScaledVector(coeff[8],.546274*(x*x-y*y));return target};SphericalHarmonics3.prototype.getIrradianceAt=function(normal,target){var x=normal.x,y=normal.y;normal=normal.z;var coeff=this.coefficients;target.copy(coeff[0]).multiplyScalar(.886227);target.addScaledVector(coeff[1],1.023328*y);target.addScaledVector(coeff[2],1.023328*normal);target.addScaledVector(coeff[3],1.023328*x);target.addScaledVector(coeff[4],.858086*x*y);target.addScaledVector(coeff[5],.858086*y*normal);
target.addScaledVector(coeff[6],.743125*normal*normal-.247708);target.addScaledVector(coeff[7],.858086*x*normal);target.addScaledVector(coeff[8],.429043*(x*x-y*y));return target};SphericalHarmonics3.prototype.add=function(sh){for(var i=0;9>i;i++)this.coefficients[i].add(sh.coefficients[i]);return this};SphericalHarmonics3.prototype.addScaledSH=function(sh,s){for(var i=0;9>i;i++)this.coefficients[i].addScaledVector(sh.coefficients[i],s);return this};SphericalHarmonics3.prototype.scale=function(s){for(var i=
0;9>i;i++)this.coefficients[i].multiplyScalar(s);return this};SphericalHarmonics3.prototype.lerp=function(sh,alpha){for(var i=0;9>i;i++)this.coefficients[i].lerp(sh.coefficients[i],alpha);return this};SphericalHarmonics3.prototype.equals=function(sh){for(var i=0;9>i;i++)if(!this.coefficients[i].equals(sh.coefficients[i]))return!1;return!0};SphericalHarmonics3.prototype.copy=function(sh){return this.set(sh.coefficients)};SphericalHarmonics3.prototype.clone=function(){return(new this.constructor).copy(this)};
SphericalHarmonics3.prototype.fromArray=function(array,offset){offset=void 0===offset?0:offset;for(var coefficients=this.coefficients,i=0;9>i;i++)coefficients[i].fromArray(array,offset+3*i);return this};SphericalHarmonics3.prototype.toArray=function(array,offset){array=void 0===array?[]:array;offset=void 0===offset?0:offset;for(var coefficients=this.coefficients,i=0;9>i;i++)coefficients[i].toArray(array,offset+3*i);return array};SphericalHarmonics3.getBasisAt=function(normal,shBasis){var x=normal.x,
y=normal.y;normal=normal.z;shBasis[0]=.282095;shBasis[1]=.488603*y;shBasis[2]=.488603*normal;shBasis[3]=.488603*x;shBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*normal;shBasis[6]=.315392*(3*normal*normal-1);shBasis[7]=1.092548*x*normal;shBasis[8]=.546274*(x*x-y*y)};var LightProbe=function(sh,intensity){sh=void 0===sh?new SphericalHarmonics3:sh;intensity=Light.call(this,void 0,void 0===intensity?1:intensity)||this;intensity.isLightProbe=!0;intensity.sh=sh;return intensity};$jscomp.inherits(LightProbe,
Light);LightProbe.prototype.copy=function(source){Light.prototype.copy.call(this,source);this.sh.copy(source.sh);return this};LightProbe.prototype.fromJSON=function(json){this.intensity=json.intensity;this.sh.fromArray(json.sh);return this};LightProbe.prototype.toJSON=function(meta){meta=Light.prototype.toJSON.call(this,meta);meta.object.sh=this.sh.toArray();return meta};var MaterialLoader=function(manager){manager=Loader.call(this,manager)||this;manager.textures={};return manager};$jscomp.inherits(MaterialLoader,
Loader);MaterialLoader.prototype.load=function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)};MaterialLoader.prototype.parse=function(json){function getTexture(name){void 0===
textures[name]&&console.warn("THREE.MaterialLoader: Undefined texture",name);return textures[name]}var textures=this.textures,material=this.createMaterialFromType(json.type);void 0!==json.uuid&&(material.uuid=json.uuid);void 0!==json.name&&(material.name=json.name);void 0!==json.color&&void 0!==material.color&&material.color.setHex(json.color);void 0!==json.roughness&&(material.roughness=json.roughness);void 0!==json.metalness&&(material.metalness=json.metalness);void 0!==json.sheen&&(material.sheen=
json.sheen);void 0!==json.sheenColor&&(material.sheenColor=(new Color).setHex(json.sheenColor));void 0!==json.sheenRoughness&&(material.sheenRoughness=json.sheenRoughness);void 0!==json.emissive&&void 0!==material.emissive&&material.emissive.setHex(json.emissive);void 0!==json.specular&&void 0!==material.specular&&material.specular.setHex(json.specular);void 0!==json.specularIntensity&&(material.specularIntensity=json.specularIntensity);void 0!==json.specularColor&&void 0!==material.specularColor&&
material.specularColor.setHex(json.specularColor);void 0!==json.shininess&&(material.shininess=json.shininess);void 0!==json.clearcoat&&(material.clearcoat=json.clearcoat);void 0!==json.clearcoatRoughness&&(material.clearcoatRoughness=json.clearcoatRoughness);void 0!==json.dispersion&&(material.dispersion=json.dispersion);void 0!==json.iridescence&&(material.iridescence=json.iridescence);void 0!==json.iridescenceIOR&&(material.iridescenceIOR=json.iridescenceIOR);void 0!==json.iridescenceThicknessRange&&
(material.iridescenceThicknessRange=json.iridescenceThicknessRange);void 0!==json.transmission&&(material.transmission=json.transmission);void 0!==json.thickness&&(material.thickness=json.thickness);void 0!==json.attenuationDistance&&(material.attenuationDistance=json.attenuationDistance);void 0!==json.attenuationColor&&void 0!==material.attenuationColor&&material.attenuationColor.setHex(json.attenuationColor);void 0!==json.anisotropy&&(material.anisotropy=json.anisotropy);void 0!==json.anisotropyRotation&&
(material.anisotropyRotation=json.anisotropyRotation);void 0!==json.fog&&(material.fog=json.fog);void 0!==json.flatShading&&(material.flatShading=json.flatShading);void 0!==json.blending&&(material.blending=json.blending);void 0!==json.combine&&(material.combine=json.combine);void 0!==json.side&&(material.side=json.side);void 0!==json.shadowSide&&(material.shadowSide=json.shadowSide);void 0!==json.opacity&&(material.opacity=json.opacity);void 0!==json.transparent&&(material.transparent=json.transparent);
void 0!==json.alphaTest&&(material.alphaTest=json.alphaTest);void 0!==json.alphaHash&&(material.alphaHash=json.alphaHash);void 0!==json.depthFunc&&(material.depthFunc=json.depthFunc);void 0!==json.depthTest&&(material.depthTest=json.depthTest);void 0!==json.depthWrite&&(material.depthWrite=json.depthWrite);void 0!==json.colorWrite&&(material.colorWrite=json.colorWrite);void 0!==json.blendSrc&&(material.blendSrc=json.blendSrc);void 0!==json.blendDst&&(material.blendDst=json.blendDst);void 0!==json.blendEquation&&
(material.blendEquation=json.blendEquation);void 0!==json.blendSrcAlpha&&(material.blendSrcAlpha=json.blendSrcAlpha);void 0!==json.blendDstAlpha&&(material.blendDstAlpha=json.blendDstAlpha);void 0!==json.blendEquationAlpha&&(material.blendEquationAlpha=json.blendEquationAlpha);void 0!==json.blendColor&&void 0!==material.blendColor&&material.blendColor.setHex(json.blendColor);void 0!==json.blendAlpha&&(material.blendAlpha=json.blendAlpha);void 0!==json.stencilWriteMask&&(material.stencilWriteMask=
json.stencilWriteMask);void 0!==json.stencilFunc&&(material.stencilFunc=json.stencilFunc);void 0!==json.stencilRef&&(material.stencilRef=json.stencilRef);void 0!==json.stencilFuncMask&&(material.stencilFuncMask=json.stencilFuncMask);void 0!==json.stencilFail&&(material.stencilFail=json.stencilFail);void 0!==json.stencilZFail&&(material.stencilZFail=json.stencilZFail);void 0!==json.stencilZPass&&(material.stencilZPass=json.stencilZPass);void 0!==json.stencilWrite&&(material.stencilWrite=json.stencilWrite);
void 0!==json.wireframe&&(material.wireframe=json.wireframe);void 0!==json.wireframeLinewidth&&(material.wireframeLinewidth=json.wireframeLinewidth);void 0!==json.wireframeLinecap&&(material.wireframeLinecap=json.wireframeLinecap);void 0!==json.wireframeLinejoin&&(material.wireframeLinejoin=json.wireframeLinejoin);void 0!==json.rotation&&(material.rotation=json.rotation);void 0!==json.linewidth&&(material.linewidth=json.linewidth);void 0!==json.dashSize&&(material.dashSize=json.dashSize);void 0!==
json.gapSize&&(material.gapSize=json.gapSize);void 0!==json.scale&&(material.scale=json.scale);void 0!==json.polygonOffset&&(material.polygonOffset=json.polygonOffset);void 0!==json.polygonOffsetFactor&&(material.polygonOffsetFactor=json.polygonOffsetFactor);void 0!==json.polygonOffsetUnits&&(material.polygonOffsetUnits=json.polygonOffsetUnits);void 0!==json.dithering&&(material.dithering=json.dithering);void 0!==json.alphaToCoverage&&(material.alphaToCoverage=json.alphaToCoverage);void 0!==json.premultipliedAlpha&&
(material.premultipliedAlpha=json.premultipliedAlpha);void 0!==json.forceSinglePass&&(material.forceSinglePass=json.forceSinglePass);void 0!==json.visible&&(material.visible=json.visible);void 0!==json.toneMapped&&(material.toneMapped=json.toneMapped);void 0!==json.userData&&(material.userData=json.userData);void 0!==json.vertexColors&&(material.vertexColors="number"===typeof json.vertexColors?0<json.vertexColors?!0:!1:json.vertexColors);if(void 0!==json.uniforms)for(var name$jscomp$0 in json.uniforms){var uniform=
json.uniforms[name$jscomp$0];material.uniforms[name$jscomp$0]={};switch(uniform.type){case "t":material.uniforms[name$jscomp$0].value=getTexture(uniform.value);break;case "c":material.uniforms[name$jscomp$0].value=(new Color).setHex(uniform.value);break;case "v2":material.uniforms[name$jscomp$0].value=(new Vector2).fromArray(uniform.value);break;case "v3":material.uniforms[name$jscomp$0].value=(new Vector3).fromArray(uniform.value);break;case "v4":material.uniforms[name$jscomp$0].value=(new Vector4).fromArray(uniform.value);
break;case "m3":material.uniforms[name$jscomp$0].value=(new Matrix3).fromArray(uniform.value);break;case "m4":material.uniforms[name$jscomp$0].value=(new Matrix4).fromArray(uniform.value);break;default:material.uniforms[name$jscomp$0].value=uniform.value}}void 0!==json.defines&&(material.defines=json.defines);void 0!==json.vertexShader&&(material.vertexShader=json.vertexShader);void 0!==json.fragmentShader&&(material.fragmentShader=json.fragmentShader);void 0!==json.glslVersion&&(material.glslVersion=
json.glslVersion);if(void 0!==json.extensions)for(var key in json.extensions)material.extensions[key]=json.extensions[key];void 0!==json.lights&&(material.lights=json.lights);void 0!==json.clipping&&(material.clipping=json.clipping);void 0!==json.size&&(material.size=json.size);void 0!==json.sizeAttenuation&&(material.sizeAttenuation=json.sizeAttenuation);void 0!==json.map&&(material.map=getTexture(json.map));void 0!==json.matcap&&(material.matcap=getTexture(json.matcap));void 0!==json.alphaMap&&
(material.alphaMap=getTexture(json.alphaMap));void 0!==json.bumpMap&&(material.bumpMap=getTexture(json.bumpMap));void 0!==json.bumpScale&&(material.bumpScale=json.bumpScale);void 0!==json.normalMap&&(material.normalMap=getTexture(json.normalMap));void 0!==json.normalMapType&&(material.normalMapType=json.normalMapType);void 0!==json.normalScale&&(name$jscomp$0=json.normalScale,!1===Array.isArray(name$jscomp$0)&&(name$jscomp$0=[name$jscomp$0,name$jscomp$0]),material.normalScale=(new Vector2).fromArray(name$jscomp$0));
void 0!==json.displacementMap&&(material.displacementMap=getTexture(json.displacementMap));void 0!==json.displacementScale&&(material.displacementScale=json.displacementScale);void 0!==json.displacementBias&&(material.displacementBias=json.displacementBias);void 0!==json.roughnessMap&&(material.roughnessMap=getTexture(json.roughnessMap));void 0!==json.metalnessMap&&(material.metalnessMap=getTexture(json.metalnessMap));void 0!==json.emissiveMap&&(material.emissiveMap=getTexture(json.emissiveMap));
void 0!==json.emissiveIntensity&&(material.emissiveIntensity=json.emissiveIntensity);void 0!==json.specularMap&&(material.specularMap=getTexture(json.specularMap));void 0!==json.specularIntensityMap&&(material.specularIntensityMap=getTexture(json.specularIntensityMap));void 0!==json.specularColorMap&&(material.specularColorMap=getTexture(json.specularColorMap));void 0!==json.envMap&&(material.envMap=getTexture(json.envMap));void 0!==json.envMapRotation&&material.envMapRotation.fromArray(json.envMapRotation);
void 0!==json.envMapIntensity&&(material.envMapIntensity=json.envMapIntensity);void 0!==json.reflectivity&&(material.reflectivity=json.reflectivity);void 0!==json.refractionRatio&&(material.refractionRatio=json.refractionRatio);void 0!==json.lightMap&&(material.lightMap=getTexture(json.lightMap));void 0!==json.lightMapIntensity&&(material.lightMapIntensity=json.lightMapIntensity);void 0!==json.aoMap&&(material.aoMap=getTexture(json.aoMap));void 0!==json.aoMapIntensity&&(material.aoMapIntensity=json.aoMapIntensity);
void 0!==json.gradientMap&&(material.gradientMap=getTexture(json.gradientMap));void 0!==json.clearcoatMap&&(material.clearcoatMap=getTexture(json.clearcoatMap));void 0!==json.clearcoatRoughnessMap&&(material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap));void 0!==json.clearcoatNormalMap&&(material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap));void 0!==json.clearcoatNormalScale&&(material.clearcoatNormalScale=(new Vector2).fromArray(json.clearcoatNormalScale));void 0!==json.iridescenceMap&&
(material.iridescenceMap=getTexture(json.iridescenceMap));void 0!==json.iridescenceThicknessMap&&(material.iridescenceThicknessMap=getTexture(json.iridescenceThicknessMap));void 0!==json.transmissionMap&&(material.transmissionMap=getTexture(json.transmissionMap));void 0!==json.thicknessMap&&(material.thicknessMap=getTexture(json.thicknessMap));void 0!==json.anisotropyMap&&(material.anisotropyMap=getTexture(json.anisotropyMap));void 0!==json.sheenColorMap&&(material.sheenColorMap=getTexture(json.sheenColorMap));
void 0!==json.sheenRoughnessMap&&(material.sheenRoughnessMap=getTexture(json.sheenRoughnessMap));return material};MaterialLoader.prototype.setTextures=function(value){this.textures=value;return this};MaterialLoader.prototype.createMaterialFromType=function(type){return MaterialLoader.createMaterialFromType(type)};MaterialLoader.createMaterialFromType=function(type){return new {ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,
PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material}[type]};
var LoaderUtils=function(){};LoaderUtils.extractUrlBase=function(url){var index=url.lastIndexOf("/");return-1===index?"./":url.slice(0,index+1)};LoaderUtils.resolveURL=function(url,path){if("string"!==typeof url||""===url)return"";/^https?:\/\//i.test(path)&&/^\//.test(url)&&(path=path.replace(/(^https?:\/\/[^\/]+).*/i,"$1"));return/^(https?:)?\/\//i.test(url)||/^data:.*,.*$/i.test(url)||/^blob:.*$/i.test(url)?url:path+url};var InstancedBufferGeometry=function(){var $jscomp$super$this=BufferGeometry.call(this)||
this;$jscomp$super$this.isInstancedBufferGeometry=!0;$jscomp$super$this.type="InstancedBufferGeometry";$jscomp$super$this.instanceCount=Infinity;return $jscomp$super$this};$jscomp.inherits(InstancedBufferGeometry,BufferGeometry);InstancedBufferGeometry.prototype.copy=function(source){BufferGeometry.prototype.copy.call(this,source);this.instanceCount=source.instanceCount;return this};InstancedBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);data.instanceCount=
this.instanceCount;data.isInstancedBufferGeometry=!0;return data};var BufferGeometryLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(BufferGeometryLoader,Loader);BufferGeometryLoader.prototype.load=function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?
onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)};BufferGeometryLoader.prototype.parse=function(json$jscomp$0){function getInterleavedBuffer(json,uuid){if(void 0!==interleavedBufferMap[uuid])return interleavedBufferMap[uuid];var interleavedBuffer=json.interleavedBuffers[uuid];var JSCompiler_inline_result=interleavedBuffer.buffer;void 0!==arrayBufferMap[JSCompiler_inline_result]?JSCompiler_inline_result=arrayBufferMap[JSCompiler_inline_result]:(json=(new Uint32Array(json.arrayBuffers[JSCompiler_inline_result])).buffer,
JSCompiler_inline_result=arrayBufferMap[JSCompiler_inline_result]=json);JSCompiler_inline_result=new TYPED_ARRAYS[interleavedBuffer.type](JSCompiler_inline_result);JSCompiler_inline_result=new InterleavedBuffer(JSCompiler_inline_result,interleavedBuffer.stride);JSCompiler_inline_result.uuid=interleavedBuffer.uuid;return interleavedBufferMap[uuid]=JSCompiler_inline_result}var interleavedBufferMap={},arrayBufferMap={},geometry=json$jscomp$0.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,
index=json$jscomp$0.data.index;void 0!==index&&(index=new TYPED_ARRAYS[index.type](index.array),geometry.setIndex(new BufferAttribute(index,1)));index=json$jscomp$0.data.attributes;for(var key in index){var attribute=index[key],bufferAttribute=void 0;attribute.isInterleavedBufferAttribute?(bufferAttribute=getInterleavedBuffer(json$jscomp$0.data,attribute.data),bufferAttribute=new InterleavedBufferAttribute(bufferAttribute,attribute.itemSize,attribute.offset,attribute.normalized)):(bufferAttribute=
new TYPED_ARRAYS[attribute.type](attribute.array),bufferAttribute=new (attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(bufferAttribute,attribute.itemSize,attribute.normalized));void 0!==attribute.name&&(bufferAttribute.name=attribute.name);void 0!==attribute.usage&&bufferAttribute.setUsage(attribute.usage);geometry.setAttribute(key,bufferAttribute)}if(key=json$jscomp$0.data.morphAttributes)for(var key$253 in key){index=key[key$253];attribute=[];bufferAttribute=0;for(var il=
index.length;bufferAttribute<il;bufferAttribute++){var attribute$254=index[bufferAttribute],bufferAttribute$255=void 0;attribute$254.isInterleavedBufferAttribute?(bufferAttribute$255=getInterleavedBuffer(json$jscomp$0.data,attribute$254.data),bufferAttribute$255=new InterleavedBufferAttribute(bufferAttribute$255,attribute$254.itemSize,attribute$254.offset,attribute$254.normalized)):(bufferAttribute$255=new TYPED_ARRAYS[attribute$254.type](attribute$254.array),bufferAttribute$255=new BufferAttribute(bufferAttribute$255,
attribute$254.itemSize,attribute$254.normalized));void 0!==attribute$254.name&&(bufferAttribute$255.name=attribute$254.name);attribute.push(bufferAttribute$255)}geometry.morphAttributes[key$253]=attribute}json$jscomp$0.data.morphTargetsRelative&&(geometry.morphTargetsRelative=!0);key$253=json$jscomp$0.data.groups||json$jscomp$0.data.drawcalls||json$jscomp$0.data.offsets;if(void 0!==key$253)for(key=0,index=key$253.length;key!==index;++key)attribute=key$253[key],geometry.addGroup(attribute.start,attribute.count,
attribute.materialIndex);key$253=json$jscomp$0.data.boundingSphere;void 0!==key$253&&(geometry.boundingSphere=(new Sphere).fromJSON(key$253));json$jscomp$0.name&&(geometry.name=json$jscomp$0.name);json$jscomp$0.userData&&(geometry.userData=json$jscomp$0.userData);return geometry};var ObjectLoader=function(manager){return Loader.call(this,manager)||this};$jscomp.inherits(ObjectLoader,Loader);ObjectLoader.prototype.load=function(url,onLoad,onProgress,onError){var scope=this,path=""===this.path?LoaderUtils.extractUrlBase(url):
this.path;this.resourcePath=this.resourcePath||path;path=new FileLoader(this.manager);path.setPath(this.path);path.setRequestHeader(this.requestHeader);path.setWithCredentials(this.withCredentials);path.load(url,function(text){var json=null;try{json=JSON.parse(text)}catch(error){void 0!==onError&&onError(error);console.error("THREE:ObjectLoader: Can't parse "+url+".",error.message);return}text=json.metadata;void 0===text||void 0===text.type||"geometry"===text.type.toLowerCase()?(void 0!==onError&&
onError(Error("THREE.ObjectLoader: Can't load "+url)),console.error("THREE.ObjectLoader: Can't load "+url)):scope.parse(json,onLoad)},onProgress,onError)};ObjectLoader.prototype.loadAsync=function(url,onProgress){var $jscomp$async$this=this,scope,path,loader,text,json,metadata;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==$jscomp$generator$context.nextAddress)return scope=$jscomp$async$this,path=""===$jscomp$async$this.path?LoaderUtils.extractUrlBase(url):
$jscomp$async$this.path,$jscomp$async$this.resourcePath=$jscomp$async$this.resourcePath||path,loader=new FileLoader($jscomp$async$this.manager),loader.setPath($jscomp$async$this.path),loader.setRequestHeader($jscomp$async$this.requestHeader),loader.setWithCredentials($jscomp$async$this.withCredentials),$jscomp$generator$context.yield(loader.loadAsync(url,onProgress),2);if(3!=$jscomp$generator$context.nextAddress){text=$jscomp$generator$context.yieldResult;json=JSON.parse(text);metadata=json.metadata;
if(void 0===metadata||void 0===metadata.type||"geometry"===metadata.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+url);return $jscomp$generator$context.yield(scope.parseAsync(json),3)}return $jscomp$generator$context.return($jscomp$generator$context.yieldResult)})};ObjectLoader.prototype.parse=function(json,onLoad){var animations=this.parseAnimations(json.animations),shapes=this.parseShapes(json.shapes),geometries=this.parseGeometries(json.geometries,shapes);shapes=this.parseImages(json.images,
function(){void 0!==onLoad&&onLoad(object)});var textures=this.parseTextures(json.textures,shapes),materials=this.parseMaterials(json.materials,textures),object=this.parseObject(json.object,geometries,materials,textures,animations);json=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,json);this.bindLightTargets(object);if(void 0!==onLoad){json=!1;for(var uuid in shapes)if(shapes[uuid].data instanceof HTMLImageElement){json=!0;break}!1===json&&onLoad(object)}return object};ObjectLoader.prototype.parseAsync=
function(json){var $jscomp$async$this=this,animations,shapes,geometries,images,textures,materials,object,skeletons;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==$jscomp$generator$context.nextAddress)return animations=$jscomp$async$this.parseAnimations(json.animations),shapes=$jscomp$async$this.parseShapes(json.shapes),geometries=$jscomp$async$this.parseGeometries(json.geometries,shapes),$jscomp$generator$context.yield($jscomp$async$this.parseImagesAsync(json.images),
2);images=$jscomp$generator$context.yieldResult;textures=$jscomp$async$this.parseTextures(json.textures,images);materials=$jscomp$async$this.parseMaterials(json.materials,textures);object=$jscomp$async$this.parseObject(json.object,geometries,materials,textures,animations);skeletons=$jscomp$async$this.parseSkeletons(json.skeletons,object);$jscomp$async$this.bindSkeletons(object,skeletons);$jscomp$async$this.bindLightTargets(object);return $jscomp$generator$context.return(object)})};ObjectLoader.prototype.parseShapes=
function(json){var shapes={};if(void 0!==json)for(var i=0,l=json.length;i<l;i++){var shape=(new Shape).fromJSON(json[i]);shapes[shape.uuid]=shape}return shapes};ObjectLoader.prototype.parseSkeletons=function(json,object){var skeletons={},bones={};object.traverse(function(child){child.isBone&&(bones[child.uuid]=child)});if(void 0!==json){object=0;for(var l=json.length;object<l;object++){var skeleton=(new Skeleton).fromJSON(json[object],bones);skeletons[skeleton.uuid]=skeleton}}return skeletons};ObjectLoader.prototype.parseGeometries=
function(json,shapes){var geometries={};if(void 0!==json)for(var bufferGeometryLoader=new BufferGeometryLoader,i=0,l=json.length;i<l;i++){var geometry=void 0,data=json[i];switch(data.type){case "BufferGeometry":case "InstancedBufferGeometry":geometry=bufferGeometryLoader.parse(data);break;default:data.type in Geometries?geometry=Geometries[data.type].fromJSON(data,shapes):console.warn('THREE.ObjectLoader: Unsupported geometry type "'+data.type+'"')}geometry.uuid=data.uuid;void 0!==data.name&&(geometry.name=
data.name);void 0!==data.userData&&(geometry.userData=data.userData);geometries[data.uuid]=geometry}return geometries};ObjectLoader.prototype.parseMaterials=function(json,textures){var cache={},materials={};if(void 0!==json){var loader=new MaterialLoader;loader.setTextures(textures);textures=0;for(var l=json.length;textures<l;textures++){var data=json[textures];void 0===cache[data.uuid]&&(cache[data.uuid]=loader.parse(data));materials[data.uuid]=cache[data.uuid]}}return materials};ObjectLoader.prototype.parseAnimations=
function(json){var animations={};if(void 0!==json)for(var i=0;i<json.length;i++){var clip=AnimationClip.parse(json[i]);animations[clip.uuid]=clip}return animations};ObjectLoader.prototype.parseImages=function(json,onLoad){function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url)},void 0,function(){scope.manager.itemError(url);scope.manager.itemEnd(url)})}function deserializeImage(image){return"string"===typeof image?(image=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(image)?
image:scope.resourcePath+image,loadImage(image)):image.data?{data:new TYPED_ARRAYS[image.type](image.data),width:image.width,height:image.height}:null}var scope=this,images={};if(void 0!==json&&0<json.length){onLoad=new LoadingManager(onLoad);var loader=new ImageLoader(onLoad);loader.setCrossOrigin(this.crossOrigin);onLoad=0;for(var il=json.length;onLoad<il;onLoad++){var image$jscomp$0=json[onLoad],url$jscomp$0=image$jscomp$0.url;if(Array.isArray(url$jscomp$0)){for(var imageArray=[],j=0,jl=url$jscomp$0.length;j<
jl;j++){var deserializedImage=deserializeImage(url$jscomp$0[j]);null!==deserializedImage&&(deserializedImage instanceof HTMLImageElement?imageArray.push(deserializedImage):imageArray.push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height)))}images[image$jscomp$0.uuid]=new Source(imageArray)}else url$jscomp$0=deserializeImage(image$jscomp$0.url),images[image$jscomp$0.uuid]=new Source(url$jscomp$0)}}return images};ObjectLoader.prototype.parseImagesAsync=function(json){function deserializeImage(image){var url,
path;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context$1){if(1==$jscomp$generator$context$1.nextAddress){if("string"!==typeof image)return image.data?$jscomp$generator$context$1.return({data:new TYPED_ARRAYS[image.type](image.data),width:image.width,height:image.height}):$jscomp$generator$context$1.return(null);url=image;path=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(url)?url:scope.resourcePath+url;return $jscomp$generator$context$1.yield(loader.loadAsync(path),3)}return $jscomp$generator$context$1.return($jscomp$generator$context$1.yieldResult)})}
var $jscomp$async$this=this,scope,images,loader,i,il,image$jscomp$0,url$jscomp$0,deserializedImage$260,imageArray,j,jl,currentUrl,deserializedImage;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){switch($jscomp$generator$context.nextAddress){case 1:scope=$jscomp$async$this;images={};if(!(void 0!==json&&0<json.length)){$jscomp$generator$context.jumpTo(2);break}loader=new ImageLoader($jscomp$async$this.manager);loader.setCrossOrigin($jscomp$async$this.crossOrigin);
i=0;il=json.length;case 3:if(!(i<il)){$jscomp$generator$context.jumpTo(2);break}image$jscomp$0=json[i];url$jscomp$0=image$jscomp$0.url;if(Array.isArray(url$jscomp$0)){$jscomp$generator$context.jumpTo(6);break}return $jscomp$generator$context.yield(deserializeImage(image$jscomp$0.url),8);case 8:deserializedImage$260=$jscomp$generator$context.yieldResult;images[image$jscomp$0.uuid]=new Source(deserializedImage$260);$jscomp$generator$context.jumpTo(4);break;case 6:imageArray=[],j=0,jl=url$jscomp$0.length;
case 9:if(!(j<jl)){$jscomp$generator$context.jumpTo(11);break}currentUrl=url$jscomp$0[j];return $jscomp$generator$context.yield(deserializeImage(currentUrl),12);case 12:deserializedImage=$jscomp$generator$context.yieldResult;null!==deserializedImage&&(deserializedImage instanceof HTMLImageElement?imageArray.push(deserializedImage):imageArray.push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height)));j++;$jscomp$generator$context.jumpTo(9);break;case 11:images[image$jscomp$0.uuid]=
new Source(imageArray);case 4:i++;$jscomp$generator$context.jumpTo(3);break;case 2:return $jscomp$generator$context.return(images)}})};ObjectLoader.prototype.parseTextures=function(json,images){function parseConstant(value,type){if("number"===typeof value)return value;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",value);return type[value]}var textures={};if(void 0!==json)for(var i=0,l=json.length;i<l;i++){var data=json[i];void 0===data.image&&console.warn('THREE.ObjectLoader: No "image" specified for',
data.uuid);void 0===images[data.image]&&console.warn("THREE.ObjectLoader: Undefined image",data.image);var source=images[data.image],image=source.data,texture=void 0;Array.isArray(image)?(texture=new CubeTexture,6===image.length&&(texture.needsUpdate=!0)):(texture=image&&image.data?new DataTexture:new Texture,image&&(texture.needsUpdate=!0));texture.source=source;texture.uuid=data.uuid;void 0!==data.name&&(texture.name=data.name);void 0!==data.mapping&&(texture.mapping=parseConstant(data.mapping,
TEXTURE_MAPPING));void 0!==data.channel&&(texture.channel=data.channel);void 0!==data.offset&&texture.offset.fromArray(data.offset);void 0!==data.repeat&&texture.repeat.fromArray(data.repeat);void 0!==data.center&&texture.center.fromArray(data.center);void 0!==data.rotation&&(texture.rotation=data.rotation);void 0!==data.wrap&&(texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING),texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING));void 0!==data.format&&(texture.format=data.format);void 0!==
data.internalFormat&&(texture.internalFormat=data.internalFormat);void 0!==data.type&&(texture.type=data.type);void 0!==data.colorSpace&&(texture.colorSpace=data.colorSpace);void 0!==data.minFilter&&(texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER));void 0!==data.magFilter&&(texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER));void 0!==data.anisotropy&&(texture.anisotropy=data.anisotropy);void 0!==data.flipY&&(texture.flipY=data.flipY);void 0!==data.generateMipmaps&&(texture.generateMipmaps=
data.generateMipmaps);void 0!==data.premultiplyAlpha&&(texture.premultiplyAlpha=data.premultiplyAlpha);void 0!==data.unpackAlignment&&(texture.unpackAlignment=data.unpackAlignment);void 0!==data.compareFunction&&(texture.compareFunction=data.compareFunction);void 0!==data.userData&&(texture.userData=data.userData);textures[data.uuid]=texture}return textures};ObjectLoader.prototype.parseObject=function(data,geometries,materials,textures,animations){function getGeometry(name){void 0===geometries[name]&&
console.warn("THREE.ObjectLoader: Undefined geometry",name);return geometries[name]}function getMaterial(name){if(void 0!==name){if(Array.isArray(name)){for(var array=[],i=0,l=name.length;i<l;i++){var uuid=name[i];void 0===materials[uuid]&&console.warn("THREE.ObjectLoader: Undefined material",uuid);array.push(materials[uuid])}return array}void 0===materials[name]&&console.warn("THREE.ObjectLoader: Undefined material",name);return materials[name]}}function getTexture(uuid){void 0===textures[uuid]&&
console.warn("THREE.ObjectLoader: Undefined texture",uuid);return textures[uuid]}switch(data.type){case "Scene":var object=new Scene;void 0!==data.background&&(Number.isInteger(data.background)?object.background=new Color(data.background):object.background=getTexture(data.background));void 0!==data.environment&&(object.environment=getTexture(data.environment));void 0!==data.fog&&("Fog"===data.fog.type?object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far):"FogExp2"===data.fog.type&&(object.fog=
new FogExp2(data.fog.color,data.fog.density)),""!==data.fog.name&&(object.fog.name=data.fog.name));void 0!==data.backgroundBlurriness&&(object.backgroundBlurriness=data.backgroundBlurriness);void 0!==data.backgroundIntensity&&(object.backgroundIntensity=data.backgroundIntensity);void 0!==data.backgroundRotation&&object.backgroundRotation.fromArray(data.backgroundRotation);void 0!==data.environmentIntensity&&(object.environmentIntensity=data.environmentIntensity);void 0!==data.environmentRotation&&
object.environmentRotation.fromArray(data.environmentRotation);break;case "PerspectiveCamera":object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);void 0!==data.focus&&(object.focus=data.focus);void 0!==data.zoom&&(object.zoom=data.zoom);void 0!==data.filmGauge&&(object.filmGauge=data.filmGauge);void 0!==data.filmOffset&&(object.filmOffset=data.filmOffset);void 0!==data.view&&(object.view=Object.assign({},data.view));break;case "OrthographicCamera":object=new OrthographicCamera(data.left,
data.right,data.top,data.bottom,data.near,data.far);void 0!==data.zoom&&(object.zoom=data.zoom);void 0!==data.view&&(object.view=Object.assign({},data.view));break;case "AmbientLight":object=new AmbientLight(data.color,data.intensity);break;case "DirectionalLight":object=new DirectionalLight(data.color,data.intensity);object.target=data.target||"";break;case "PointLight":object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case "RectAreaLight":object=new RectAreaLight(data.color,
data.intensity,data.width,data.height);break;case "SpotLight":object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);object.target=data.target||"";break;case "HemisphereLight":object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case "LightProbe":object=(new LightProbe).fromJSON(data);break;case "SkinnedMesh":var geometry=getGeometry(data.geometry);object=getMaterial(data.material);object=new SkinnedMesh(geometry,object);void 0!==
data.bindMode&&(object.bindMode=data.bindMode);void 0!==data.bindMatrix&&object.bindMatrix.fromArray(data.bindMatrix);void 0!==data.skeleton&&(object.skeleton=data.skeleton);break;case "Mesh":geometry=getGeometry(data.geometry);object=getMaterial(data.material);object=new Mesh(geometry,object);break;case "InstancedMesh":geometry=getGeometry(data.geometry);object=getMaterial(data.material);var instanceMatrix=data.instanceMatrix,instanceColor=data.instanceColor;object=new InstancedMesh(geometry,object,
data.count);object.instanceMatrix=new InstancedBufferAttribute(new Float32Array(instanceMatrix.array),16);void 0!==instanceColor&&(object.instanceColor=new InstancedBufferAttribute(new Float32Array(instanceColor.array),instanceColor.itemSize));break;case "BatchedMesh":geometry=getGeometry(data.geometry);object=getMaterial(data.material);object=new BatchedMesh(data.maxInstanceCount,data.maxVertexCount,data.maxIndexCount,object);object.geometry=geometry;object.perObjectFrustumCulled=data.perObjectFrustumCulled;
object.sortObjects=data.sortObjects;object._drawRanges=data.drawRanges;object._reservedRanges=data.reservedRanges;object._geometryInfo=data.geometryInfo.map(function(info){var box=null,sphere=null;void 0!==info.boundingBox&&(box=(new Box3).fromJSON(info.boundingBox));void 0!==info.boundingSphere&&(sphere=(new Sphere).fromJSON(info.boundingSphere));return Object.assign({},info,{boundingBox:box,boundingSphere:sphere})});object._instanceInfo=data.instanceInfo;object._availableInstanceIds=data._availableInstanceIds;
object._availableGeometryIds=data._availableGeometryIds;object._nextIndexStart=data.nextIndexStart;object._nextVertexStart=data.nextVertexStart;object._geometryCount=data.geometryCount;object._maxInstanceCount=data.maxInstanceCount;object._maxVertexCount=data.maxVertexCount;object._maxIndexCount=data.maxIndexCount;object._geometryInitialized=data.geometryInitialized;object._matricesTexture=getTexture(data.matricesTexture.uuid);object._indirectTexture=getTexture(data.indirectTexture.uuid);void 0!==
data.colorsTexture&&(object._colorsTexture=getTexture(data.colorsTexture.uuid));void 0!==data.boundingSphere&&(object.boundingSphere=(new Sphere).fromJSON(data.boundingSphere));void 0!==data.boundingBox&&(object.boundingBox=(new Box3).fromJSON(data.boundingBox));break;case "LOD":object=new LOD;break;case "Line":object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case "LineLoop":object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case "LineSegments":object=
new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case "PointCloud":case "Points":object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case "Sprite":object=new Sprite(getMaterial(data.material));break;case "Group":object=new Group;break;case "Bone":object=new Bone;break;default:object=new Object3D}object.uuid=data.uuid;void 0!==data.name&&(object.name=data.name);void 0!==data.matrix?(object.matrix.fromArray(data.matrix),void 0!==data.matrixAutoUpdate&&
(object.matrixAutoUpdate=data.matrixAutoUpdate),object.matrixAutoUpdate&&object.matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.quaternion&&object.quaternion.fromArray(data.quaternion),void 0!==data.scale&&object.scale.fromArray(data.scale));void 0!==data.up&&object.up.fromArray(data.up);void 0!==data.castShadow&&(object.castShadow=data.castShadow);
void 0!==data.receiveShadow&&(object.receiveShadow=data.receiveShadow);data.shadow&&(void 0!==data.shadow.intensity&&(object.shadow.intensity=data.shadow.intensity),void 0!==data.shadow.bias&&(object.shadow.bias=data.shadow.bias),void 0!==data.shadow.normalBias&&(object.shadow.normalBias=data.shadow.normalBias),void 0!==data.shadow.radius&&(object.shadow.radius=data.shadow.radius),void 0!==data.shadow.mapSize&&object.shadow.mapSize.fromArray(data.shadow.mapSize),void 0!==data.shadow.camera&&(object.shadow.camera=
this.parseObject(data.shadow.camera)));void 0!==data.visible&&(object.visible=data.visible);void 0!==data.frustumCulled&&(object.frustumCulled=data.frustumCulled);void 0!==data.renderOrder&&(object.renderOrder=data.renderOrder);void 0!==data.userData&&(object.userData=data.userData);void 0!==data.layers&&(object.layers.mask=data.layers);if(void 0!==data.children)for(geometry=data.children,instanceMatrix=0;instanceMatrix<geometry.length;instanceMatrix++)object.add(this.parseObject(geometry[instanceMatrix],
geometries,materials,textures,animations));if(void 0!==data.animations)for(geometry=data.animations,instanceMatrix=0;instanceMatrix<geometry.length;instanceMatrix++)object.animations.push(animations[geometry[instanceMatrix]]);if("LOD"===data.type)for(void 0!==data.autoUpdate&&(object.autoUpdate=data.autoUpdate),data=data.levels,animations=0;animations<data.length;animations++)geometry=data[animations],instanceMatrix=object.getObjectByProperty("uuid",geometry.object),void 0!==instanceMatrix&&object.addLevel(instanceMatrix,
geometry.distance,geometry.hysteresis);return object};ObjectLoader.prototype.bindSkeletons=function(object,skeletons){0!==Object.keys(skeletons).length&&object.traverse(function(child){if(!0===child.isSkinnedMesh&&void 0!==child.skeleton){var skeleton=skeletons[child.skeleton];void 0===skeleton?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",child.skeleton):child.bind(skeleton,child.bindMatrix)}})};ObjectLoader.prototype.bindLightTargets=function(object){object.traverse(function(child){if(child.isDirectionalLight||
child.isSpotLight){var target=object.getObjectByProperty("uuid",child.target);child.target=void 0!==target?target:new Object3D}})};var TEXTURE_MAPPING={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306},TEXTURE_WRAPPING={RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},TEXTURE_FILTER={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,
LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008},_errorMap=new WeakMap,ImageBitmapLoader=function(manager){manager=Loader.call(this,manager)||this;manager.isImageBitmapLoader=!0;"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.");"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported.");manager.options={premultiplyAlpha:"none"};manager._abortController=new AbortController;
return manager};$jscomp.inherits(ImageBitmapLoader,Loader);ImageBitmapLoader.prototype.setOptions=function(options){this.options=options;return this};ImageBitmapLoader.prototype.load=function(url,onLoad,onProgress,onError){void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get("image-bitmap:"+url);if(void 0!==cached){scope.manager.itemStart(url);if(cached.then){cached.then(function(imageBitmap){if(!0===_errorMap.has(cached))onError&&
onError(_errorMap.get(cached)),scope.manager.itemError(url),scope.manager.itemEnd(url);else return onLoad&&onLoad(imageBitmap),scope.manager.itemEnd(url),imageBitmap});return}setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0);return cached}onProgress={};onProgress.credentials="anonymous"===this.crossOrigin?"same-origin":"include";onProgress.headers=this.requestHeader;onProgress.signal="function"===typeof AbortSignal.any?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):
this._abortController.signal;var promise=fetch(url,onProgress).then(function(res){return res.blob()}).then(function(blob){return createImageBitmap(blob,Object.assign(scope.options,{colorSpaceConversion:"none"}))}).then(function(imageBitmap){Cache.add("image-bitmap:"+url,imageBitmap);onLoad&&onLoad(imageBitmap);scope.manager.itemEnd(url);return imageBitmap}).catch(function(e){onError&&onError(e);_errorMap.set(promise,e);Cache.remove("image-bitmap:"+url);scope.manager.itemError(url);scope.manager.itemEnd(url)});
Cache.add("image-bitmap:"+url,promise);scope.manager.itemStart(url)};ImageBitmapLoader.prototype.abort=function(){this._abortController.abort();this._abortController=new AbortController;return this};var _context,AudioContext=function(){};AudioContext.getContext=function(){void 0===_context&&(_context=new (window.AudioContext||window.webkitAudioContext));return _context};AudioContext.setContext=function(value){_context=value};var AudioLoader=function(manager){return Loader.call(this,manager)||this};
$jscomp.inherits(AudioLoader,Loader);AudioLoader.prototype.load=function(url,onLoad,onProgress,onError){function handleError(e){onError?onError(e):console.error(e);scope.manager.itemError(url)}var scope=this,loader=new FileLoader(this.manager);loader.setResponseType("arraybuffer");loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(buffer){try{var bufferCopy=buffer.slice(0);AudioContext.getContext().decodeAudioData(bufferCopy,
function(audioBuffer){onLoad(audioBuffer)}).catch(handleError)}catch(e){handleError(e)}},onProgress,onError)};var _eyeRight=new Matrix4,_eyeLeft=new Matrix4,_projectionMatrix=new Matrix4,StereoCamera=function(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1;this._cache={focus:null,fov:null,aspect:null,
near:null,far:null,zoom:null,eyeSep:null}};StereoCamera.prototype.update=function(camera){var cache=this._cache;if(cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;_projectionMatrix.copy(camera.projectionMatrix);
var eyeSepHalf=cache.eyeSep/2,eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus,ymax=cache.near*Math.tan(DEG2RAD*cache.fov*.5)/cache.zoom;_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;eyeSepHalf=-ymax*cache.aspect+eyeSepOnProjection;var xmax=ymax*cache.aspect+eyeSepOnProjection;_projectionMatrix.elements[0]=2*cache.near/(xmax-eyeSepHalf);_projectionMatrix.elements[8]=(xmax+eyeSepHalf)/(xmax-eyeSepHalf);this.cameraL.projectionMatrix.copy(_projectionMatrix);eyeSepHalf=-ymax*
cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;_projectionMatrix.elements[0]=2*cache.near/(xmax-eyeSepHalf);_projectionMatrix.elements[8]=(xmax+eyeSepHalf)/(xmax-eyeSepHalf);this.cameraR.projectionMatrix.copy(_projectionMatrix)}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight)};var ArrayCamera=function(array){array=void 0===array?[]:array;var $jscomp$super$this=PerspectiveCamera.call(this)||
this;$jscomp$super$this.isArrayCamera=!0;$jscomp$super$this.isMultiViewCamera=!1;$jscomp$super$this.cameras=array;return $jscomp$super$this};$jscomp.inherits(ArrayCamera,PerspectiveCamera);var Clock=function(autoStart){this.autoStart=void 0===autoStart?!0:autoStart;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};Clock.prototype.start=function(){this.oldTime=this.startTime=performance.now();this.elapsedTime=0;this.running=!0};Clock.prototype.stop=function(){this.getElapsedTime();this.autoStart=
this.running=!1};Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};Clock.prototype.getDelta=function(){var diff=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var newTime=performance.now();diff=(newTime-this.oldTime)/1E3;this.oldTime=newTime;this.elapsedTime+=diff}return diff};var _position$1=new Vector3,_quaternion$1=new Quaternion,_scale$1=new Vector3,_forward=new Vector3,_up=new Vector3,AudioListener=function(){var $jscomp$super$this=
Object3D.call(this)||this;$jscomp$super$this.type="AudioListener";$jscomp$super$this.context=AudioContext.getContext();$jscomp$super$this.gain=$jscomp$super$this.context.createGain();$jscomp$super$this.gain.connect($jscomp$super$this.context.destination);$jscomp$super$this.filter=null;$jscomp$super$this.timeDelta=0;$jscomp$super$this._clock=new Clock;return $jscomp$super$this};$jscomp.inherits(AudioListener,Object3D);AudioListener.prototype.getInput=function(){return this.gain};AudioListener.prototype.removeFilter=
function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null);return this};AudioListener.prototype.getFilter=function(){return this.filter};AudioListener.prototype.setFilter=function(value){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination);this.filter=value;this.gain.connect(this.filter);
this.filter.connect(this.context.destination);return this};AudioListener.prototype.getMasterVolume=function(){return this.gain.gain.value};AudioListener.prototype.setMasterVolume=function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,.01);return this};AudioListener.prototype.updateMatrixWorld=function(force){Object3D.prototype.updateMatrixWorld.call(this,force);force=this.context.listener;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$1,_quaternion$1,
_scale$1);_forward.set(0,0,-1).applyQuaternion(_quaternion$1);_up.set(0,1,0).applyQuaternion(_quaternion$1);if(force.positionX){var endTime=this.context.currentTime+this.timeDelta;force.positionX.linearRampToValueAtTime(_position$1.x,endTime);force.positionY.linearRampToValueAtTime(_position$1.y,endTime);force.positionZ.linearRampToValueAtTime(_position$1.z,endTime);force.forwardX.linearRampToValueAtTime(_forward.x,endTime);force.forwardY.linearRampToValueAtTime(_forward.y,endTime);force.forwardZ.linearRampToValueAtTime(_forward.z,
endTime);force.upX.linearRampToValueAtTime(_up.x,endTime);force.upY.linearRampToValueAtTime(_up.y,endTime);force.upZ.linearRampToValueAtTime(_up.z,endTime)}else force.setPosition(_position$1.x,_position$1.y,_position$1.z),force.setOrientation(_forward.x,_forward.y,_forward.z,_up.x,_up.y,_up.z)};var Audio=function(listener){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.type="Audio";$jscomp$super$this.listener=listener;$jscomp$super$this.context=listener.context;$jscomp$super$this.gain=
$jscomp$super$this.context.createGain();$jscomp$super$this.gain.connect(listener.getInput());$jscomp$super$this.autoplay=!1;$jscomp$super$this.buffer=null;$jscomp$super$this.detune=0;$jscomp$super$this.loop=!1;$jscomp$super$this.loopStart=0;$jscomp$super$this.loopEnd=0;$jscomp$super$this.offset=0;$jscomp$super$this.duration=void 0;$jscomp$super$this.playbackRate=1;$jscomp$super$this.isPlaying=!1;$jscomp$super$this.hasPlaybackControl=!0;$jscomp$super$this.source=null;$jscomp$super$this.sourceType=
"empty";$jscomp$super$this._startedAt=0;$jscomp$super$this._progress=0;$jscomp$super$this._connected=!1;$jscomp$super$this.filters=[];return $jscomp$super$this};$jscomp.inherits(Audio,Object3D);Audio.prototype.getOutput=function(){return this.gain};Audio.prototype.setNodeSource=function(audioNode){this.hasPlaybackControl=!1;this.sourceType="audioNode";this.source=audioNode;this.connect();return this};Audio.prototype.setMediaElementSource=function(mediaElement){this.hasPlaybackControl=!1;this.sourceType=
"mediaNode";this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this};Audio.prototype.setMediaStreamSource=function(mediaStream){this.hasPlaybackControl=!1;this.sourceType="mediaStreamNode";this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this};Audio.prototype.setBuffer=function(audioBuffer){this.buffer=audioBuffer;this.sourceType="buffer";this.autoplay&&this.play();return this};Audio.prototype.play=function(delay){delay=void 0===
delay?0:delay;if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this._startedAt=this.context.currentTime+delay,delay=this.context.createBufferSource(),delay.buffer=this.buffer,delay.loop=this.loop,delay.loopStart=this.loopStart,delay.loopEnd=this.loopEnd,delay.onended=this.onEnded.bind(this),delay.start(this._startedAt,this._progress+this.offset,this.duration),
this.isPlaying=!0,this.source=delay,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()};Audio.prototype.pause=function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress%=this.duration||this.buffer.duration),this.source.stop(),this.source.onended=null,this.isPlaying=!1),
this};Audio.prototype.stop=function(delay){delay=void 0===delay?0:delay;if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+delay),this.source.onended=null),this.isPlaying=!1,this};Audio.prototype.connect=function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++)this.filters[i-1].connect(this.filters[i]);
this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());this._connected=!0;return this};Audio.prototype.disconnect=function(){if(!1!==this._connected){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++)this.filters[i-1].disconnect(this.filters[i]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());this._connected=!1;return this}};Audio.prototype.getFilters=
function(){return this.filters};Audio.prototype.setFilters=function(value){value||(value=[]);!0===this._connected?(this.disconnect(),this.filters=value.slice(),this.connect()):this.filters=value.slice();return this};Audio.prototype.setDetune=function(value){this.detune=value;!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01);return this};Audio.prototype.getDetune=function(){return this.detune};Audio.prototype.getFilter=function(){return this.getFilters()[0]};
Audio.prototype.setFilter=function(filter){return this.setFilters(filter?[filter]:[])};Audio.prototype.setPlaybackRate=function(value){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.playbackRate=value,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this};Audio.prototype.getPlaybackRate=function(){return this.playbackRate};Audio.prototype.onEnded=function(){this.isPlaying=
!1;this._progress=0};Audio.prototype.getLoop=function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop};Audio.prototype.setLoop=function(value){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=value,!0===this.isPlaying&&(this.source.loop=this.loop),this};Audio.prototype.setLoopStart=function(value){this.loopStart=value;return this};Audio.prototype.setLoopEnd=function(value){this.loopEnd=
value;return this};Audio.prototype.getVolume=function(){return this.gain.gain.value};Audio.prototype.setVolume=function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,.01);return this};Audio.prototype.copy=function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);if("buffer"!==source.sourceType)return console.warn("THREE.Audio: Audio source type cannot be copied."),this;this.autoplay=source.autoplay;this.buffer=source.buffer;this.detune=source.detune;this.loop=
source.loop;this.loopStart=source.loopStart;this.loopEnd=source.loopEnd;this.offset=source.offset;this.duration=source.duration;this.playbackRate=source.playbackRate;this.hasPlaybackControl=source.hasPlaybackControl;this.sourceType=source.sourceType;this.filters=source.filters.slice();return this};Audio.prototype.clone=function(recursive){return(new this.constructor(this.listener)).copy(this,recursive)};var _position=new Vector3,_quaternion=new Quaternion,_scale=new Vector3,_orientation=new Vector3,
PositionalAudio=function(listener){listener=Audio.call(this,listener)||this;listener.panner=listener.context.createPanner();listener.panner.panningModel="HRTF";listener.panner.connect(listener.gain);return listener};$jscomp.inherits(PositionalAudio,Audio);PositionalAudio.prototype.connect=function(){Audio.prototype.connect.call(this);this.panner.connect(this.gain);return this};PositionalAudio.prototype.disconnect=function(){Audio.prototype.disconnect.call(this);this.panner.disconnect(this.gain);return this};
PositionalAudio.prototype.getOutput=function(){return this.panner};PositionalAudio.prototype.getRefDistance=function(){return this.panner.refDistance};PositionalAudio.prototype.setRefDistance=function(value){this.panner.refDistance=value;return this};PositionalAudio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor};PositionalAudio.prototype.setRolloffFactor=function(value){this.panner.rolloffFactor=value;return this};PositionalAudio.prototype.getDistanceModel=function(){return this.panner.distanceModel};
PositionalAudio.prototype.setDistanceModel=function(value){this.panner.distanceModel=value;return this};PositionalAudio.prototype.getMaxDistance=function(){return this.panner.maxDistance};PositionalAudio.prototype.setMaxDistance=function(value){this.panner.maxDistance=value;return this};PositionalAudio.prototype.setDirectionalCone=function(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;
return this};PositionalAudio.prototype.updateMatrixWorld=function(force){Audio.prototype.updateMatrixWorld.call(this,force);if(!0!==this.hasPlaybackControl||!1!==this.isPlaying)if(this.matrixWorld.decompose(_position,_quaternion,_scale),_orientation.set(0,0,1).applyQuaternion(_quaternion),force=this.panner,force.positionX){var endTime=this.context.currentTime+this.listener.timeDelta;force.positionX.linearRampToValueAtTime(_position.x,endTime);force.positionY.linearRampToValueAtTime(_position.y,endTime);
force.positionZ.linearRampToValueAtTime(_position.z,endTime);force.orientationX.linearRampToValueAtTime(_orientation.x,endTime);force.orientationY.linearRampToValueAtTime(_orientation.y,endTime);force.orientationZ.linearRampToValueAtTime(_orientation.z,endTime)}else force.setPosition(_position.x,_position.y,_position.z),force.setOrientation(_orientation.x,_orientation.y,_orientation.z)};var AudioAnalyser=function(audio,fftSize){fftSize=void 0===fftSize?2048:fftSize;this.analyser=audio.context.createAnalyser();
this.analyser.fftSize=fftSize;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser)};AudioAnalyser.prototype.getFrequencyData=function(){this.analyser.getByteFrequencyData(this.data);return this.data};AudioAnalyser.prototype.getAverageFrequency=function(){for(var value=0,data=this.getFrequencyData(),i=0;i<data.length;i++)value+=data[i];return value/data.length};var PropertyMixer=function(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;
switch(typeName){case "quaternion":binding=this._slerp;typeName=this._slerpAdditive;var setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(6*valueSize);this._workIndex=5;break;case "string":case "bool":typeName=binding=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=Array(5*valueSize);break;default:binding=this._lerp,typeName=this._lerpAdditive,setIdentity=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*valueSize)}this._mixBufferRegion=
binding;this._mixBufferRegionAdditive=typeName;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.referenceCount=this.useCount=this.cumulativeWeightAdditive=this.cumulativeWeight=0};PropertyMixer.prototype.accumulate=function(accuIndex,weight){var buffer=this.buffer,stride=this.valueSize;accuIndex=accuIndex*stride+stride;var currentWeight=this.cumulativeWeight;if(0===currentWeight){for(currentWeight=0;currentWeight!==stride;++currentWeight)buffer[accuIndex+currentWeight]=buffer[currentWeight];
currentWeight=weight}else currentWeight+=weight,this._mixBufferRegion(buffer,accuIndex,0,weight/currentWeight,stride);this.cumulativeWeight=currentWeight};PropertyMixer.prototype.accumulateAdditive=function(weight){var buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity();this._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight};PropertyMixer.prototype.apply=function(accuIndex){var stride=
this.valueSize,buffer=this.buffer;accuIndex=accuIndex*stride+stride;var weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeightAdditive=this.cumulativeWeight=0;1>weight&&this._mixBufferRegion(buffer,accuIndex,stride*this._origIndex,1-weight,stride);0<weightAdditive&&this._mixBufferRegionAdditive(buffer,accuIndex,this._addIndex*stride,1,stride);weight=stride;for(weightAdditive=stride+stride;weight!==weightAdditive;++weight)if(buffer[weight]!==
buffer[weight+stride]){binding.setValue(buffer,accuIndex);break}};PropertyMixer.prototype.saveOriginalState=function(){var buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;this.binding.getValue(buffer,originalValueOffset);for(var i=stride;i!==originalValueOffset;++i)buffer[i]=buffer[originalValueOffset+i%stride];this._setIdentity();this.cumulativeWeightAdditive=this.cumulativeWeight=0};PropertyMixer.prototype.restoreOriginalState=function(){this.binding.setValue(this.buffer,
3*this.valueSize)};PropertyMixer.prototype._setAdditiveIdentityNumeric=function(){for(var startIndex=this._addIndex*this.valueSize,endIndex=startIndex+this.valueSize;startIndex<endIndex;startIndex++)this.buffer[startIndex]=0};PropertyMixer.prototype._setAdditiveIdentityQuaternion=function(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1};PropertyMixer.prototype._setAdditiveIdentityOther=function(){for(var startIndex=this._origIndex*this.valueSize,targetIndex=this._addIndex*
this.valueSize,i=0;i<this.valueSize;i++)this.buffer[targetIndex+i]=this.buffer[startIndex+i]};PropertyMixer.prototype._select=function(buffer,dstOffset,srcOffset,t,stride){if(.5<=t)for(t=0;t!==stride;++t)buffer[dstOffset+t]=buffer[srcOffset+t]};PropertyMixer.prototype._slerp=function(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t)};PropertyMixer.prototype._slerpAdditive=function(buffer,dstOffset,srcOffset,t,stride){stride*=this._workIndex;Quaternion.multiplyQuaternionsFlat(buffer,
stride,buffer,dstOffset,buffer,srcOffset);Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,stride,t)};PropertyMixer.prototype._lerp=function(buffer,dstOffset,srcOffset,t,stride){for(var s=1-t,i=0;i!==stride;++i){var j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t}};PropertyMixer.prototype._lerpAdditive=function(buffer,dstOffset,srcOffset,t,stride){for(var i=0;i!==stride;++i){var j=dstOffset+i;buffer[j]+=buffer[srcOffset+i]*t}};var _reservedRe=/[\[\]\.:\/]/g,_wordCharOrDot="[^"+
"\\[\\]\\.:\\/".replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones","map"],Composite=function(targetGroup,path,optionalParsedPath){optionalParsedPath=
optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,optionalParsedPath)};Composite.prototype.getValue=function(array,offset){this.bind();var binding=this._bindings[this._targetGroup.nCachedObjects_];void 0!==binding&&binding.getValue(array,offset)};Composite.prototype.setValue=function(array,offset){for(var bindings=this._bindings,i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].setValue(array,
offset)};Composite.prototype.bind=function(){for(var bindings=this._bindings,i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].bind()};Composite.prototype.unbind=function(){for(var bindings=this._bindings,i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i)bindings[i].unbind()};var PropertyBinding=function(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName);
this.rootNode=rootNode;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound};PropertyBinding.create=function(root,path,parsedPath){return root&&root.isAnimationObjectGroup?new PropertyBinding.Composite(root,path,parsedPath):new PropertyBinding(root,path,parsedPath)};PropertyBinding.sanitizeNodeName=function(name){return name.replace(/\s/g,"_").replace(_reservedRe,"")};PropertyBinding.parseTrackName=function(trackName){var matches=_trackRe.exec(trackName);if(null===matches)throw Error("PropertyBinding: Cannot parse trackName: "+
trackName);matches={nodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],propertyIndex:matches[6]};var lastDot=matches.nodeName&&matches.nodeName.lastIndexOf(".");if(void 0!==lastDot&&-1!==lastDot){var objectName=matches.nodeName.substring(lastDot+1);-1!==_supportedObjectNames.indexOf(objectName)&&(matches.nodeName=matches.nodeName.substring(0,lastDot),matches.objectName=objectName)}if(null===matches.propertyName||0===matches.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+
trackName);return matches};PropertyBinding.findNode=function(root,nodeName){if(void 0===nodeName||""===nodeName||"."===nodeName||-1===nodeName||nodeName===root.name||nodeName===root.uuid)return root;if(root.skeleton){var bone=root.skeleton.getBoneByName(nodeName);if(void 0!==bone)return bone}if(root.children){var searchNodeSubtree=function(children){for(var i=0;i<children.length;i++){var childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName||(childNode=searchNodeSubtree(childNode.children)))return childNode}return null};
if(root=searchNodeSubtree(root.children))return root}return null};PropertyBinding.prototype._getValue_unavailable=function(){};PropertyBinding.prototype._setValue_unavailable=function(){};PropertyBinding.prototype._getValue_direct=function(buffer,offset){buffer[offset]=this.targetObject[this.propertyName]};PropertyBinding.prototype._getValue_array=function(buffer,offset){for(var source=this.resolvedProperty,i=0,n=source.length;i!==n;++i)buffer[offset++]=source[i]};PropertyBinding.prototype._getValue_arrayElement=
function(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex]};PropertyBinding.prototype._getValue_toArray=function(buffer,offset){this.resolvedProperty.toArray(buffer,offset)};PropertyBinding.prototype._setValue_direct=function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset]};PropertyBinding.prototype._setValue_direct_setNeedsUpdate=function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=!0};PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate=
function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=!0};PropertyBinding.prototype._setValue_array=function(buffer,offset){for(var dest=this.resolvedProperty,i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++]};PropertyBinding.prototype._setValue_array_setNeedsUpdate=function(buffer,offset){for(var dest=this.resolvedProperty,i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++];this.targetObject.needsUpdate=!0};PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate=
function(buffer,offset){for(var dest=this.resolvedProperty,i=0,n=dest.length;i!==n;++i)dest[i]=buffer[offset++];this.targetObject.matrixWorldNeedsUpdate=!0};PropertyBinding.prototype._setValue_arrayElement=function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset]};PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate=function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=!0};PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate=
function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=!0};PropertyBinding.prototype._setValue_fromArray=function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset)};PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate=function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=!0};PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate=function(buffer,offset){this.resolvedProperty.fromArray(buffer,
offset);this.targetObject.matrixWorldNeedsUpdate=!0};PropertyBinding.prototype._getValue_unbound=function(targetArray,offset){this.bind();this.getValue(targetArray,offset)};PropertyBinding.prototype._setValue_unbound=function(sourceArray,offset){this.bind();this.setValue(sourceArray,offset)};PropertyBinding.prototype.bind=function(){var targetObject=this.node,parsedPath=this.parsedPath,objectName=parsedPath.objectName,propertyName=parsedPath.propertyName,propertyIndex=parsedPath.propertyIndex;targetObject||
(this.node=targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName));this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(targetObject){if(objectName){var objectIndex=parsedPath.objectIndex;switch(objectName){case "materials":if(!targetObject.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!targetObject.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
this);return}targetObject=targetObject.material.materials;break;case "bones":if(!targetObject.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}targetObject=targetObject.skeleton.bones;for(objectName=0;objectName<targetObject.length;objectName++)if(targetObject[objectName].name===objectIndex){objectIndex=objectName;break}break;case "map":if("map"in targetObject){targetObject=targetObject.map;break}if(!targetObject.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",
this);return}if(!targetObject.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}targetObject=targetObject.material.map;break;default:if(void 0===targetObject[objectName]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}targetObject=targetObject[objectName]}if(void 0!==objectIndex){if(void 0===targetObject[objectIndex]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",
this,targetObject);return}targetObject=targetObject[objectIndex]}}objectIndex=targetObject[propertyName];if(void 0===objectIndex)console.error("THREE.PropertyBinding: Trying to update property for track: "+parsedPath.nodeName+"."+propertyName+" but it wasn't found.",targetObject);else{parsedPath=this.Versioning.None;this.targetObject=targetObject;!0===targetObject.isMaterial?parsedPath=this.Versioning.NeedsUpdate:!0===targetObject.isObject3D&&(parsedPath=this.Versioning.MatrixWorldNeedsUpdate);objectName=
this.BindingType.Direct;if(void 0!==propertyIndex){if("morphTargetInfluences"===propertyName){if(!targetObject.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!targetObject.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==targetObject.morphTargetDictionary[propertyIndex]&&(propertyIndex=
targetObject.morphTargetDictionary[propertyIndex])}objectName=this.BindingType.ArrayElement;this.resolvedProperty=objectIndex;this.propertyIndex=propertyIndex}else void 0!==objectIndex.fromArray&&void 0!==objectIndex.toArray?(objectName=this.BindingType.HasFromToArray,this.resolvedProperty=objectIndex):Array.isArray(objectIndex)?(objectName=this.BindingType.EntireArray,this.resolvedProperty=objectIndex):this.propertyName=propertyName;this.getValue=this.GetterByBindingType[objectName];this.setValue=
this.SetterByBindingTypeAndVersioning[objectName][parsedPath]}}else console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".")};PropertyBinding.prototype.unbind=function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound};PropertyBinding.Composite=Composite;PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};
PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray];PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[PropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_array,
PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[PropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var AnimationObjectGroup=
function(){this.isAnimationObjectGroup=!0;this.uuid=generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var indices={};this._indicesByUUID=indices;for(var i=0,n=arguments.length;i!==n;++i)indices[arguments[i].uuid]=i;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var scope=this;this.stats={objects:{get total(){return scope._objects.length},get inUse(){return this.total-scope.nCachedObjects_}},get bindingsPerObject(){return scope._bindings.length}}};
AnimationObjectGroup.prototype.add=function(){for(var objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length,knownObject=void 0,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0===index){index=nObjects++;indicesByUUID[uuid]=index;objects.push(object);index=0;for(var m=nBindings;index!==
m;++index)bindings[index].push(new PropertyBinding(object,paths[index],parsedPaths[index]))}else if(index<nCachedObjects){knownObject=objects[index];m=--nCachedObjects;var lastCachedObject=objects[m];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=m;objects[m]=object;uuid=0;for(lastCachedObject=nBindings;uuid!==lastCachedObject;++uuid){var bindingsForPath=bindings[uuid],binding=bindingsForPath[index];bindingsForPath[index]=bindingsForPath[m];void 0===
binding&&(binding=new PropertyBinding(object,paths[uuid],parsedPaths[uuid]));bindingsForPath[m]=binding}}else objects[index]!==knownObject&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=nCachedObjects};AnimationObjectGroup.prototype.remove=function(){for(var objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length,
nCachedObjects=this.nCachedObjects_,i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0!==index&&index>=nCachedObjects){var lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;object=0;for(uuid=nBindings;object!==uuid;++object){firstActiveObject=bindings[object];var binding=
firstActiveObject[index];firstActiveObject[index]=firstActiveObject[lastCachedIndex];firstActiveObject[lastCachedIndex]=binding}}}this.nCachedObjects_=nCachedObjects};AnimationObjectGroup.prototype.uncache=function(){for(var objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length,nCachedObjects=this.nCachedObjects_,nObjects=objects.length,i=0,n=arguments.length;i!==n;++i){var uuid=arguments[i].uuid,index=indicesByUUID[uuid];if(void 0!==index)if(delete indicesByUUID[uuid],
index<nCachedObjects){uuid=--nCachedObjects;var lastCachedObject=objects[uuid],lastIndex=--nObjects,lastObject=objects[lastIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[lastObject.uuid]=uuid;objects[uuid]=lastObject;objects.pop();lastCachedObject=0;for(lastObject=nBindings;lastCachedObject!==lastObject;++lastCachedObject){var bindingsForPath=bindings[lastCachedObject],last=bindingsForPath[lastIndex];bindingsForPath[index]=bindingsForPath[uuid];bindingsForPath[uuid]=
last;bindingsForPath.pop()}}else for(uuid=--nObjects,lastIndex=objects[uuid],0<uuid&&(indicesByUUID[lastIndex.uuid]=index),objects[index]=lastIndex,objects.pop(),lastIndex=0,lastCachedObject=nBindings;lastIndex!==lastCachedObject;++lastIndex)lastObject=bindings[lastIndex],lastObject[index]=lastObject[uuid],lastObject.pop()}this.nCachedObjects_=nCachedObjects};AnimationObjectGroup.prototype.subscribe_=function(path,parsedPath){var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path],
bindings=this._bindings;if(void 0!==index)return bindings[index];var paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nCachedObjects=this.nCachedObjects_,bindingsForPath=Array(objects.length);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);indicesByPath=nCachedObjects;for(index=objects.length;indicesByPath!==index;++indicesByPath)bindingsForPath[indicesByPath]=new PropertyBinding(objects[indicesByPath],
path,parsedPath);return bindingsForPath};AnimationObjectGroup.prototype.unsubscribe_=function(path){var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(void 0!==index){var paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex];indicesByPath[path[lastBindingsIndex]]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();
paths[index]=paths[lastBindingsIndex];paths.pop()}};var AnimationAction=function(mixer,clip,localRoot,blendMode){blendMode=void 0===blendMode?clip.blendMode:blendMode;this._mixer=mixer;this._clip=clip;this._localRoot=void 0===localRoot?null:localRoot;this.blendMode=blendMode;mixer=clip.tracks;clip=mixer.length;localRoot=Array(clip);blendMode={endingStart:2400,endingEnd:2400};for(var i=0;i!==clip;++i){var interpolant=mixer[i].createInterpolant(null);localRoot[i]=interpolant;interpolant.settings=blendMode}this._interpolantSettings=
blendMode;this._interpolants=localRoot;this._propertyBindings=Array(clip);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0};AnimationAction.prototype.play=function(){this._mixer._activateAction(this);
return this};AnimationAction.prototype.stop=function(){this._mixer._deactivateAction(this);return this.reset()};AnimationAction.prototype.reset=function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()};AnimationAction.prototype.isRunning=function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)};AnimationAction.prototype.isScheduled=function(){return this._mixer._isActiveAction(this)};
AnimationAction.prototype.startAt=function(time){this._startTime=time;return this};AnimationAction.prototype.setLoop=function(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this};AnimationAction.prototype.setEffectiveWeight=function(weight){this.weight=weight;this._effectiveWeight=this.enabled?weight:0;return this.stopFading()};AnimationAction.prototype.getEffectiveWeight=function(){return this._effectiveWeight};AnimationAction.prototype.fadeIn=function(duration){return this._scheduleFading(duration,
0,1)};AnimationAction.prototype.fadeOut=function(duration){return this._scheduleFading(duration,1,0)};AnimationAction.prototype.crossFadeFrom=function(fadeOutAction,duration,warp){warp=void 0===warp?!1:warp;fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(!0===warp){warp=this._clip.duration;var fadeOutDuration=fadeOutAction._clip.duration,endStartRatio=warp/fadeOutDuration;fadeOutAction.warp(1,fadeOutDuration/warp,duration);this.warp(endStartRatio,1,duration)}return this};AnimationAction.prototype.crossFadeTo=
function(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,void 0===warp?!1:warp)};AnimationAction.prototype.stopFading=function(){var weightInterpolant=this._weightInterpolant;null!==weightInterpolant&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(weightInterpolant));return this};AnimationAction.prototype.setEffectiveTimeScale=function(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping()};
AnimationAction.prototype.getEffectiveTimeScale=function(){return this._effectiveTimeScale};AnimationAction.prototype.setDuration=function(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping()};AnimationAction.prototype.syncWith=function(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping()};AnimationAction.prototype.halt=function(duration){return this.warp(this._effectiveTimeScale,0,duration)};AnimationAction.prototype.warp=function(startTimeScale,
endTimeScale,duration){var mixer=this._mixer,now=mixer.time,timeScale=this.timeScale,interpolant=this._timeScaleInterpolant;null===interpolant&&(this._timeScaleInterpolant=interpolant=mixer._lendControlInterpolant());mixer=interpolant.parameterPositions;interpolant=interpolant.sampleValues;mixer[0]=now;mixer[1]=now+duration;interpolant[0]=startTimeScale/timeScale;interpolant[1]=endTimeScale/timeScale;return this};AnimationAction.prototype.stopWarping=function(){var timeScaleInterpolant=this._timeScaleInterpolant;
null!==timeScaleInterpolant&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(timeScaleInterpolant));return this};AnimationAction.prototype.getMixer=function(){return this._mixer};AnimationAction.prototype.getClip=function(){return this._clip};AnimationAction.prototype.getRoot=function(){return this._localRoot||this._mixer._root};AnimationAction.prototype._update=function(time,deltaTime,timeDirection,accuIndex){if(this.enabled){var startTime=this._startTime;null!==startTime&&
(deltaTime=(time-startTime)*timeDirection,0>deltaTime||0===timeDirection?deltaTime=0:(this._startTime=null,deltaTime*=timeDirection));deltaTime*=this._updateTimeScale(time);timeDirection=this._updateTime(deltaTime);time=this._updateWeight(time);if(0<time)switch(deltaTime=this._interpolants,startTime=this._propertyBindings,this.blendMode){case 2501:accuIndex=0;for(var m=deltaTime.length;accuIndex!==m;++accuIndex)deltaTime[accuIndex].evaluate(timeDirection),startTime[accuIndex].accumulateAdditive(time);
break;default:m=0;for(var m$270=deltaTime.length;m!==m$270;++m)deltaTime[m].evaluate(timeDirection),startTime[m].accumulate(accuIndex,time)}}else this._updateWeight(time)};AnimationAction.prototype._updateWeight=function(time){var weight=0;if(this.enabled){weight=this.weight;var interpolant=this._weightInterpolant;if(null!==interpolant){var interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;time>interpolant.parameterPositions[1]&&(this.stopFading(),0===interpolantValue&&(this.enabled=
!1))}}return this._effectiveWeight=weight};AnimationAction.prototype._updateTimeScale=function(time){var timeScale=0;if(!this.paused){timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;if(null!==interpolant){var interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;time>interpolant.parameterPositions[1]&&(this.stopWarping(),0===timeScale?this.paused=!0:this.timeScale=timeScale)}}return this._effectiveTimeScale=timeScale};AnimationAction.prototype._updateTime=
function(deltaTime){var duration=this._clip.duration,loop=this.loop,time=this.time+deltaTime,loopCount=this._loopCount,pingPong=2202===loop;if(0===deltaTime)return-1===loopCount?time:pingPong&&1===(loopCount&1)?duration-time:time;if(2200===loop)a:{if(-1===loopCount&&(this._loopCount=0,this._setEndings(!0,!0,!1)),time>=duration)time=duration;else if(0>time)time=0;else{this.time=time;break a}this.clampWhenFinished?this.paused=!0:this.enabled=!1;this.time=time;this._mixer.dispatchEvent({type:"finished",
action:this,direction:0>deltaTime?-1:1})}else{-1===loopCount&&(0<=deltaTime?(loopCount=0,this._setEndings(!0,0===this.repetitions,pingPong)):this._setEndings(0===this.repetitions,!0,pingPong));if(time>=duration||0>time){loop=Math.floor(time/duration);time-=duration*loop;loopCount+=Math.abs(loop);var pending=this.repetitions-loopCount;0>=pending?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time=0<deltaTime?duration:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<
deltaTime?1:-1})):(1===pending?(deltaTime=0>deltaTime,this._setEndings(deltaTime,!deltaTime,pingPong)):this._setEndings(!1,!1,pingPong),this._loopCount=loopCount,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:loop}))}else this.time=time;if(pingPong&&1===(loopCount&1))return duration-time}return time};AnimationAction.prototype._setEndings=function(atStart,atEnd,pingPong){var settings=this._interpolantSettings;pingPong?(settings.endingStart=2401,settings.endingEnd=2401):
(settings.endingStart=atStart?this.zeroSlopeAtStart?2401:2400:2402,settings.endingEnd=atEnd?this.zeroSlopeAtEnd?2401:2400:2402)};AnimationAction.prototype._scheduleFading=function(duration,weightNow,weightThen){var mixer=this._mixer,now=mixer.time,interpolant=this._weightInterpolant;null===interpolant&&(this._weightInterpolant=interpolant=mixer._lendControlInterpolant());mixer=interpolant.parameterPositions;interpolant=interpolant.sampleValues;mixer[0]=now;interpolant[0]=weightNow;mixer[1]=now+duration;
interpolant[1]=weightThen;return this};var _controlInterpolantsResultBuffer=new Float32Array(1),AnimationMixer=function(root){this._root=root;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1;return this};$jscomp.inherits(AnimationMixer,EventDispatcher);AnimationMixer.prototype._bindAction=function(action,prototypeAction){var root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings;action=action._interpolants;var rootUuid=
root.uuid,bindingsByRoot=this._bindingsByRootAndName,bindingsByName=bindingsByRoot[rootUuid];void 0===bindingsByName&&(bindingsByName={},bindingsByRoot[rootUuid]=bindingsByName);for(bindingsByRoot=0;bindingsByRoot!==nTracks;++bindingsByRoot){var track=tracks[bindingsByRoot],trackName=track.name,binding=bindingsByName[trackName];if(void 0!==binding)++binding.referenceCount;else{binding=bindings[bindingsByRoot];if(void 0!==binding){null===binding._cacheIndex&&(++binding.referenceCount,this._addInactiveBinding(binding,
rootUuid,trackName));continue}binding=new PropertyMixer(PropertyBinding.create(root,trackName,prototypeAction&&prototypeAction._propertyBindings[bindingsByRoot].binding.parsedPath),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName)}bindings[bindingsByRoot]=binding;action[bindingsByRoot].resultBuffer=binding.buffer}};AnimationMixer.prototype._activateAction=function(action){if(!this._isActiveAction(action)){if(null===action._cacheIndex){var rootUuid=
(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid)}rootUuid=action._propertyBindings;clipUuid=0;for(actionsForClip=rootUuid.length;clipUuid!==actionsForClip;++clipUuid){var binding=rootUuid[clipUuid];0===binding.useCount++&&(this._lendBinding(binding),binding.saveOriginalState())}this._lendAction(action)}};AnimationMixer.prototype._deactivateAction=
function(action){if(this._isActiveAction(action)){for(var bindings=action._propertyBindings,i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];0===--binding.useCount&&(binding.restoreOriginalState(),this._takeBackBinding(binding))}this._takeBackAction(action)}};AnimationMixer.prototype._initMemoryManager=function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=
0;var scope=this;this.stats={actions:{get total(){return scope._actions.length},get inUse(){return scope._nActiveActions}},bindings:{get total(){return scope._bindings.length},get inUse(){return scope._nActiveBindings}},controlInterpolants:{get total(){return scope._controlInterpolants.length},get inUse(){return scope._nActiveControlInterpolants}}}};AnimationMixer.prototype._isActiveAction=function(action){action=action._cacheIndex;return null!==action&&action<this._nActiveActions};AnimationMixer.prototype._addInactiveAction=
function(action,clipUuid,rootUuid){var actions=this._actions,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];void 0===actionsForClip?(actionsForClip={knownActions:[action],actionByRoot:{}},action._byClipCacheIndex=0,actionsByClip[clipUuid]=actionsForClip):(clipUuid=actionsForClip.knownActions,action._byClipCacheIndex=clipUuid.length,clipUuid.push(action));action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action};AnimationMixer.prototype._removeInactiveAction=
function(action){var actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;actions=action._clip.uuid;lastInactiveAction=this._actionsByClip;cacheIndex=lastInactiveAction[actions];var knownActionsForClip=cacheIndex.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=
byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;delete cacheIndex.actionByRoot[(action._localRoot||this._root).uuid];0===knownActionsForClip.length&&delete lastInactiveAction[actions];this._removeInactiveBindingsForAction(action)};AnimationMixer.prototype._removeInactiveBindingsForAction=function(action){action=action._propertyBindings;for(var i=0,n=action.length;i!==n;++i){var binding=action[i];0===--binding.referenceCount&&
this._removeInactiveBinding(binding)}};AnimationMixer.prototype._lendAction=function(action){var actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction};AnimationMixer.prototype._takeBackAction=function(action){var actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=
--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction};AnimationMixer.prototype._addInactiveBinding=function(binding,rootUuid,trackName){var bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings,bindingByName=bindingsByRoot[rootUuid];void 0===bindingByName&&(bindingByName={},bindingsByRoot[rootUuid]=bindingByName);bindingByName[trackName]=
binding;binding._cacheIndex=bindings.length;bindings.push(binding)};AnimationMixer.prototype._removeInactiveBinding=function(binding){var bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid;propBinding=propBinding.path;var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1];binding=binding._cacheIndex;lastInactiveBinding._cacheIndex=binding;bindings[binding]=lastInactiveBinding;bindings.pop();
delete bindingByName[propBinding];0===Object.keys(bindingByName).length&&delete bindingsByRoot[rootUuid]};AnimationMixer.prototype._lendBinding=function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding};AnimationMixer.prototype._takeBackBinding=
function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding};AnimationMixer.prototype._lendControlInterpolant=function(){var interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++,interpolant=interpolants[lastActiveIndex];
void 0===interpolant&&(interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,_controlInterpolantsResultBuffer),interpolant.__cacheIndex=lastActiveIndex,interpolants[lastActiveIndex]=interpolant);return interpolant};AnimationMixer.prototype._takeBackControlInterpolant=function(interpolant){var interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=
firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant};AnimationMixer.prototype.clipAction=function(clip,optionalRoot,blendMode){var root=optionalRoot||this._root,rootUuid=root.uuid;root="string"===typeof clip?AnimationClip.findByName(root,clip):clip;clip=null!==root?root.uuid:clip;var actionsForClip=this._actionsByClip[clip],prototypeAction=null;void 0===blendMode&&(blendMode=null!==root?root.blendMode:
2500);if(void 0!==actionsForClip){prototypeAction=actionsForClip.actionByRoot[rootUuid];if(void 0!==prototypeAction&&prototypeAction.blendMode===blendMode)return prototypeAction;prototypeAction=actionsForClip.knownActions[0];null===root&&(root=prototypeAction._clip)}if(null===root)return null;optionalRoot=new AnimationAction(this,root,optionalRoot,blendMode);this._bindAction(optionalRoot,prototypeAction);this._addInactiveAction(optionalRoot,clip,rootUuid);return optionalRoot};AnimationMixer.prototype.existingAction=
function(clip,optionalRoot){var root=optionalRoot||this._root;optionalRoot=root.uuid;root="string"===typeof clip?AnimationClip.findByName(root,clip):clip;clip=this._actionsByClip[root?root.uuid:clip];return void 0!==clip?clip.actionByRoot[optionalRoot]||null:null};AnimationMixer.prototype.stopAllAction=function(){for(var actions=this._actions,i=this._nActiveActions-1;0<=i;--i)actions[i].stop();return this};AnimationMixer.prototype.update=function(deltaTime){deltaTime*=this.timeScale;for(var actions=
this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1,i=0;i!==nActions;++i)actions[i]._update(time,deltaTime,timeDirection,accuIndex);deltaTime=this._bindings;actions=this._nActiveBindings;for(nActions=0;nActions!==actions;++nActions)deltaTime[nActions].apply(accuIndex);return this};AnimationMixer.prototype.setTime=function(time){for(var i=this.time=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(time)};
AnimationMixer.prototype.getRoot=function(){return this._root};AnimationMixer.prototype.uncacheClip=function(clip){var actions=this._actions;clip=clip.uuid;var actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clip];if(void 0!==actionsForClip){actionsForClip=actionsForClip.knownActions;for(var i=0,n=actionsForClip.length;i!==n;++i){var action=actionsForClip[i];this._deactivateAction(action);var cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=
null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action)}delete actionsByClip[clip]}};AnimationMixer.prototype.uncacheRoot=function(root){root=root.uuid;var actionsByClip=this._actionsByClip;for(clipUuid in actionsByClip){var action=actionsByClip[clipUuid].actionByRoot[root];void 0!==action&&(this._deactivateAction(action),this._removeInactiveAction(action))}var clipUuid=this._bindingsByRootAndName[root];
if(void 0!==clipUuid)for(var trackName in clipUuid)root=clipUuid[trackName],root.restoreOriginalState(),this._removeInactiveBinding(root)};AnimationMixer.prototype.uncacheAction=function(clip,optionalRoot){clip=this.existingAction(clip,optionalRoot);null!==clip&&(this._deactivateAction(clip),this._removeInactiveAction(clip))};var RenderTarget3D=function(width,height,depth,options){width=void 0===width?1:width;height=void 0===height?1:height;depth=void 0===depth?1:depth;options=void 0===options?{}:
options;var $jscomp$super$this=RenderTarget.call(this,width,height,options)||this;$jscomp$super$this.isRenderTarget3D=!0;$jscomp$super$this.depth=depth;$jscomp$super$this.texture=new Data3DTexture(null,width,height,depth);$jscomp$super$this._setTextureOptions(options);$jscomp$super$this.texture.isRenderTargetTexture=!0;return $jscomp$super$this};$jscomp.inherits(RenderTarget3D,RenderTarget);var Uniform=function(value){this.value=value};Uniform.prototype.clone=function(){return new Uniform(void 0===
this.value.clone?this.value:this.value.clone())};var _id$1=0,UniformsGroup=function(){this.isUniformsGroup=!0;Object.defineProperty(this,"id",{value:_id$1++});this.name="";this.usage=35044;this.uniforms=[];return this};$jscomp.inherits(UniformsGroup,EventDispatcher);UniformsGroup.prototype.add=function(uniform){this.uniforms.push(uniform);return this};UniformsGroup.prototype.remove=function(uniform){uniform=this.uniforms.indexOf(uniform);-1!==uniform&&this.uniforms.splice(uniform,1);return this};
UniformsGroup.prototype.setName=function(name){this.name=name;return this};UniformsGroup.prototype.setUsage=function(value){this.usage=value;return this};UniformsGroup.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};UniformsGroup.prototype.copy=function(source){this.name=source.name;this.usage=source.usage;source=source.uniforms;for(var i=this.uniforms.length=0,l=source.length;i<l;i++)for(var uniforms=Array.isArray(source[i])?source[i]:[source[i]],j=0;j<uniforms.length;j++)this.uniforms.push(uniforms[j].clone());
return this};UniformsGroup.prototype.clone=function(){return(new this.constructor).copy(this)};var InstancedInterleavedBuffer=function(array,stride,meshPerAttribute){meshPerAttribute=void 0===meshPerAttribute?1:meshPerAttribute;array=InterleavedBuffer.call(this,array,stride)||this;array.isInstancedInterleavedBuffer=!0;array.meshPerAttribute=meshPerAttribute;return array};$jscomp.inherits(InstancedInterleavedBuffer,InterleavedBuffer);InstancedInterleavedBuffer.prototype.copy=function(source){InterleavedBuffer.prototype.copy.call(this,
source);this.meshPerAttribute=source.meshPerAttribute;return this};InstancedInterleavedBuffer.prototype.clone=function(data){data=InterleavedBuffer.prototype.clone.call(this,data);data.meshPerAttribute=this.meshPerAttribute;return data};InstancedInterleavedBuffer.prototype.toJSON=function(data){data=InterleavedBuffer.prototype.toJSON.call(this,data);data.isInstancedInterleavedBuffer=!0;data.meshPerAttribute=this.meshPerAttribute;return data};var GLBufferAttribute=function(buffer,type,itemSize,elementSize,
count,normalized){this.isGLBufferAttribute=!0;this.name="";this.buffer=buffer;this.type=type;this.itemSize=itemSize;this.elementSize=elementSize;this.count=count;this.normalized=void 0===normalized?!1:normalized;this.version=0};GLBufferAttribute.prototype.setBuffer=function(buffer){this.buffer=buffer;return this};GLBufferAttribute.prototype.setType=function(type,elementSize){this.type=type;this.elementSize=elementSize;return this};GLBufferAttribute.prototype.setItemSize=function(itemSize){this.itemSize=
itemSize;return this};GLBufferAttribute.prototype.setCount=function(count){this.count=count;return this};$jscomp.global.Object.defineProperties(GLBufferAttribute.prototype,{needsUpdate:{configurable:!0,enumerable:!0,set:function(value){!0===value&&this.version++}}});var _matrix=new Matrix4,Raycaster=function(origin,direction,near,far){near=void 0===near?0:near;far=void 0===far?Infinity:far;this.ray=new Ray(origin,direction);this.near=near;this.far=far;this.camera=null;this.layers=new Layers;this.params=
{Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}};Raycaster.prototype.set=function(origin,direction){this.ray.set(origin,direction)};Raycaster.prototype.setFromCamera=function(coords,camera){camera.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(camera.matrixWorld),this.ray.direction.set(coords.x,coords.y,.5).unproject(camera).sub(this.ray.origin).normalize(),this.camera=camera):camera.isOrthographicCamera?(this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/
(camera.near-camera.far)).unproject(camera),this.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld),this.camera=camera):console.error("THREE.Raycaster: Unsupported camera type: "+camera.type)};Raycaster.prototype.setFromXRController=function(controller){_matrix.identity().extractRotation(controller.matrixWorld);this.ray.origin.setFromMatrixPosition(controller.matrixWorld);this.ray.direction.set(0,0,-1).applyMatrix4(_matrix);return this};Raycaster.prototype.intersectObject=function(object,
recursive,intersects){intersects=void 0===intersects?[]:intersects;intersect(object,this,intersects,void 0===recursive?!0:recursive);intersects.sort(ascSort);return intersects};Raycaster.prototype.intersectObjects=function(objects,recursive,intersects){recursive=void 0===recursive?!0:recursive;intersects=void 0===intersects?[]:intersects;for(var i=0,l=objects.length;i<l;i++)intersect(objects[i],this,intersects,recursive);intersects.sort(ascSort);return intersects};var Timer=function(){this._currentTime=
this._previousTime=0;this._startTime=performance.now();this._elapsed=this._delta=0;this._timescale=1;this._pageVisibilityHandler=this._document=null};Timer.prototype.connect=function(document){this._document=document;void 0!==document.hidden&&(this._pageVisibilityHandler=handleVisibilityChange.bind(this),document.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))};Timer.prototype.disconnect=function(){null!==this._pageVisibilityHandler&&(this._document.removeEventListener("visibilitychange",
this._pageVisibilityHandler),this._pageVisibilityHandler=null);this._document=null};Timer.prototype.getDelta=function(){return this._delta/1E3};Timer.prototype.getElapsed=function(){return this._elapsed/1E3};Timer.prototype.getTimescale=function(){return this._timescale};Timer.prototype.setTimescale=function(timescale){this._timescale=timescale;return this};Timer.prototype.reset=function(){this._currentTime=performance.now()-this._startTime;return this};Timer.prototype.dispose=function(){this.disconnect()};
Timer.prototype.update=function(timestamp){null!==this._pageVisibilityHandler&&!0===this._document.hidden?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(void 0!==timestamp?timestamp:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta);return this};var Spherical=function(radius,phi,theta){this.radius=void 0===radius?1:radius;this.phi=void 0===phi?0:phi;this.theta=void 0===theta?0:theta};Spherical.prototype.set=
function(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this};Spherical.prototype.copy=function(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this};Spherical.prototype.makeSafe=function(){this.phi=clamp(this.phi,1E-6,Math.PI-1E-6);return this};Spherical.prototype.setFromVector3=function(v){return this.setFromCartesianCoords(v.x,v.y,v.z)};Spherical.prototype.setFromCartesianCoords=function(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);0===this.radius?
this.phi=this.theta=0:(this.theta=Math.atan2(x,z),this.phi=Math.acos(clamp(y/this.radius,-1,1)));return this};Spherical.prototype.clone=function(){return(new this.constructor).copy(this)};var Cylindrical=function(radius,theta,y){this.radius=void 0===radius?1:radius;this.theta=void 0===theta?0:theta;this.y=void 0===y?0:y};Cylindrical.prototype.set=function(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this};Cylindrical.prototype.copy=function(other){this.radius=other.radius;this.theta=
other.theta;this.y=other.y;return this};Cylindrical.prototype.setFromVector3=function(v){return this.setFromCartesianCoords(v.x,v.y,v.z)};Cylindrical.prototype.setFromCartesianCoords=function(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this};Cylindrical.prototype.clone=function(){return(new this.constructor).copy(this)};var Matrix2=function(n11,n12,n21,n22){Matrix2.prototype.isMatrix2=!0;this.elements=[1,0,0,1];void 0!==n11&&this.set(n11,n12,n21,n22)};Matrix2.prototype.identity=
function(){this.set(1,0,0,1);return this};Matrix2.prototype.fromArray=function(array,offset){offset=void 0===offset?0:offset;for(var i=0;4>i;i++)this.elements[i]=array[i+offset];return this};Matrix2.prototype.set=function(n11,n12,n21,n22){var te=this.elements;te[0]=n11;te[2]=n12;te[1]=n21;te[3]=n22;return this};var _vector$4=new Vector2,Box2=function(min,max){min=void 0===min?new Vector2(Infinity,Infinity):min;max=void 0===max?new Vector2(-Infinity,-Infinity):max;this.isBox2=!0;this.min=min;this.max=
max};Box2.prototype.set=function(min,max){this.min.copy(min);this.max.copy(max);return this};Box2.prototype.setFromPoints=function(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++)this.expandByPoint(points[i]);return this};Box2.prototype.setFromCenterAndSize=function(center,size){size=_vector$4.copy(size).multiplyScalar(.5);this.min.copy(center).sub(size);this.max.copy(center).add(size);return this};Box2.prototype.clone=function(){return(new this.constructor).copy(this)};Box2.prototype.copy=
function(box){this.min.copy(box.min);this.max.copy(box.max);return this};Box2.prototype.makeEmpty=function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this};Box2.prototype.isEmpty=function(){return this.max.x<this.min.x||this.max.y<this.min.y};Box2.prototype.getCenter=function(target){return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)};Box2.prototype.getSize=function(target){return this.isEmpty()?target.set(0,0):target.subVectors(this.max,
this.min)};Box2.prototype.expandByPoint=function(point){this.min.min(point);this.max.max(point);return this};Box2.prototype.expandByVector=function(vector){this.min.sub(vector);this.max.add(vector);return this};Box2.prototype.expandByScalar=function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this};Box2.prototype.containsPoint=function(point){return point.x>=this.min.x&&point.x<=this.max.x&&point.y>=this.min.y&&point.y<=this.max.y};Box2.prototype.containsBox=function(box){return this.min.x<=
box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y};Box2.prototype.getParameter=function(point,target){return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y))};Box2.prototype.intersectsBox=function(box){return box.max.x>=this.min.x&&box.min.x<=this.max.x&&box.max.y>=this.min.y&&box.min.y<=this.max.y};Box2.prototype.clampPoint=function(point,target){return target.copy(point).clamp(this.min,this.max)};Box2.prototype.distanceToPoint=
function(point){return this.clampPoint(point,_vector$4).distanceTo(point)};Box2.prototype.intersect=function(box){this.min.max(box.min);this.max.min(box.max);this.isEmpty()&&this.makeEmpty();return this};Box2.prototype.union=function(box){this.min.min(box.min);this.max.max(box.max);return this};Box2.prototype.translate=function(offset){this.min.add(offset);this.max.add(offset);return this};Box2.prototype.equals=function(box){return box.min.equals(this.min)&&box.max.equals(this.max)};var _startP=new Vector3,
_startEnd=new Vector3,_d1=new Vector3,_d2=new Vector3,_r=new Vector3,_c1=new Vector3,_c2=new Vector3,Line3=function(start,end){start=void 0===start?new Vector3:start;end=void 0===end?new Vector3:end;this.start=start;this.end=end};Line3.prototype.set=function(start,end){this.start.copy(start);this.end.copy(end);return this};Line3.prototype.copy=function(line){this.start.copy(line.start);this.end.copy(line.end);return this};Line3.prototype.getCenter=function(target){return target.addVectors(this.start,
this.end).multiplyScalar(.5)};Line3.prototype.delta=function(target){return target.subVectors(this.end,this.start)};Line3.prototype.distanceSq=function(){return this.start.distanceToSquared(this.end)};Line3.prototype.distance=function(){return this.start.distanceTo(this.end)};Line3.prototype.at=function(t,target){return this.delta(target).multiplyScalar(t).add(this.start)};Line3.prototype.closestPointToPointParameter=function(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,
this.start);point=_startEnd.dot(_startEnd);point=_startEnd.dot(_startP)/point;clampToLine&&(point=clamp(point,0,1));return point};Line3.prototype.closestPointToPoint=function(point,clampToLine,target){point=this.closestPointToPointParameter(point,clampToLine);return this.delta(target).multiplyScalar(point).add(this.start)};Line3.prototype.distanceSqToLine3=function(line,c1,c2){c1=void 0===c1?_c1:c1;c2=void 0===c2?_c2:c2;var EPSILON=1E-8*1E-8,p1=this.start,p2=line.start;line=line.end;_d1.subVectors(this.end,
p1);_d2.subVectors(line,p2);_r.subVectors(p1,p2);line=_d1.dot(_d1);var t=_d2.dot(_d2);var f=_d2.dot(_r);if(line<=EPSILON&&t<=EPSILON)return c1.copy(p1),c2.copy(p2),c1.sub(c2),c1.dot(c1);if(line<=EPSILON){var s=0;t=clamp(f/t,0,1)}else{var c=_d1.dot(_r);t<=EPSILON?(t=0,s=clamp(-c/line,0,1)):(EPSILON=_d1.dot(_d2),s=line*t-EPSILON*EPSILON,s=0!==s?clamp((EPSILON*f-c*t)/s,0,1):0,t=(EPSILON*s+f)/t,0>t?(t=0,s=clamp(-c/line,0,1)):1<t&&(t=1,s=clamp((EPSILON-c)/line,0,1)))}c1.copy(p1).add(_d1.multiplyScalar(s));
c2.copy(p2).add(_d2.multiplyScalar(t));c1.sub(c2);return c1.dot(c1)};Line3.prototype.applyMatrix4=function(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this};Line3.prototype.equals=function(line){return line.start.equals(this.start)&&line.end.equals(this.end)};Line3.prototype.clone=function(){return(new this.constructor).copy(this)};var _vector$3=new Vector3,SpotLightHelper=function(light,color){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.light=
light;$jscomp$super$this.matrixAutoUpdate=!1;$jscomp$super$this.color=color;$jscomp$super$this.type="SpotLightHelper";light=new BufferGeometry;color=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var i=0,j=1;32>i;i++,j++){var p1=i/32*Math.PI*2,p2=j/32*Math.PI*2;color.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1)}light.setAttribute("position",new Float32BufferAttribute(color,3));color=new LineBasicMaterial({fog:!1,toneMapped:!1});$jscomp$super$this.cone=new LineSegments(light,
color);$jscomp$super$this.add($jscomp$super$this.cone);$jscomp$super$this.update();return $jscomp$super$this};$jscomp.inherits(SpotLightHelper,Object3D);SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};SpotLightHelper.prototype.update=function(){this.light.updateWorldMatrix(!0,!1);this.light.target.updateWorldMatrix(!0,!1);this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):
this.matrix.copy(this.light.matrixWorld);this.matrixWorld.copy(this.light.matrixWorld);var coneLength=this.light.distance?this.light.distance:1E3,coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$3);void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var _vector$2=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=
new Matrix4,SkeletonHelper=function(object){var bones=getBoneList(object);var $jscomp$super$this=new BufferGeometry;for(var vertices=[],colors=[],i=0;i<bones.length;i++){var bone=bones[i];bone.parent&&bone.parent.isBone&&(vertices.push(0,0,0),vertices.push(0,0,0),colors.push(0,0,0),colors.push(0,0,0))}$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,3));$jscomp$super$this.setAttribute("color",new Float32BufferAttribute(colors,3));vertices=new LineBasicMaterial({vertexColors:!0,
depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});$jscomp$super$this=LineSegments.call(this,$jscomp$super$this,vertices)||this;$jscomp$super$this.isSkeletonHelper=!0;$jscomp$super$this.type="SkeletonHelper";$jscomp$super$this.root=object;$jscomp$super$this.bones=bones;$jscomp$super$this.matrix=object.matrixWorld;$jscomp$super$this.matrixAutoUpdate=!1;object=new Color(255);bones=new Color(65280);$jscomp$super$this.setColors(object,bones);return $jscomp$super$this};$jscomp.inherits(SkeletonHelper,
LineSegments);SkeletonHelper.prototype.updateMatrixWorld=function(force){var bones=this.bones,geometry=this.geometry,position=geometry.getAttribute("position");_matrixWorldInv.copy(this.root.matrixWorld).invert();for(var i=0,j=0;i<bones.length;i++){var bone=bones[i];bone.parent&&bone.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),position.setXYZ(j,_vector$2.x,_vector$2.y,_vector$2.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,
bone.parent.matrixWorld),_vector$2.setFromMatrixPosition(_boneMatrix),position.setXYZ(j+1,_vector$2.x,_vector$2.y,_vector$2.z),j+=2)}geometry.getAttribute("position").needsUpdate=!0;LineSegments.prototype.updateMatrixWorld.call(this,force)};SkeletonHelper.prototype.setColors=function(color1,color2){for(var colorAttribute=this.geometry.getAttribute("color"),i=0;i<colorAttribute.count;i+=2)colorAttribute.setXYZ(i,color1.r,color1.g,color1.b),colorAttribute.setXYZ(i+1,color2.r,color2.g,color2.b);colorAttribute.needsUpdate=
!0;return this};SkeletonHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};var PointLightHelper=function(light,sphereSize,color){sphereSize=new SphereGeometry(sphereSize,4,2);var material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1});sphereSize=Mesh.call(this,sphereSize,material)||this;sphereSize.light=light;sphereSize.color=color;sphereSize.type="PointLightHelper";sphereSize.matrix=sphereSize.light.matrixWorld;sphereSize.matrixAutoUpdate=!1;sphereSize.update();
return sphereSize};$jscomp.inherits(PointLightHelper,Mesh);PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};PointLightHelper.prototype.update=function(){this.light.updateWorldMatrix(!0,!1);void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};var _vector$1=new Vector3,_color1=new Color,_color2=new Color,HemisphereLightHelper=function(light,size,color){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.light=
light;$jscomp$super$this.matrix=light.matrixWorld;$jscomp$super$this.matrixAutoUpdate=!1;$jscomp$super$this.color=color;$jscomp$super$this.type="HemisphereLightHelper";light=new OctahedronGeometry(size);light.rotateY(.5*Math.PI);$jscomp$super$this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1});void 0===$jscomp$super$this.color&&($jscomp$super$this.material.vertexColors=!0);size=light.getAttribute("position");size=new Float32Array(3*size.count);light.setAttribute("color",new BufferAttribute(size,
3));$jscomp$super$this.add(new Mesh(light,$jscomp$super$this.material));$jscomp$super$this.update();return $jscomp$super$this};$jscomp.inherits(HemisphereLightHelper,Object3D);HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};HemisphereLightHelper.prototype.update=function(){var mesh=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var colors=mesh.geometry.getAttribute("color");_color1.copy(this.light.color);
_color2.copy(this.light.groundColor);for(var i=0,l=colors.count;i<l;i++){var color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b)}colors.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1);mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate())};var GridHelper=function(size,divisions,color1,color2){size=void 0===size?10:size;divisions=void 0===divisions?10:divisions;color2=void 0===color2?8947848:color2;color1=new Color(void 0===color1?4473924:color1);color2=new Color(color2);
var center=divisions/2,step=size/divisions,halfSize=size/2;size=[];for(var colors=[],i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){size.push(-halfSize,0,k,halfSize,0,k);size.push(k,0,-halfSize,k,0,halfSize);var color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3}divisions=new BufferGeometry;divisions.setAttribute("position",new Float32BufferAttribute(size,3));divisions.setAttribute("color",new Float32BufferAttribute(colors,
3));color1=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});divisions=LineSegments.call(this,divisions,color1)||this;divisions.type="GridHelper";return divisions};$jscomp.inherits(GridHelper,LineSegments);GridHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};var PolarGridHelper=function(radius,sectors,rings,divisions,color1,color2){radius=void 0===radius?10:radius;sectors=void 0===sectors?16:sectors;rings=void 0===rings?8:rings;divisions=void 0===divisions?
64:divisions;color2=void 0===color2?8947848:color2;color1=new Color(void 0===color1?4473924:color1);color2=new Color(color2);var $jscomp$super$this=[];var colors=[];if(1<sectors)for(var i=0;i<sectors;i++){var v=i/sectors*2*Math.PI,x=Math.sin(v)*radius;v=Math.cos(v)*radius;$jscomp$super$this.push(0,0,0);$jscomp$super$this.push(x,0,v);x=i&1?color1:color2;colors.push(x.r,x.g,x.b);colors.push(x.r,x.g,x.b)}for(sectors=0;sectors<rings;sectors++)for(i=sectors&1?color1:color2,x=radius-radius/rings*sectors,
v=0;v<divisions;v++){var v$274=v/divisions*2*Math.PI,x$275=Math.sin(v$274)*x;v$274=Math.cos(v$274)*x;$jscomp$super$this.push(x$275,0,v$274);colors.push(i.r,i.g,i.b);v$274=(v+1)/divisions*2*Math.PI;x$275=Math.sin(v$274)*x;v$274=Math.cos(v$274)*x;$jscomp$super$this.push(x$275,0,v$274);colors.push(i.r,i.g,i.b)}radius=new BufferGeometry;radius.setAttribute("position",new Float32BufferAttribute($jscomp$super$this,3));radius.setAttribute("color",new Float32BufferAttribute(colors,3));$jscomp$super$this=
new LineBasicMaterial({vertexColors:!0,toneMapped:!1});$jscomp$super$this=LineSegments.call(this,radius,$jscomp$super$this)||this;$jscomp$super$this.type="PolarGridHelper";return $jscomp$super$this};$jscomp.inherits(PolarGridHelper,LineSegments);PolarGridHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};var _v1=new Vector3,_v2=new Vector3,_v3=new Vector3,DirectionalLightHelper=function(light,size,color){var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.light=
light;$jscomp$super$this.matrix=light.matrixWorld;$jscomp$super$this.matrixAutoUpdate=!1;$jscomp$super$this.color=color;$jscomp$super$this.type="DirectionalLightHelper";void 0===size&&(size=1);light=new BufferGeometry;light.setAttribute("position",new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));size=new LineBasicMaterial({fog:!1,toneMapped:!1});$jscomp$super$this.lightPlane=new Line(light,size);$jscomp$super$this.add($jscomp$super$this.lightPlane);
light=new BufferGeometry;light.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3));$jscomp$super$this.targetLine=new Line(light,size);$jscomp$super$this.add($jscomp$super$this.targetLine);$jscomp$super$this.update();return $jscomp$super$this};$jscomp.inherits(DirectionalLightHelper,Object3D);DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
DirectionalLightHelper.prototype.update=function(){this.light.updateWorldMatrix(!0,!1);this.light.target.updateWorldMatrix(!0,!1);_v1.setFromMatrixPosition(this.light.matrixWorld);_v2.setFromMatrixPosition(this.light.target.matrixWorld);_v3.subVectors(_v2,_v1);this.lightPlane.lookAt(_v2);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));
this.targetLine.lookAt(_v2);this.targetLine.scale.z=_v3.length()};var _vector=new Vector3,_camera=new Camera,CameraHelper=function(camera){function addLine(a,b){addPoint(a);addPoint(b)}function addPoint(id){vertices.push(0,0,0);colors.push(0,0,0);void 0===pointMap[id]&&(pointMap[id]=[]);pointMap[id].push(vertices.length/3-1)}var $jscomp$super$this=new BufferGeometry;var material=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),vertices=[],colors=[],pointMap={};addLine("n1","n2");
addLine("n2","n4");addLine("n4","n3");addLine("n3","n1");addLine("f1","f2");addLine("f2","f4");addLine("f4","f3");addLine("f3","f1");addLine("n1","f1");addLine("n2","f2");addLine("n3","f3");addLine("n4","f4");addLine("p","n1");addLine("p","n2");addLine("p","n3");addLine("p","n4");addLine("u1","u2");addLine("u2","u3");addLine("u3","u1");addLine("c","t");addLine("p","c");addLine("cn1","cn2");addLine("cn3","cn4");addLine("cf1","cf2");addLine("cf3","cf4");$jscomp$super$this.setAttribute("position",new Float32BufferAttribute(vertices,
3));$jscomp$super$this.setAttribute("color",new Float32BufferAttribute(colors,3));$jscomp$super$this=LineSegments.call(this,$jscomp$super$this,material)||this;$jscomp$super$this.type="CameraHelper";$jscomp$super$this.camera=camera;$jscomp$super$this.camera.updateProjectionMatrix&&$jscomp$super$this.camera.updateProjectionMatrix();$jscomp$super$this.matrix=camera.matrixWorld;$jscomp$super$this.matrixAutoUpdate=!1;$jscomp$super$this.pointMap=pointMap;$jscomp$super$this.update();camera=new Color(16755200);
material=new Color(16711680);var colorUp=new Color(43775),colorTarget=new Color(16777215),colorCross=new Color(3355443);$jscomp$super$this.setColors(camera,material,colorUp,colorTarget,colorCross);return $jscomp$super$this};$jscomp.inherits(CameraHelper,LineSegments);CameraHelper.prototype.setColors=function(frustum,cone,up,target,cross){var colorAttribute=this.geometry.getAttribute("color");colorAttribute.setXYZ(0,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(1,frustum.r,frustum.g,frustum.b);
colorAttribute.setXYZ(2,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(3,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(4,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(5,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(6,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(7,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(8,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(9,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(10,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(11,
frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(12,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(13,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(14,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(15,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(16,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(17,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(18,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(19,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(20,
frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(21,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(22,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(23,frustum.r,frustum.g,frustum.b);colorAttribute.setXYZ(24,cone.r,cone.g,cone.b);colorAttribute.setXYZ(25,cone.r,cone.g,cone.b);colorAttribute.setXYZ(26,cone.r,cone.g,cone.b);colorAttribute.setXYZ(27,cone.r,cone.g,cone.b);colorAttribute.setXYZ(28,cone.r,cone.g,cone.b);colorAttribute.setXYZ(29,cone.r,cone.g,cone.b);colorAttribute.setXYZ(30,
cone.r,cone.g,cone.b);colorAttribute.setXYZ(31,cone.r,cone.g,cone.b);colorAttribute.setXYZ(32,up.r,up.g,up.b);colorAttribute.setXYZ(33,up.r,up.g,up.b);colorAttribute.setXYZ(34,up.r,up.g,up.b);colorAttribute.setXYZ(35,up.r,up.g,up.b);colorAttribute.setXYZ(36,up.r,up.g,up.b);colorAttribute.setXYZ(37,up.r,up.g,up.b);colorAttribute.setXYZ(38,target.r,target.g,target.b);colorAttribute.setXYZ(39,target.r,target.g,target.b);colorAttribute.setXYZ(40,cross.r,cross.g,cross.b);colorAttribute.setXYZ(41,cross.r,
cross.g,cross.b);colorAttribute.setXYZ(42,cross.r,cross.g,cross.b);colorAttribute.setXYZ(43,cross.r,cross.g,cross.b);colorAttribute.setXYZ(44,cross.r,cross.g,cross.b);colorAttribute.setXYZ(45,cross.r,cross.g,cross.b);colorAttribute.setXYZ(46,cross.r,cross.g,cross.b);colorAttribute.setXYZ(47,cross.r,cross.g,cross.b);colorAttribute.setXYZ(48,cross.r,cross.g,cross.b);colorAttribute.setXYZ(49,cross.r,cross.g,cross.b);colorAttribute.needsUpdate=!0;return this};CameraHelper.prototype.update=function(){var geometry=
this.geometry,pointMap=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);if(!0===this.camera.reversedDepth){var nearZ=1;var farZ=0}else if(2E3===this.camera.coordinateSystem)nearZ=-1,farZ=1;else if(2001===this.camera.coordinateSystem)nearZ=0,farZ=1;else throw Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);setPoint("c",pointMap,geometry,_camera,0,0,nearZ);setPoint("t",pointMap,geometry,_camera,0,0,farZ);setPoint("n1",
pointMap,geometry,_camera,-1,-1,nearZ);setPoint("n2",pointMap,geometry,_camera,1,-1,nearZ);setPoint("n3",pointMap,geometry,_camera,-1,1,nearZ);setPoint("n4",pointMap,geometry,_camera,1,1,nearZ);setPoint("f1",pointMap,geometry,_camera,-1,-1,farZ);setPoint("f2",pointMap,geometry,_camera,1,-1,farZ);setPoint("f3",pointMap,geometry,_camera,-1,1,farZ);setPoint("f4",pointMap,geometry,_camera,1,1,farZ);setPoint("u1",pointMap,geometry,_camera,.7,1.1,nearZ);setPoint("u2",pointMap,geometry,_camera,-.7,1.1,nearZ);
setPoint("u3",pointMap,geometry,_camera,0,2,nearZ);setPoint("cf1",pointMap,geometry,_camera,-1,0,farZ);setPoint("cf2",pointMap,geometry,_camera,1,0,farZ);setPoint("cf3",pointMap,geometry,_camera,0,-1,farZ);setPoint("cf4",pointMap,geometry,_camera,0,1,farZ);setPoint("cn1",pointMap,geometry,_camera,-1,0,nearZ);setPoint("cn2",pointMap,geometry,_camera,1,0,nearZ);setPoint("cn3",pointMap,geometry,_camera,0,-1,nearZ);setPoint("cn4",pointMap,geometry,_camera,0,1,nearZ);geometry.getAttribute("position").needsUpdate=
!0};CameraHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};var _box=new Box3,BoxHelper=function(object,color){color=void 0===color?16776960:color;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),positions=new Float32Array(24),geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute("position",new BufferAttribute(positions,3));color=LineSegments.call(this,geometry,new LineBasicMaterial({color:color,
toneMapped:!1}))||this;color.object=object;color.type="BoxHelper";color.matrixAutoUpdate=!1;color.update();return color};$jscomp.inherits(BoxHelper,LineSegments);BoxHelper.prototype.update=function(){void 0!==this.object&&_box.setFromObject(this.object);if(!_box.isEmpty()){var min=_box.min,max=_box.max,position=this.geometry.attributes.position,array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;
array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=!0;this.geometry.computeBoundingSphere()}};BoxHelper.prototype.setFromObject=function(object){this.object=object;this.update();return this};BoxHelper.prototype.copy=function(source,recursive){LineSegments.prototype.copy.call(this,source,recursive);
this.object=source.object;return this};BoxHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};var Box3Helper=function(box,color){color=void 0===color?16776960:color;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));color=LineSegments.call(this,
geometry,new LineBasicMaterial({color:color,toneMapped:!1}))||this;color.box=box;color.type="Box3Helper";color.geometry.computeBoundingSphere();return color};$jscomp.inherits(Box3Helper,LineSegments);Box3Helper.prototype.updateMatrixWorld=function(force){var box=this.box;box.isEmpty()||(box.getCenter(this.position),box.getSize(this.scale),this.scale.multiplyScalar(.5),LineSegments.prototype.updateMatrixWorld.call(this,force))};Box3Helper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};
var PlaneHelper=function(plane,size,hex){size=void 0===size?1:size;hex=void 0===hex?16776960:hex;var $jscomp$super$this=new BufferGeometry;$jscomp$super$this.setAttribute("position",new Float32BufferAttribute([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3));$jscomp$super$this.computeBoundingSphere();$jscomp$super$this=Line.call(this,$jscomp$super$this,new LineBasicMaterial({color:hex,toneMapped:!1}))||this;$jscomp$super$this.type="PlaneHelper";$jscomp$super$this.plane=plane;$jscomp$super$this.size=
size;plane=new BufferGeometry;plane.setAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3));plane.computeBoundingSphere();$jscomp$super$this.add(new Mesh(plane,new MeshBasicMaterial({color:hex,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})));return $jscomp$super$this};$jscomp.inherits(PlaneHelper,Line);PlaneHelper.prototype.updateMatrixWorld=function(force){this.position.set(0,0,0);this.scale.set(.5*this.size,.5*this.size,1);this.lookAt(this.plane.normal);
this.translateZ(-this.plane.constant);Line.prototype.updateMatrixWorld.call(this,force)};PlaneHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();this.children[0].geometry.dispose();this.children[0].material.dispose()};var _axis=new Vector3,_lineGeometry,_coneGeometry,ArrowHelper=function(dir,origin,length,color,headLength,headWidth){dir=void 0===dir?new Vector3(0,0,1):dir;origin=void 0===origin?new Vector3(0,0,0):origin;length=void 0===length?1:length;color=void 0===
color?16776960:color;headLength=void 0===headLength?.2*length:headLength;headWidth=void 0===headWidth?.2*headLength:headWidth;var $jscomp$super$this=Object3D.call(this)||this;$jscomp$super$this.type="ArrowHelper";void 0===_lineGeometry&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new ConeGeometry(.5,1,5,1),_coneGeometry.translate(0,-.5,0));$jscomp$super$this.position.copy(origin);$jscomp$super$this.line=new Line(_lineGeometry,
new LineBasicMaterial({color:color,toneMapped:!1}));$jscomp$super$this.line.matrixAutoUpdate=!1;$jscomp$super$this.add($jscomp$super$this.line);$jscomp$super$this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:!1}));$jscomp$super$this.cone.matrixAutoUpdate=!1;$jscomp$super$this.add($jscomp$super$this.cone);$jscomp$super$this.setDirection(dir);$jscomp$super$this.setLength(length,headLength,headWidth);return $jscomp$super$this};$jscomp.inherits(ArrowHelper,Object3D);ArrowHelper.prototype.setDirection=
function(dir){.99999<dir.y?this.quaternion.set(0,0,0,1):-.99999>dir.y?this.quaternion.set(1,0,0,0):(_axis.set(dir.z,0,-dir.x).normalize(),this.quaternion.setFromAxisAngle(_axis,Math.acos(dir.y)))};ArrowHelper.prototype.setLength=function(length,headLength,headWidth){headLength=void 0===headLength?.2*length:headLength;headWidth=void 0===headWidth?.2*headLength:headWidth;this.line.scale.set(1,Math.max(1E-4,length-headLength),1);this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);
this.cone.position.y=length;this.cone.updateMatrix()};ArrowHelper.prototype.setColor=function(color){this.line.material.color.set(color);this.cone.material.color.set(color)};ArrowHelper.prototype.copy=function(source){Object3D.prototype.copy.call(this,source,!1);this.line.copy(source.line);this.cone.copy(source.cone);return this};ArrowHelper.prototype.dispose=function(){this.line.geometry.dispose();this.line.material.dispose();this.cone.geometry.dispose();this.cone.material.dispose()};var AxesHelper=
function(size){size=void 0===size?1:size;var vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];size=new BufferGeometry;size.setAttribute("position",new Float32BufferAttribute(vertices,3));size.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));vertices=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});size=LineSegments.call(this,size,vertices)||this;size.type="AxesHelper";return size};$jscomp.inherits(AxesHelper,LineSegments);AxesHelper.prototype.setColors=
function(xAxisColor,yAxisColor,zAxisColor){var color=new Color,array=this.geometry.attributes.color.array;color.set(xAxisColor);color.toArray(array,0);color.toArray(array,3);color.set(yAxisColor);color.toArray(array,6);color.toArray(array,9);color.set(zAxisColor);color.toArray(array,12);color.toArray(array,15);this.geometry.attributes.color.needsUpdate=!0;return this};AxesHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};var ShapePath=function(){this.type="ShapePath";
this.color=new Color;this.subPaths=[];this.currentPath=null};ShapePath.prototype.moveTo=function(x,y){this.currentPath=new Path;this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this};ShapePath.prototype.lineTo=function(x,y){this.currentPath.lineTo(x,y);return this};ShapePath.prototype.quadraticCurveTo=function(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this};ShapePath.prototype.bezierCurveTo=function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,
aCP1y,aCP2x,aCP2y,aX,aY);return this};ShapePath.prototype.splineThru=function(pts){this.currentPath.splineThru(pts);return this};ShapePath.prototype.toShapes=function(isCCW){function toShapesNoHoles(inSubpaths){for(var shapes=[],i=0,l=inSubpaths.length;i<l;i++){var tmpPath$277=inSubpaths[i],tmpShape$278=new Shape;tmpShape$278.curves=tmpPath$277.curves;shapes.push(tmpShape$278)}return shapes}function isPointInsidePolygon(inPt,inPolygon){for(var polyLen=inPolygon.length,inside=!1,p=polyLen-1,q=0;q<
polyLen;p=q++){var edgeLowPt=inPolygon[p],edgeHighPt=inPolygon[q],edgeDx=edgeHighPt.x-edgeLowPt.x,edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){if(0>edgeDy&&(edgeLowPt=inPolygon[q],edgeDx=-edgeDx,edgeHighPt=inPolygon[p],edgeDy=-edgeDy),!(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y))if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return!0}else{p=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(0===p)return!0;0>p||(inside=!inside)}}else if(inPt.y===edgeLowPt.y&&(edgeHighPt.x<=
inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x))return!0}return inside}var isClockWise=ShapeUtils.isClockWise,subPaths=this.subPaths;if(0===subPaths.length)return[];var shapes$jscomp$0=[];if(1===subPaths.length){var tmpPath=subPaths[0];var tmpShape=new Shape;tmpShape.curves=tmpPath.curves;shapes$jscomp$0.push(tmpShape);return shapes$jscomp$0}var holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;tmpShape=[];var newShapes=[],newShapeHoles=
[],mainIdx=0;newShapes[mainIdx]=void 0;newShapeHoles[mainIdx]=[];for(var i$jscomp$0=0,l$jscomp$0=subPaths.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){tmpPath=subPaths[i$jscomp$0];var tmpPoints=tmpPath.getPoints();var solid=isClockWise(tmpPoints);(solid=isCCW?!solid:solid)?(!holesFirst&&newShapes[mainIdx]&&mainIdx++,newShapes[mainIdx]={s:new Shape,p:tmpPoints},newShapes[mainIdx].s.curves=tmpPath.curves,holesFirst&&mainIdx++,newShapeHoles[mainIdx]=[]):newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]})}if(!newShapes[0])return toShapesNoHoles(subPaths);
if(1<newShapes.length){tmpPath=!1;isClockWise=isCCW=0;for(subPaths=newShapes.length;isClockWise<subPaths;isClockWise++)tmpShape[isClockWise]=[];isClockWise=0;for(subPaths=newShapes.length;isClockWise<subPaths;isClockWise++)for(solid=newShapeHoles[isClockWise],holesFirst=0;holesFirst<solid.length;holesFirst++){mainIdx=solid[holesFirst];tmpPoints=!0;for(i$jscomp$0=0;i$jscomp$0<newShapes.length;i$jscomp$0++)isPointInsidePolygon(mainIdx.p,newShapes[i$jscomp$0].p)&&(isClockWise!==i$jscomp$0&&isCCW++,tmpPoints?
(tmpPoints=!1,tmpShape[i$jscomp$0].push(mainIdx)):tmpPath=!0);tmpPoints&&tmpShape[isClockWise].push(mainIdx)}0<isCCW&&!1===tmpPath&&(newShapeHoles=tmpShape)}isCCW=0;for(isClockWise=newShapes.length;isCCW<isClockWise;isCCW++)for(tmpShape=newShapes[isCCW].s,shapes$jscomp$0.push(tmpShape),tmpPath=newShapeHoles[isCCW],subPaths=0,solid=tmpPath.length;subPaths<solid;subPaths++)tmpShape.holes.push(tmpPath[subPaths].h);return shapes$jscomp$0};var Controls=function(object,domElement){this.object=object;this.domElement=
void 0===domElement?null:domElement;this.enabled=!0;this.state=-1;this.keys={};this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null};this.touches={ONE:null,TWO:null};return this};$jscomp.inherits(Controls,EventDispatcher);Controls.prototype.connect=function(element){void 0===element?console.warn("THREE.Controls: connect() now requires an element."):(null!==this.domElement&&this.disconnect(),this.domElement=element)};Controls.prototype.disconnect=function(){};Controls.prototype.dispose=function(){};
Controls.prototype.update=function(){};var TextureUtils=function(){};TextureUtils.contain=function(texture,aspect){var imageAspect=texture.image&&texture.image.width?texture.image.width/texture.image.height:1;imageAspect>aspect?(texture.repeat.x=1,texture.repeat.y=imageAspect/aspect,texture.offset.x=0,texture.offset.y=(1-texture.repeat.y)/2):(texture.repeat.x=aspect/imageAspect,texture.repeat.y=1,texture.offset.x=(1-texture.repeat.x)/2,texture.offset.y=0);return texture};TextureUtils.cover=function(texture,
aspect){var imageAspect=texture.image&&texture.image.width?texture.image.width/texture.image.height:1;imageAspect>aspect?(texture.repeat.x=aspect/imageAspect,texture.repeat.y=1,texture.offset.x=(1-texture.repeat.x)/2,texture.offset.y=0):(texture.repeat.x=1,texture.repeat.y=imageAspect/aspect,texture.offset.x=0,texture.offset.y=(1-texture.repeat.y)/2);return texture};TextureUtils.fill=function(texture){texture.repeat.x=1;texture.repeat.y=1;texture.offset.x=0;texture.offset.y=0;return texture};TextureUtils.getByteLength=
function(width,height,format,type){return getByteLength(width,height,format,type)};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"180"}}));"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="180");var ShaderChunk={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a \x3c getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE \x3d 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv \x3d max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale \x3d 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales \x3d vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha \x3d vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor \x3d fract( log2( pixScale ) );\n\t\tfloat x \x3d ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a \x3d min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases \x3d vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold \x3d ( x \x3c ( 1.0 - a ) )\n\t\t\t? ( ( x \x3c a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",
alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *\x3d texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a \x3d smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a \x3d\x3d 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a \x3c alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",
aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion \x3d ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *\x3d ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *\x3d ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *\x3d ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) \x26\x26 defined( STANDARD )\n\t\tfloat dotNV \x3d saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *\x3d computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",
aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size \x3d textureSize( batchingTexture, 0 ).x;\n\t\tint j \x3d int( i ) * 4;\n\t\tint x \x3d j % size;\n\t\tint y \x3d j / size;\n\t\tvec4 v1 \x3d texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 \x3d texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 \x3d texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 \x3d texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size \x3d textureSize( batchingIdTexture, 0 ).x;\n\t\tint x \x3d i % size;\n\t\tint y \x3d i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size \x3d textureSize( batchingColorTexture, 0 ).x;\n\t\tint j \x3d int( i );\n\t\tint x \x3d j % size;\n\t\tint y \x3d j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",
batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix \x3d getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed \x3d vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition \x3d vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal \x3d vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent \x3d vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir \x3d normalize( lightDir + viewDir );\n\tfloat dotNH \x3d saturate( dot( normal, halfDir ) );\n\tfloat dotVH \x3d saturate( dot( viewDir, halfDir ) );\n\tvec3 F \x3d F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G \x3d G_BlinnPhong_Implicit( );\n\tfloat D \x3d D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",
iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 \x3d mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 \x3d sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase \x3d 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val \x3d vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos \x3d vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var \x3d vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz \x3d val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x +\x3d 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /\x3d 1.0685e-7;\n\t\tvec3 rgb \x3d XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR \x3d mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq \x3d pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq \x3d 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq \x3c 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 \x3d sqrt( cosTheta2Sq );\n\t\tfloat R0 \x3d IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 \x3d F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 \x3d 1.0 - R12;\n\t\tfloat phi12 \x3d 0.0;\n\t\tif ( iridescenceIOR \x3c outsideIOR ) phi12 \x3d PI;\n\t\tfloat phi21 \x3d PI - phi12;\n\t\tvec3 baseIOR \x3d Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 \x3d IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 \x3d F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 \x3d vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] \x3c iridescenceIOR ) phi23[ 0 ] \x3d PI;\n\t\tif ( baseIOR[ 1 ] \x3c iridescenceIOR ) phi23[ 1 ] \x3d PI;\n\t\tif ( baseIOR[ 2 ] \x3c iridescenceIOR ) phi23[ 2 ] \x3d PI;\n\t\tfloat OPD \x3d 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi \x3d vec3( phi21 ) + phi23;\n\t\tvec3 R123 \x3d clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 \x3d sqrt( R123 );\n\t\tvec3 Rs \x3d pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 \x3d R12 + Rs;\n\t\tI \x3d C0;\n\t\tvec3 Cm \x3d Rs - T121;\n\t\tfor ( int m \x3d 1; m \x3c\x3d 2; ++ m ) {\n\t\t\tCm *\x3d r123;\n\t\t\tvec3 Sm \x3d 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI +\x3d Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",
bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx \x3d dFdx( vBumpMapUv );\n\t\tvec2 dSTdy \x3d dFdy( vBumpMapUv );\n\t\tfloat Hll \x3d bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx \x3d bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy \x3d bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX \x3d normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY \x3d normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN \x3d surf_norm;\n\t\tvec3 R1 \x3d cross( vSigmaY, vN );\n\t\tvec3 R2 \x3d cross( vN, vSigmaX );\n\t\tfloat fDet \x3d dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad \x3d sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
clipping_planes_fragment:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity \x3d 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d 0; i \x3c UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane \x3d clippingPlanes[ i ];\n\t\t\tdistanceToPlane \x3d - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient \x3d fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *\x3d smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity \x3d\x3d 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES \x3c NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity \x3d 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i \x3d UNION_CLIPPING_PLANES; i \x3c NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane \x3d clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane \x3d - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient \x3d fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *\x3d 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *\x3d 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *\x3d clipOpacity;\n\t\tif ( diffuseColor.a \x3d\x3d 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d 0; i \x3c UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane \x3d clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) \x3e plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES \x3c NUM_CLIPPING_PLANES\n\t\t\tbool clipped \x3d true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i \x3d UNION_CLIPPING_PLANES; i \x3c NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane \x3d clippingPlanes[ i ];\n\t\t\t\tclipped \x3d ( dot( vClipPosition, plane.xyz ) \x3e plane.w ) \x26\x26 clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",
clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvClipPosition \x3d - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *\x3d vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *\x3d vColor;\n#endif",
color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor \x3d vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor \x3d vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *\x3d color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *\x3d instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor \x3d getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *\x3d batchingColor.xyz;\n#endif",
common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 \x3d x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a \x3d 12.9898, b \x3d 78.233, c \x3d 43758.5453;\n\thighp float dt \x3d dot( uv.xy, vec2( a,b ) ), sn \x3d mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent \x3d max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] \x3d vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] \x3d vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] \x3d vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] \x3d\x3d - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u \x3d atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v \x3d asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel \x3d exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel \x3d exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",
cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection \x3d abs( direction );\n\t\tfloat face \x3d - 1.0;\n\t\tif ( absDirection.x \x3e absDirection.z ) {\n\t\t\tif ( absDirection.x \x3e absDirection.y )\n\t\t\t\tface \x3d direction.x \x3e 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface \x3d direction.y \x3e 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z \x3e absDirection.y )\n\t\t\t\tface \x3d direction.z \x3e 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface \x3d direction.y \x3e 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face \x3d\x3d 0.0 ) {\n\t\t\tuv \x3d vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face \x3d\x3d 1.0 ) {\n\t\t\tuv \x3d vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face \x3d\x3d 2.0 ) {\n\t\t\tuv \x3d vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face \x3d\x3d 3.0 ) {\n\t\t\tuv \x3d vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face \x3d\x3d 4.0 ) {\n\t\t\tuv \x3d vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv \x3d vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face \x3d getFace( direction );\n\t\tfloat filterInt \x3d max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt \x3d max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize \x3d exp2( mipInt );\n\t\thighp vec2 uv \x3d getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face \x3e 2.0 ) {\n\t\t\tuv.y +\x3d faceSize;\n\t\t\tface -\x3d 3.0;\n\t\t}\n\t\tuv.x +\x3d face * faceSize;\n\t\tuv.x +\x3d filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y +\x3d 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *\x3d CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *\x3d CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip \x3d 0.0;\n\t\tif ( roughness \x3e\x3d cubeUV_r1 ) {\n\t\t\tmip \x3d ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness \x3e\x3d cubeUV_r4 ) {\n\t\t\tmip \x3d ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness \x3e\x3d cubeUV_r5 ) {\n\t\t\tmip \x3d ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness \x3e\x3d cubeUV_r6 ) {\n\t\t\tmip \x3d ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip \x3d - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip \x3d clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF \x3d fract( mip );\n\t\tfloat mipInt \x3d floor( mip );\n\t\tvec3 color0 \x3d bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF \x3d\x3d 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 \x3d bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
defaultnormal_vertex:"vec3 transformedNormal \x3d objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent \x3d objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm \x3d mat3( batchingMatrix );\n\ttransformedNormal /\x3d vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal \x3d bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent \x3d bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im \x3d mat3( instanceMatrix );\n\ttransformedNormal /\x3d vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal \x3d im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent \x3d im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal \x3d normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal \x3d - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent \x3d ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent \x3d - transformedTangent;\n\t#endif\n#endif",
displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed +\x3d normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor \x3d texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor \x3d sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *\x3d emissiveColor.rgb;\n#endif",
emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor \x3d linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",
envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag \x3d normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag \x3d normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal \x3d inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec \x3d reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec \x3d refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec \x3d vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor \x3d textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor \x3d vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight \x3d mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight \x3d mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight +\x3d envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal \x3d inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor \x3d textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec \x3d reflect( - viewDir, normal );\n\t\t\treflectVec \x3d normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec \x3d inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor \x3d textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal \x3d cross( bitangent, viewDir );\n\t\t\t\tbentNormal \x3d normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal \x3d normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition \x3d worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex \x3d normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex \x3d normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal \x3d inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect \x3d reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect \x3d refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
fog_vertex:"#ifdef USE_FOG\n\tvFogDepth \x3d - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor \x3d 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor \x3d smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb \x3d mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL \x3d dot( normal, lightDirection );\n\tvec2 coord \x3d vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw \x3d fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb;\nmaterial.specularStrength \x3d specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL \x3d saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance \x3d dotNL * directLight.color;\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",
lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x \x3d normal.x, y \x3d normal.y, z \x3d normal.z;\n\tvec3 result \x3d shCoefficients[ 0 ] * 0.886227;\n\tresult +\x3d shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult +\x3d shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult +\x3d shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult +\x3d shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult +\x3d shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult +\x3d shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult +\x3d shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult +\x3d shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal \x3d inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance \x3d shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance \x3d ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff \x3d 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance \x3e 0.0 ) {\n\t\tdistanceFalloff *\x3d pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS \x3e 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color \x3d directionalLight.color;\n\t\tlight.direction \x3d directionalLight.direction;\n\t\tlight.visible \x3d true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS \x3e 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector \x3d pointLight.position - geometryPosition;\n\t\tlight.direction \x3d normalize( lVector );\n\t\tfloat lightDistance \x3d length( lVector );\n\t\tlight.color \x3d pointLight.color;\n\t\tlight.color *\x3d getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible \x3d ( light.color !\x3d vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS \x3e 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector \x3d spotLight.position - geometryPosition;\n\t\tlight.direction \x3d normalize( lVector );\n\t\tfloat angleCos \x3d dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation \x3d getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation \x3e 0.0 ) {\n\t\t\tfloat lightDistance \x3d length( lVector );\n\t\t\tlight.color \x3d spotLight.color * spotAttenuation;\n\t\t\tlight.color *\x3d getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible \x3d ( light.color !\x3d vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color \x3d vec3( 0.0 );\n\t\t\tlight.visible \x3d false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS \x3e 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS \x3e 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL \x3d dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight \x3d 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance \x3d mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",
lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance \x3d getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",
lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb;\nmaterial.specularColor \x3d specular;\nmaterial.specularShininess \x3d shininess;\nmaterial.specularStrength \x3d specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL \x3d saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance \x3d dotNL * directLight.color;\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular +\x3d irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",
lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy \x3d max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness \x3d max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness \x3d max( roughnessFactor, 0.0525 );material.roughness +\x3d geometryRoughness;\nmaterial.roughness \x3d min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior \x3d ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor \x3d specularIntensity;\n\t\tvec3 specularColorFactor \x3d specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *\x3d texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *\x3d texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 \x3d mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor \x3d 1.0;\n\t\tvec3 specularColorFactor \x3d vec3( 1.0 );\n\t\tmaterial.specularF90 \x3d 1.0;\n\t#endif\n\tmaterial.specularColor \x3d mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor \x3d mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 \x3d 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat \x3d clearcoat;\n\tmaterial.clearcoatRoughness \x3d clearcoatRoughness;\n\tmaterial.clearcoatF0 \x3d vec3( 0.04 );\n\tmaterial.clearcoatF90 \x3d 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *\x3d texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *\x3d texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat \x3d saturate( material.clearcoat );\tmaterial.clearcoatRoughness \x3d max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness +\x3d geometryRoughness;\n\tmaterial.clearcoatRoughness \x3d min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion \x3d dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence \x3d iridescence;\n\tmaterial.iridescenceIOR \x3d iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *\x3d texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness \x3d (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness \x3d iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor \x3d sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *\x3d texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness \x3d clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *\x3d texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat \x3d mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar \x3d texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV \x3d anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV \x3d anisotropyVector;\n\t#endif\n\tmaterial.anisotropy \x3d length( anisotropyV );\n\tif( material.anisotropy \x3d\x3d 0.0 ) {\n\t\tanisotropyV \x3d vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /\x3d material.anisotropy;\n\t\tmaterial.anisotropy \x3d saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT \x3d mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT \x3d tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB \x3d tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",
lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect \x3d vec3( 0.0 );\nvec3 clearcoatSpecularIndirect \x3d vec3( 0.0 );\nvec3 sheenSpecularDirect \x3d vec3( 0.0 );\nvec3 sheenSpecularIndirect \x3d vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x \x3d clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 \x3d x * x;\n    float x5 \x3d clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat gv \x3d dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl \x3d dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat denom \x3d pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv \x3d dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl \x3d dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v \x3d 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 \x3d alphaT * alphaB;\n\t\thighp vec3 v \x3d vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 \x3d dot( v, v );\n\t\tfloat w2 \x3d a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 \x3d material.clearcoatF0;\n\t\tfloat f90 \x3d material.clearcoatF90;\n\t\tfloat roughness \x3d material.clearcoatRoughness;\n\t\tfloat alpha \x3d pow2( roughness );\n\t\tvec3 halfDir \x3d normalize( lightDir + viewDir );\n\t\tfloat dotNL \x3d saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH \x3d saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH \x3d saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F \x3d F_Schlick( f0, f90, dotVH );\n\t\tfloat V \x3d V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D \x3d D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 \x3d material.specularColor;\n\tfloat f90 \x3d material.specularF90;\n\tfloat roughness \x3d material.roughness;\n\tfloat alpha \x3d pow2( roughness );\n\tvec3 halfDir \x3d normalize( lightDir + viewDir );\n\tfloat dotNL \x3d saturate( dot( normal, lightDir ) );\n\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\tfloat dotNH \x3d saturate( dot( normal, halfDir ) );\n\tfloat dotVH \x3d saturate( dot( viewDir, halfDir ) );\n\tvec3 F \x3d F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF \x3d mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL \x3d dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV \x3d dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH \x3d dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL \x3d dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV \x3d dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH \x3d dot( material.anisotropyB, halfDir );\n\t\tfloat V \x3d V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D \x3d D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V \x3d V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D \x3d D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE \x3d 64.0;\n\tconst float LUT_SCALE \x3d ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS \x3d 0.5 / LUT_SIZE;\n\tfloat dotNV \x3d saturate( dot( N, V ) );\n\tvec2 uv \x3d vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv \x3d uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l \x3d length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x \x3d dot( v1, v2 );\n\tfloat y \x3d abs( x );\n\tfloat a \x3d 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b \x3d 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v \x3d a / b;\n\tfloat theta_sintheta \x3d ( x \x3e 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 \x3d rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 \x3d rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal \x3d cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) \x3c 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 \x3d normalize( V - N * dot( V, N ) );\n\tT2 \x3d - cross( N, T1 );\n\tmat3 mat \x3d mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] \x3d mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] \x3d mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] \x3d mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] \x3d mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] \x3d normalize( coords[ 0 ] );\n\tcoords[ 1 ] \x3d normalize( coords[ 1 ] );\n\tcoords[ 2 ] \x3d normalize( coords[ 2 ] );\n\tcoords[ 3 ] \x3d normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor \x3d vec3( 0.0 );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result \x3d LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha \x3d pow2( roughness );\n\tfloat invAlpha \x3d 1.0 / alpha;\n\tfloat cos2h \x3d dotNH * dotNH;\n\tfloat sin2h \x3d max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir \x3d normalize( lightDir + viewDir );\n\tfloat dotNL \x3d saturate( dot( normal, lightDir ) );\n\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\tfloat dotNH \x3d saturate( dot( normal, halfDir ) );\n\tfloat D \x3d D_Charlie( sheenRoughness, dotNH );\n\tfloat V \x3d V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\tfloat r2 \x3d roughness * roughness;\n\tfloat a \x3d roughness \x3c 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b \x3d roughness \x3c 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG \x3d exp( a * dotNV + b ) + ( roughness \x3c 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 \x3d vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 \x3d vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r \x3d roughness * c0 + c1;\n\tfloat a004 \x3d min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab \x3d vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab \x3d DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab \x3d DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr \x3d mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr \x3d specularColor;\n\t#endif\n\tvec3 FssEss \x3d Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess \x3d fab.x + fab.y;\n\tfloat Ems \x3d 1.0 - Ess;\n\tvec3 Favg \x3d Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms \x3d FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter +\x3d FssEss;\n\tmultiScatter +\x3d Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS \x3e 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal \x3d geometryNormal;\n\t\tvec3 viewDir \x3d geometryViewDir;\n\t\tvec3 position \x3d geometryPosition;\n\t\tvec3 lightPos \x3d rectAreaLight.position;\n\t\tvec3 halfWidth \x3d rectAreaLight.halfWidth;\n\t\tvec3 halfHeight \x3d rectAreaLight.halfHeight;\n\t\tvec3 lightColor \x3d rectAreaLight.color;\n\t\tfloat roughness \x3d material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] \x3d lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] \x3d lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] \x3d lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] \x3d lightPos + halfWidth + halfHeight;\n\t\tvec2 uv \x3d LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 \x3d texture2D( ltc_1, uv );\n\t\tvec4 t2 \x3d texture2D( ltc_2, uv );\n\t\tmat3 mInv \x3d mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel \x3d ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular +\x3d lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse +\x3d lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL \x3d saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance \x3d dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc \x3d saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance \x3d dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect +\x3d ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect +\x3d irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular +\x3d irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect +\x3d clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect +\x3d irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering \x3d vec3( 0.0 );\n\tvec3 multiScattering \x3d vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance \x3d irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering \x3d singleScattering + multiScattering;\n\tvec3 diffuse \x3d material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular +\x3d radiance * singleScattering;\n\treflectedLight.indirectSpecular +\x3d multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse +\x3d diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
lights_fragment_begin:"\nvec3 geometryPosition \x3d - vViewPosition;\nvec3 geometryNormal \x3d normal;\nvec3 geometryViewDir \x3d ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal \x3d vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal \x3d clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi \x3d saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness \x3d\x3d 0.0 ) {\n\t\tmaterial.iridescence \x3d 0.0;\n\t} else {\n\t\tmaterial.iridescence \x3d saturate( material.iridescence );\n\t}\n\tif ( material.iridescence \x3e 0.0 ) {\n\t\tmaterial.iridescenceFresnel \x3d evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 \x3d Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) \x26\x26 NUM_POINT_LIGHT_SHADOWS \x3e 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight \x3d pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) \x26\x26 ( UNROLLED_LOOP_INDEX \x3c NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow \x3d pointLightShadows[ i ];\n\t\tdirectLight.color *\x3d ( directLight.visible \x26\x26 receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) \x26\x26 NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight \x3d spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX \x3c NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX \x3c NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX \x3c NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord \x3d vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap \x3d all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor \x3d texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color \x3d inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) \x26\x26 ( UNROLLED_LOOP_INDEX \x3c NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow \x3d spotLightShadows[ i ];\n\t\tdirectLight.color *\x3d ( directLight.visible \x26\x26 receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) \x26\x26 NUM_DIR_LIGHT_SHADOWS \x3e 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight \x3d directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) \x26\x26 ( UNROLLED_LOOP_INDEX \x3c NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow \x3d directionalLightShadows[ i ];\n\t\tdirectLight.color *\x3d ( directLight.visible \x26\x26 receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight \x3d rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance \x3d vec3( 0.0 );\n\tvec3 irradiance \x3d getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance +\x3d getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS \x3e 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d 0; i \x3c NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance \x3d vec3( 0.0 );\n\tvec3 clearcoatRadiance \x3d vec3( 0.0 );\n#endif",
lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel \x3d texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance \x3d lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance +\x3d lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) \x26\x26 defined( STANDARD ) \x26\x26 defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance +\x3d getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) \x26\x26 defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance +\x3d getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance +\x3d getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance +\x3d getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",
lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n\tgl_FragDepth \x3d vIsPerspective \x3d\x3d 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
logdepthbuf_pars_fragment:"#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n\tvFragDepth \x3d 1.0 + gl_Position.w;\n\tvIsPerspective \x3d float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor \x3d texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor \x3d sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *\x3d sampledDiffuseColor;\n#endif",
map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv \x3d vUv;\n\t#else\n\t\tvec2 uv \x3d ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *\x3d texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *\x3d texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
metalnessmap_fragment:"float metalnessFactor \x3d metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness \x3d texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *\x3d texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence \x3d texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i \x3d 0; i \x3c MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] \x3d  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",
morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *\x3d morphTargetBaseInfluence;\n\tfor ( int i \x3d 0; i \x3c MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] !\x3d 0.0 ) vColor +\x3d getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] !\x3d 0.0 ) vColor +\x3d getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *\x3d morphTargetBaseInfluence;\n\tfor ( int i \x3d 0; i \x3c MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] !\x3d 0.0 ) objectNormal +\x3d getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex \x3d vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y \x3d texelIndex / morphTargetsTextureSize.x;\n\t\tint x \x3d texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV \x3d ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *\x3d morphTargetBaseInfluence;\n\tfor ( int i \x3d 0; i \x3c MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] !\x3d 0.0 ) transformed +\x3d getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection \x3d gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx \x3d dFdx( vViewPosition );\n\tvec3 fdy \x3d dFdy( vViewPosition );\n\tvec3 normal \x3d normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal \x3d normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *\x3d faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn \x3d mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn \x3d getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) \x26\x26 ! defined( FLAT_SHADED )\n\t\ttbn[0] *\x3d faceDirection;\n\t\ttbn[1] *\x3d faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 \x3d mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 \x3d getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) \x26\x26 ! defined( FLAT_SHADED )\n\t\ttbn2[0] *\x3d faceDirection;\n\t\ttbn2[1] *\x3d faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal \x3d normal;",
normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal \x3d texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal \x3d - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal \x3d normal * faceDirection;\n\t#endif\n\tnormal \x3d normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN \x3d texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *\x3d normalScale;\n\tnormal \x3d normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal \x3d perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent \x3d normalize( transformedTangent );\n\t\tvBitangent \x3d normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) \x26\x26 ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 \x3d dFdx( eye_pos.xyz );\n\t\tvec3 q1 \x3d dFdy( eye_pos.xyz );\n\t\tvec2 st0 \x3d dFdx( uv.st );\n\t\tvec2 st1 \x3d dFdy( uv.st );\n\t\tvec3 N \x3d surf_norm;\n\t\tvec3 q1perp \x3d cross( q1, N );\n\t\tvec3 q0perp \x3d cross( N, q0 );\n\t\tvec3 T \x3d q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B \x3d q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det \x3d max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale \x3d ( det \x3d\x3d 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",
clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal \x3d nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN \x3d texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *\x3d clearcoatNormalScale;\n\tclearcoatNormal \x3d normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",
iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a \x3d 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *\x3d material.transmissionAlpha;\n#endif\ngl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale \x3d 256. / 255.;const float UnpackDownscale \x3d 255. / 256.;const float ShiftRight8 \x3d 1. / 256.;\nconst float Inv255 \x3d 1. / 255.;\nconst vec4 PackFactors \x3d vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 \x3d vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 \x3d vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 \x3d vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v \x3c\x3d 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v \x3e\x3d 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af \x3d modf( v * PackFactors.a, vuf );\n\tfloat bf \x3d modf( vuf * ShiftRight8, vuf );\n\tfloat gf \x3d modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v \x3c\x3d 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v \x3e\x3d 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf \x3d modf( v * PackFactors.b, vuf );\n\tfloat gf \x3d modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v \x3c\x3d 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v \x3e\x3d 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf \x3d modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r \x3d vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",
premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *\x3d gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition \x3d vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition \x3d batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition \x3d instanceMatrix * mvPosition;\n#endif\nmvPosition \x3d modelViewMatrix * mvPosition;\ngl_Position \x3d projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb \x3d dithering( gl_FragColor.rgb );\n#endif",
dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position \x3d rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB \x3d vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB \x3d mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor \x3d roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness \x3d texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *\x3d texelRoughness.g;\n#endif",
roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS \x3e 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS \x3e 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\tfloat depth \x3d unpackRGBAToDepth( texture2D( depths, uv ) );\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\t\treturn step( depth, compare );\n\t\t#else\n\t\t\treturn step( compare, depth );\n\t\t#endif\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow( sampler2D shadow, vec2 uv, float compare ) {\n\t\tfloat occlusion \x3d 1.0;\n\t\tvec2 distribution \x3d texture2DDistribution( shadow, uv );\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\t\tfloat hard_shadow \x3d step( distribution.x, compare );\n\t\t#else\n\t\t\tfloat hard_shadow \x3d step( compare, distribution.x );\n\t\t#endif\n\t\tif ( hard_shadow !\x3d 1.0 ) {\n\t\t\tfloat distance \x3d compare - distribution.x;\n\t\t\tfloat variance \x3d max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability \x3d variance / (variance + distance * distance );\t\t\tsoftness_probability \x3d clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion \x3d clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow \x3d 1.0;\n\t\tshadowCoord.xyz /\x3d shadowCoord.w;\n\t\tshadowCoord.z +\x3d shadowBias;\n\t\tbool inFrustum \x3d shadowCoord.x \x3e\x3d 0.0 \x26\x26 shadowCoord.x \x3c\x3d 1.0 \x26\x26 shadowCoord.y \x3e\x3d 0.0 \x26\x26 shadowCoord.y \x3c\x3d 1.0;\n\t\tbool frustumTest \x3d inFrustum \x26\x26 shadowCoord.z \x3c\x3d 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 \x3d - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 \x3d - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 \x3d + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 \x3d + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 \x3d dx0 / 2.0;\n\t\t\tfloat dy2 \x3d dy0 / 2.0;\n\t\t\tfloat dx3 \x3d dx1 / 2.0;\n\t\t\tfloat dy3 \x3d dy1 / 2.0;\n\t\t\tshadow \x3d (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx \x3d texelSize.x;\n\t\t\tfloat dy \x3d texelSize.y;\n\t\t\tvec2 uv \x3d shadowCoord.xy;\n\t\t\tvec2 f \x3d fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -\x3d f * texelSize;\n\t\t\tshadow \x3d (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow \x3d VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow \x3d texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV \x3d abs( v );\n\t\tfloat scaleToCube \x3d 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *\x3d scaleToCube;\n\t\tv *\x3d scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar \x3d v.xy;\n\t\tfloat almostATexel \x3d 1.5 * texelSizeY;\n\t\tfloat almostOne \x3d 1.0 - almostATexel;\n\t\tif ( absV.z \x3e\x3d almostOne ) {\n\t\t\tif ( v.z \x3e 0.0 )\n\t\t\t\tplanar.x \x3d 4.0 - v.x;\n\t\t} else if ( absV.x \x3e\x3d almostOne ) {\n\t\t\tfloat signX \x3d sign( v.x );\n\t\t\tplanar.x \x3d v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y \x3e\x3d almostOne ) {\n\t\t\tfloat signY \x3d sign( v.y );\n\t\t\tplanar.x \x3d v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y \x3d v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow \x3d 1.0;\n\t\tvec3 lightToPosition \x3d shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength \x3d length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar \x3c\x3d 0.0 \x26\x26 lightToPositionLength - shadowCameraNear \x3e\x3d 0.0 ) {\n\t\t\tfloat dp \x3d ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp +\x3d shadowBias;\n\t\t\tvec3 bd3D \x3d normalize( lightToPosition );\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset \x3d vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow \x3d (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow \x3d texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",
shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS \x3e 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) \x26\x26 ( NUM_DIR_LIGHT_SHADOWS \x3e 0 || NUM_POINT_LIGHT_SHADOWS \x3e 0 ) ) || ( NUM_SPOT_LIGHT_COORDS \x3e 0 )\n\tvec3 shadowWorldNormal \x3d inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition \x3d worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] \x3d directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition \x3d worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] \x3d pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition \x3d worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) \x26\x26 UNROLLED_LOOP_INDEX \x3c NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz +\x3d shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] \x3d spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",
shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow \x3d 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight \x3d directionalLightShadows[ i ];\n\t\tshadow *\x3d receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight \x3d spotLightShadows[ i ];\n\t\tshadow *\x3d receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight \x3d pointLightShadows[ i ];\n\t\tshadow *\x3d receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX \x3d getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY \x3d getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ \x3d getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW \x3d getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size \x3d textureSize( boneTexture, 0 ).x;\n\t\tint j \x3d int( i ) * 4;\n\t\tint x \x3d j % size;\n\t\tint y \x3d j / size;\n\t\tvec4 v1 \x3d texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 \x3d texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 \x3d texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 \x3d texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",
skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex \x3d bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned \x3d vec4( 0.0 );\n\tskinned +\x3d boneMatX * skinVertex * skinWeight.x;\n\tskinned +\x3d boneMatY * skinVertex * skinWeight.y;\n\tskinned +\x3d boneMatZ * skinVertex * skinWeight.z;\n\tskinned +\x3d boneMatW * skinVertex * skinWeight.w;\n\ttransformed \x3d ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix \x3d mat4( 0.0 );\n\tskinMatrix +\x3d skinWeight.x * boneMatX;\n\tskinMatrix +\x3d skinWeight.y * boneMatY;\n\tskinMatrix +\x3d skinWeight.z * boneMatZ;\n\tskinMatrix +\x3d skinWeight.w * boneMatW;\n\tskinMatrix \x3d bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal \x3d vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent \x3d vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular \x3d texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength \x3d texelSpecular.r;\n#else\n\tspecularStrength \x3d 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb \x3d toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\tcolor \x3d max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a \x3d v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b \x3d v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat \x3d mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat \x3d mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *\x3d toneMappingExposure / 0.6;\n\tcolor \x3d ACESInputMat * color;\n\tcolor \x3d RRTAndODTFit( color );\n\tcolor \x3d ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB \x3d mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 \x3d mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 \x3d x * x;\n\tvec3 x4 \x3d x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix \x3d mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix \x3d mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv \x3d - 12.47393;\tconst float AgxMaxEv \x3d 4.026069;\n\tcolor *\x3d toneMappingExposure;\n\tcolor \x3d LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor \x3d AgXInsetMatrix * color;\n\tcolor \x3d max( color, 1e-10 );\tcolor \x3d log2( color );\n\tcolor \x3d ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor \x3d clamp( color, 0.0, 1.0 );\n\tcolor \x3d agxDefaultContrastApprox( color );\n\tcolor \x3d AgXOutsetMatrix * color;\n\tcolor \x3d pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor \x3d LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor \x3d clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression \x3d 0.8 - 0.04;\n\tconst float Desaturation \x3d 0.15;\n\tcolor *\x3d toneMappingExposure;\n\tfloat x \x3d min( color.r, min( color.g, color.b ) );\n\tfloat offset \x3d x \x3c 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -\x3d offset;\n\tfloat peak \x3d max( color.r, max( color.g, color.b ) );\n\tif ( peak \x3c StartCompression ) return color;\n\tfloat d \x3d 1. - StartCompression;\n\tfloat newPeak \x3d 1. - d * d / ( peak + d - StartCompression );\n\tcolor *\x3d newPeak / peak;\n\tfloat g \x3d 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission \x3d transmission;\n\tmaterial.transmissionAlpha \x3d 1.0;\n\tmaterial.thickness \x3d thickness;\n\tmaterial.attenuationDistance \x3d attenuationDistance;\n\tmaterial.attenuationColor \x3d attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *\x3d texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *\x3d texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos \x3d vWorldPosition;\n\tvec3 v \x3d normalize( cameraPosition - pos );\n\tvec3 n \x3d inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted \x3d getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha \x3d mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse \x3d mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",
transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv \x3d uv * texelSize.zw + 0.5;\n\t\tvec2 iuv \x3d floor( uv );\n\t\tvec2 fuv \x3d fract( uv );\n\t\tfloat g0x \x3d g0( fuv.x );\n\t\tfloat g1x \x3d g1( fuv.x );\n\t\tfloat h0x \x3d h0( fuv.x );\n\t\tfloat h1x \x3d h1( fuv.x );\n\t\tfloat h0y \x3d h0( fuv.y );\n\t\tfloat h1y \x3d h1( fuv.y );\n\t\tvec2 p0 \x3d ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 \x3d ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 \x3d ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 \x3d ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize \x3d vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize \x3d vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv \x3d 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv \x3d 1.0 / cLodSize;\n\t\tvec4 fSample \x3d bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample \x3d bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector \x3d refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x \x3d length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y \x3d length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z \x3d length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod \x3d log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient \x3d -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance \x3d exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread \x3d ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors \x3d vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i \x3d 0; i \x3c 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay \x3d getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit \x3d position + transmissionRay;\n\t\t\t\tvec4 ndcPos \x3d projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords \x3d ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords +\x3d 1.0;\n\t\t\t\trefractionCoords /\x3d 2.0;\n\t\t\t\tvec4 transmissionSample \x3d getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] \x3d transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a +\x3d transmissionSample.a;\n\t\t\t\ttransmittance[ i ] \x3d diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /\x3d 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay \x3d getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit \x3d position + transmissionRay;\n\t\t\tvec4 ndcPos \x3d projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords \x3d ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords +\x3d 1.0;\n\t\t\trefractionCoords /\x3d 2.0;\n\t\t\ttransmittedLight \x3d getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance \x3d diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor \x3d transmittance * transmittedLight.rgb;\n\t\tvec3 F \x3d EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor \x3d ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",
uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv \x3d vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv \x3d ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv \x3d ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv \x3d ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv \x3d ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv \x3d ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv \x3d ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv \x3d ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv \x3d ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv \x3d ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv \x3d ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv \x3d ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv \x3d ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv \x3d ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv \x3d ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv \x3d ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv \x3d ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv \x3d ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv \x3d ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv \x3d ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv \x3d ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv \x3d ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv \x3d ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv \x3d ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",
worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS \x3e 0\n\tvec4 worldPosition \x3d vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition \x3d batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition \x3d instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition \x3d modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv \x3d ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position \x3d vec4( position.xy, 1.0, 1.0 );\n}",
background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor \x3d texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor \x3d vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *\x3d backgroundIntensity;\n\tgl_FragColor \x3d texColor;\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n}",
backgroundCube_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_Position.z \x3d gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include \x3ccube_uv_reflection_fragment\x3e\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor \x3d textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor \x3d textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor \x3d vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *\x3d backgroundIntensity;\n\tgl_FragColor \x3d texColor;\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n}",
cube_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_Position.z \x3d gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor \x3d textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor \x3d texColor;\n\tgl_FragColor.a *\x3d opacity;\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n}",
depth_vert:"#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvHighPrecisionZW \x3d gl_Position.zw;\n}",
depth_frag:"#if DEPTH_PACKING \x3d\x3d 3200\n\tuniform float opacity;\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\t#include \x3cclipping_planes_fragment\x3e\n\t#if DEPTH_PACKING \x3d\x3d 3200\n\t\tdiffuseColor.a \x3d opacity;\n\t#endif\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#ifdef USE_REVERSED_DEPTH_BUFFER\n\t\tfloat fragCoordZ \x3d vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];\n\t#else\n\t\tfloat fragCoordZ \x3d 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;\n\t#endif\n\t#if DEPTH_PACKING \x3d\x3d 3200\n\t\tgl_FragColor \x3d vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING \x3d\x3d 3201\n\t\tgl_FragColor \x3d packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING \x3d\x3d 3202\n\t\tgl_FragColor \x3d vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING \x3d\x3d 3203\n\t\tgl_FragColor \x3d vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",
distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvWorldPosition \x3d worldPosition.xyz;\n}",
distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main () {\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\t#include \x3cclipping_planes_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\tfloat dist \x3d length( vWorldPosition - referencePosition );\n\tdist \x3d ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist \x3d saturate( dist );\n\tgl_FragColor \x3d packDepthToRGBA( dist );\n}",
equirect_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvec3 direction \x3d normalize( vWorldDirection );\n\tvec2 sampleUV \x3d equirectUv( direction );\n\tgl_FragColor \x3d texture2D( tEquirect, sampleUV );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n}",
linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\tvLineDistance \x3d scale * lineDistance;\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tif ( mod( vLineDistance, totalSize ) \x3e dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n}",
meshbasic_vert:"#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinbase_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t\t#include \x3cdefaultnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel \x3d texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse +\x3d lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse +\x3d vec3( 1.0 );\n\t#endif\n\t#include \x3caomap_fragment\x3e\n\treflectedLight.indirectDiffuse *\x3d diffuseColor.rgb;\n\tvec3 outgoingLight \x3d reflectedLight.indirectDiffuse;\n\t#include \x3cenvmap_fragment\x3e\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cnormal_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cnormal_pars_fragment\x3e\n#include \x3clights_lambert_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_lambert_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include \x3cenvmap_fragment\x3e\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cnormal_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n}",
meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include \x3ccommon\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cnormal_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\tvec3 viewDir \x3d normalize( vViewPosition );\n\tvec3 x \x3d normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y \x3d cross( viewDir, x );\n\tvec2 uv \x3d vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor \x3d texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor \x3d vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight \x3d diffuseColor.rgb * matcapColor.rgb;\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cnormal_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition \x3d - mvPosition.xyz;\n#endif\n}",
meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cnormal_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( 0.0, 0.0, 0.0, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\tgl_FragColor \x3d vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a \x3d 1.0;\n\t#endif\n}",
meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cnormal_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cnormal_pars_fragment\x3e\n#include \x3clights_phong_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_phong_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include \x3cenvmap_fragment\x3e\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cnormal_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n#ifdef USE_TRANSMISSION\n\tvWorldPosition \x3d worldPosition.xyz;\n#endif\n}",
meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3ciridescence_fragment\x3e\n#include \x3ccube_uv_reflection_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_physical_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cnormal_pars_fragment\x3e\n#include \x3clights_physical_pars_fragment\x3e\n#include \x3ctransmission_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3cclearcoat_pars_fragment\x3e\n#include \x3ciridescence_pars_fragment\x3e\n#include \x3croughnessmap_pars_fragment\x3e\n#include \x3cmetalnessmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3croughnessmap_fragment\x3e\n\t#include \x3cmetalnessmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cclearcoat_normal_fragment_begin\x3e\n\t#include \x3cclearcoat_normal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_physical_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 totalDiffuse \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular \x3d reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include \x3ctransmission_fragment\x3e\n\tvec3 outgoingLight \x3d totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp \x3d 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight \x3d outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc \x3d saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc \x3d F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight \x3d outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cnormal_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cgradientmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cnormal_pars_fragment\x3e\n#include \x3clights_toon_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_toon_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
points_vert:"uniform float size;\nuniform float scale;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv \x3d ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphcolor_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_PointSize \x3d size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective \x3d isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *\x3d ( scale / - mvPosition.z );\n\t#endif\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cmap_particle_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_particle_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n}",
shadow_vert:"#include \x3ccommon\x3e\n#include \x3cbatching_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\nvoid main() {\n\t#include \x3cbatching_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphinstance_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cshadowmask_pars_fragment\x3e\nvoid main() {\n\t#include \x3clogdepthbuf_fragment\x3e\n\tgl_FragColor \x3d vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\tvec4 mvPosition \x3d modelViewMatrix[ 3 ];\n\tvec2 scale \x3d vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective \x3d isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *\x3d - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition \x3d ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x \x3d cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y \x3d sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy +\x3d rotatedPosition;\n\tgl_Position \x3d projectionMatrix * mvPosition;\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3calphahash_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3calphahash_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\t#include \x3copaque_fragment\x3e\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3ccolorspace_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}"},
UniformsLib={common:{diffuse:{value:new Color(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Matrix3}},envmap:{envMap:{value:null},envMapRotation:{value:new Matrix3},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Matrix3}},
lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Matrix3}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Matrix3},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Matrix3},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Matrix3},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Matrix3}},
metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Matrix3}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Matrix3}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},
shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},
distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(16777215)},opacity:{value:1},size:{value:1},
scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(16777215)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Matrix3},alphaMap:{value:null},alphaMapTransform:{value:new Matrix3},alphaTest:{value:0}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,
UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},
phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,
UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,
UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,
UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,
UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},
backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Matrix3}},vertexShader:ShaderChunk.backgroundCube_vert,fragmentShader:ShaderChunk.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},
distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1E3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,
{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Matrix3},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Matrix3},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Matrix3},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Matrix3},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},
iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Matrix3},sheen:{value:0},sheenColor:{value:new Color(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Matrix3},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Matrix3},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Matrix3},transmissionSamplerSize:{value:new Vector2},transmissionSamplerMap:{value:null},
thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Matrix3},attenuationDistance:{value:0},attenuationColor:{value:new Color(0)},specularColor:{value:new Color(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Matrix3},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Matrix3},anisotropyVector:{value:new Vector2},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Matrix3}}]),vertexShader:ShaderChunk.meshphysical_vert,
fragmentShader:ShaderChunk.meshphysical_frag};var _rgb={r:0,b:0,g:0},_e1$1=new Euler,_m1$1=new Matrix4,EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],_flatCamera=new OrthographicCamera,_clearColor=new Color,_oldTarget=null,_oldActiveCubeFace=0,_oldActiveMipmapLevel=0,_oldXrEnabled=!1,PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(-PHI,INV_PHI,0),new Vector3(PHI,INV_PHI,0),new Vector3(-INV_PHI,0,PHI),new Vector3(INV_PHI,0,PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(0,PHI,INV_PHI),
new Vector3(-1,1,-1),new Vector3(1,1,-1),new Vector3(-1,1,1),new Vector3(1,1,1)],_origin=new Vector3,PMREMGenerator=function(renderer){this._renderer=renderer;this._pingPongRenderTarget=null;this._cubeSize=this._lodMax=0;this._lodPlanes=[];this._sizeLods=[];this._sigmas=[];this._equirectMaterial=this._cubemapMaterial=this._blurMaterial=null;this._compileMaterial(this._blurMaterial)};PMREMGenerator.prototype.fromScene=function(scene,sigma,near,far,options){sigma=void 0===sigma?0:sigma;near=void 0===
near?.1:near;far=void 0===far?100:far;var $jscomp$destructuring$var11=options=void 0===options?{}:options;options=void 0===$jscomp$destructuring$var11.size?256:$jscomp$destructuring$var11.size;$jscomp$destructuring$var11=void 0===$jscomp$destructuring$var11.position?_origin:$jscomp$destructuring$var11.position;_oldTarget=this._renderer.getRenderTarget();_oldActiveCubeFace=this._renderer.getActiveCubeFace();_oldActiveMipmapLevel=this._renderer.getActiveMipmapLevel();_oldXrEnabled=this._renderer.xr.enabled;
this._renderer.xr.enabled=!1;this._setSize(options);options=this._allocateTargets();options.depthBuffer=!0;this._sceneToCubeUV(scene,near,far,options,$jscomp$destructuring$var11);0<sigma&&this._blur(options,0,0,sigma);this._applyPMREM(options);this._cleanup(options);return options};PMREMGenerator.prototype.fromEquirectangular=function(equirectangular,renderTarget){return this._fromTexture(equirectangular,void 0===renderTarget?null:renderTarget)};PMREMGenerator.prototype.fromCubemap=function(cubemap,
renderTarget){return this._fromTexture(cubemap,void 0===renderTarget?null:renderTarget)};PMREMGenerator.prototype.compileCubemapShader=function(){null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial(),this._compileMaterial(this._cubemapMaterial))};PMREMGenerator.prototype.compileEquirectangularShader=function(){null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial(),this._compileMaterial(this._equirectMaterial))};PMREMGenerator.prototype.dispose=function(){this._dispose();
null!==this._cubemapMaterial&&this._cubemapMaterial.dispose();null!==this._equirectMaterial&&this._equirectMaterial.dispose()};PMREMGenerator.prototype._setSize=function(cubeSize){this._lodMax=Math.floor(Math.log2(cubeSize));this._cubeSize=Math.pow(2,this._lodMax)};PMREMGenerator.prototype._dispose=function(){null!==this._blurMaterial&&this._blurMaterial.dispose();null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(var i=0;i<this._lodPlanes.length;i++)this._lodPlanes[i].dispose()};
PMREMGenerator.prototype._cleanup=function(outputTarget){this._renderer.setRenderTarget(_oldTarget,_oldActiveCubeFace,_oldActiveMipmapLevel);this._renderer.xr.enabled=_oldXrEnabled;outputTarget.scissorTest=!1;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height)};PMREMGenerator.prototype._fromTexture=function(texture,renderTarget){301===texture.mapping||302===texture.mapping?this._setSize(0===texture.image.length?16:texture.image[0].width||texture.image[0].image.width):this._setSize(texture.image.width/
4);_oldTarget=this._renderer.getRenderTarget();_oldActiveCubeFace=this._renderer.getActiveCubeFace();_oldActiveMipmapLevel=this._renderer.getActiveMipmapLevel();_oldXrEnabled=this._renderer.xr.enabled;this._renderer.xr.enabled=!1;renderTarget=renderTarget||this._allocateTargets();this._textureToCubeUV(texture,renderTarget);this._applyPMREM(renderTarget);this._cleanup(renderTarget);return renderTarget};PMREMGenerator.prototype._allocateTargets=function(){var width=3*Math.max(this._cubeSize,112),height=
4*this._cubeSize,params={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:"srgb-linear",depthBuffer:!1},cubeUVRenderTarget=_createRenderTarget(width,height,params);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==width||this._pingPongRenderTarget.height!==height){null!==this._pingPongRenderTarget&&this._dispose();this._pingPongRenderTarget=_createRenderTarget(width,height,params);params=this._lodMax;for(var lodPlanes=[],sizeLods=[],sigmas=[],
lod=params,totalLods=params-4+1+EXTRA_LOD_SIGMA.length,i=0;i<totalLods;i++){var sizeLod=Math.pow(2,lod);sizeLods.push(sizeLod);var sigma=1/sizeLod;i>params-4?sigma=EXTRA_LOD_SIGMA[i-params+4-1]:0===i&&(sigma=0);sigmas.push(sigma);sigma=1/(sizeLod-2);sizeLod=-sigma;sigma=1+sigma;var uv1=[sizeLod,sizeLod,sigma,sizeLod,sigma,sigma,sizeLod,sizeLod,sigma,sigma,sizeLod,sigma];sizeLod=new Float32Array(108);sigma=new Float32Array(72);for(var faceIndex=new Float32Array(36),face=0;6>face;face++){var x=face%
3*2/3-1,y=2<face?0:-1;sizeLod.set([x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0],18*face);sigma.set(uv1,12*face);faceIndex.set([face,face,face,face,face,face],6*face)}uv1=new BufferGeometry;uv1.setAttribute("position",new BufferAttribute(sizeLod,3));uv1.setAttribute("uv",new BufferAttribute(sigma,2));uv1.setAttribute("faceIndex",new BufferAttribute(faceIndex,1));lodPlanes.push(uv1);4<lod&&lod--}this._sizeLods=sizeLods;this._lodPlanes=lodPlanes;this._sigmas=sigmas;lodPlanes=new Float32Array(20);
sizeLods=new Vector3(0,1,0);this._blurMaterial=new ShaderMaterial({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/width,CUBEUV_TEXEL_HEIGHT:1/height,CUBEUV_MAX_MIP:params+".0"},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:lodPlanes},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:sizeLods}},vertexShader:_getCommonVertexShader(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include \x3ccube_uv_reflection_fragment\x3e\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta \x3d cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection \x3d vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis \x3d latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis \x3d vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis \x3d normalize( axis );\n\n\t\t\t\tgl_FragColor \x3d vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb +\x3d weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i \x3d 1; i \x3c n; i++ ) {\n\n\t\t\t\t\tif ( i \x3e\x3d samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta \x3d dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb +\x3d weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb +\x3d weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",
blending:0,depthTest:!1,depthWrite:!1})}return cubeUVRenderTarget};PMREMGenerator.prototype._compileMaterial=function(material){material=new Mesh(this._lodPlanes[0],material);this._renderer.compile(material,_flatCamera)};PMREMGenerator.prototype._sceneToCubeUV=function(scene,near,far,cubeUVRenderTarget,position){near=new PerspectiveCamera(90,1,near,far);far=[1,-1,1,1,1,1];var forwardSign=[1,1,1,-1,-1,-1],renderer=this._renderer,originalAutoClear=renderer.autoClear,toneMapping=renderer.toneMapping;
renderer.getClearColor(_clearColor);renderer.toneMapping=0;renderer.autoClear=!1;renderer.state.buffers.depth.getReversed()&&(renderer.setRenderTarget(cubeUVRenderTarget),renderer.clearDepth(),renderer.setRenderTarget(null));var backgroundMaterial=new MeshBasicMaterial({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),backgroundBox=new Mesh(new BoxGeometry,backgroundMaterial),useSolidColor=!1,background=scene.background;background?background.isColor&&(backgroundMaterial.color.copy(background),
scene.background=null,useSolidColor=!0):(backgroundMaterial.color.copy(_clearColor),useSolidColor=!0);for(backgroundMaterial=0;6>backgroundMaterial;backgroundMaterial++){var col=backgroundMaterial%3;0===col?(near.up.set(0,far[backgroundMaterial],0),near.position.set(position.x,position.y,position.z),near.lookAt(position.x+forwardSign[backgroundMaterial],position.y,position.z)):1===col?(near.up.set(0,0,far[backgroundMaterial]),near.position.set(position.x,position.y,position.z),near.lookAt(position.x,
position.y+forwardSign[backgroundMaterial],position.z)):(near.up.set(0,far[backgroundMaterial],0),near.position.set(position.x,position.y,position.z),near.lookAt(position.x,position.y,position.z+forwardSign[backgroundMaterial]));var size=this._cubeSize;_setViewport(cubeUVRenderTarget,col*size,2<backgroundMaterial?size:0,size,size);renderer.setRenderTarget(cubeUVRenderTarget);useSolidColor&&renderer.render(backgroundBox,near);renderer.render(scene,near)}backgroundBox.geometry.dispose();backgroundBox.material.dispose();
renderer.toneMapping=toneMapping;renderer.autoClear=originalAutoClear;scene.background=background};PMREMGenerator.prototype._textureToCubeUV=function(texture,cubeUVRenderTarget){var renderer=this._renderer,isCubeTexture=301===texture.mapping||302===texture.mapping;isCubeTexture?(null===this._cubemapMaterial&&(this._cubemapMaterial=_getCubemapMaterial()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===texture.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=_getEquirectMaterial());
var material=isCubeTexture?this._cubemapMaterial:this._equirectMaterial;isCubeTexture=new Mesh(this._lodPlanes[0],material);material.uniforms.envMap.value=texture;texture=this._cubeSize;_setViewport(cubeUVRenderTarget,0,0,3*texture,2*texture);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(isCubeTexture,_flatCamera)};PMREMGenerator.prototype._applyPMREM=function(cubeUVRenderTarget){var renderer=this._renderer,autoClear=renderer.autoClear;renderer.autoClear=!1;for(var n=this._lodPlanes.length,
i=1;i<n;i++)this._blur(cubeUVRenderTarget,i-1,i,Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),_axisDirections[(n-i-1)%_axisDirections.length]);renderer.autoClear=autoClear};PMREMGenerator.prototype._blur=function(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){var pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,"latitudinal",poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,
lodOut,sigma,"longitudinal",poleAxis)};PMREMGenerator.prototype._halfBlur=function(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){var renderer=this._renderer,blurMaterial=this._blurMaterial;"latitudinal"!==direction&&"longitudinal"!==direction&&console.error("blur direction must be either latitudinal or longitudinal!");var blurMesh=new Mesh(this._lodPlanes[lodOut],blurMaterial);blurMaterial=blurMaterial.uniforms;var pixels=this._sizeLods[lodIn]-1;pixels=isFinite(sigmaRadians)?Math.PI/
(2*pixels):2*Math.PI/39;var sigmaPixels=sigmaRadians/pixels,samples=isFinite(sigmaRadians)?1+Math.floor(3*sigmaPixels):20;20<samples&&console.warn("sigmaRadians, "+sigmaRadians+", is too large and will clip, as it requested "+samples+" samples when the maximum is set to 20");sigmaRadians=[];for(var sum=0,i=0;20>i;++i){var x$290=i/sigmaPixels;x$290=Math.exp(-x$290*x$290/2);sigmaRadians.push(x$290);0===i?sum+=x$290:i<samples&&(sum+=2*x$290)}for(sigmaPixels=0;sigmaPixels<sigmaRadians.length;sigmaPixels++)sigmaRadians[sigmaPixels]/=
sum;blurMaterial.envMap.value=targetIn.texture;blurMaterial.samples.value=samples;blurMaterial.weights.value=sigmaRadians;blurMaterial.latitudinal.value="latitudinal"===direction;poleAxis&&(blurMaterial.poleAxis.value=poleAxis);targetIn=this._lodMax;blurMaterial.dTheta.value=pixels;blurMaterial.mipInt.value=targetIn-lodIn;lodIn=this._sizeLods[lodOut];_setViewport(targetOut,3*lodIn*(lodOut>targetIn-4?lodOut-targetIn+4:0),4*(this._cubeSize-lodIn),3*lodIn,2*lodIn);renderer.setRenderTarget(targetOut);
renderer.render(blurMesh,_flatCamera)};var emptyTexture=new Texture,emptyShadowTexture=new DepthTexture(1,1),emptyArrayTexture=new DataArrayTexture,empty3dTexture=new Data3DTexture,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4),SingleUniform=function(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.type=activeInfo.type;this.setValue=getSingularSetter(activeInfo.type)},PureArrayUniform=
function(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.type=activeInfo.type;this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type)},StructuredUniform=function(id){this.id=id;this.seq=[];this.map={}};StructuredUniform.prototype.setValue=function(gl,value,textures){for(var seq=this.seq,i=0,n=seq.length;i!==n;++i){var u=seq[i];u.setValue(gl,value[u.id],textures)}};var RePathPart=/(\w+)(\])?(\[|\.)?/g,WebGLUniforms=function(gl,program){this.seq=[];this.map={};for(var n=
gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS),i=0;i<n;++i){var info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name),container=this,path=info.name,pathLength=path.length;for(RePathPart.lastIndex=0;;){var match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex,id=match[1],subscript=match[3];"]"===match[2]&&(id|=0);if(void 0===subscript||"["===subscript&&matchEnd+2===pathLength){path=container;info=void 0===subscript?new SingleUniform(id,info,addr):new PureArrayUniform(id,
info,addr);path.seq.push(info);path.map[info.id]=info;break}else subscript=container.map[id],void 0===subscript&&(subscript=new StructuredUniform(id),id=container,container=subscript,id.seq.push(container),id.map[container.id]=container),container=subscript}}};WebGLUniforms.prototype.setValue=function(gl,name,value,textures){name=this.map[name];void 0!==name&&name.setValue(gl,value,textures)};WebGLUniforms.prototype.setOptional=function(gl,object,name){object=object[name];void 0!==object&&this.setValue(gl,
name,object)};WebGLUniforms.upload=function(gl,seq,values,textures){for(var i=0,n=seq.length;i!==n;++i){var u=seq[i],v=values[u.id];!1!==v.needsUpdate&&u.setValue(gl,v.value,textures)}};WebGLUniforms.seqWithValue=function(seq,values){for(var r=[],i=0,n=seq.length;i!==n;++i){var u=seq[i];u.id in values&&r.push(u)}return r};var programIdCount=0,_m0=new Matrix3,_v0=new Vector3,includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm,shaderChunkMap=new Map,unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g,
_id=0,WebGLShaderCache=function(){this.shaderCache=new Map;this.materialCache=new Map};WebGLShaderCache.prototype.update=function(material){var fragmentShader=material.fragmentShader,vertexShaderStage=this._getShaderStage(material.vertexShader);fragmentShader=this._getShaderStage(fragmentShader);material=this._getShaderCacheForMaterial(material);!1===material.has(vertexShaderStage)&&(material.add(vertexShaderStage),vertexShaderStage.usedTimes++);!1===material.has(fragmentShader)&&(material.add(fragmentShader),
fragmentShader.usedTimes++);return this};WebGLShaderCache.prototype.remove=function(material){var materialShaders=this.materialCache.get(material);materialShaders=$jscomp.makeIterator(materialShaders);for(var $jscomp$key$shaderStage=materialShaders.next();!$jscomp$key$shaderStage.done;$jscomp$key$shaderStage=materialShaders.next())$jscomp$key$shaderStage=$jscomp$key$shaderStage.value,$jscomp$key$shaderStage.usedTimes--,0===$jscomp$key$shaderStage.usedTimes&&this.shaderCache.delete($jscomp$key$shaderStage.code);
this.materialCache.delete(material);return this};WebGLShaderCache.prototype.getVertexShaderID=function(material){return this._getShaderStage(material.vertexShader).id};WebGLShaderCache.prototype.getFragmentShaderID=function(material){return this._getShaderStage(material.fragmentShader).id};WebGLShaderCache.prototype.dispose=function(){this.shaderCache.clear();this.materialCache.clear()};WebGLShaderCache.prototype._getShaderCacheForMaterial=function(material){var cache=this.materialCache,set=cache.get(material);
void 0===set&&(set=new Set,cache.set(material,set));return set};WebGLShaderCache.prototype._getShaderStage=function(code){var cache=this.shaderCache,stage=cache.get(code);void 0===stage&&(stage=new WebGLShaderStage(code),cache.set(code,stage));return stage};var WebGLShaderStage=function(code){this.id=_id++;this.code=code;this.usedTimes=0},nextVersion=0,$jscomp$compprop2={},reversedFuncs=($jscomp$compprop2[0]=1,$jscomp$compprop2[2]=6,$jscomp$compprop2[4]=7,$jscomp$compprop2[3]=5,$jscomp$compprop2[1]=
0,$jscomp$compprop2[6]=2,$jscomp$compprop2[7]=4,$jscomp$compprop2[5]=3,$jscomp$compprop2),WebXRDepthSensing=function(){this.mesh=this.texture=null;this.depthFar=this.depthNear=0};WebXRDepthSensing.prototype.init=function(depthData,renderState){if(null===this.texture){var texture=new ExternalTexture(depthData.texture);if(depthData.depthNear!==renderState.depthNear||depthData.depthFar!==renderState.depthFar)this.depthNear=depthData.depthNear,this.depthFar=depthData.depthFar;this.texture=texture}};WebXRDepthSensing.prototype.getMesh=
function(cameraXR){null!==this.texture&&null===this.mesh&&(cameraXR=cameraXR.cameras[0].viewport,cameraXR=new ShaderMaterial({vertexShader:"\nvoid main() {\n\n\tgl_Position \x3d vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord \x3d vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x \x3e\x3d 1.0 ) {\n\n\t\tgl_FragDepth \x3d texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth \x3d texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",
uniforms:{depthColor:{value:this.texture},depthWidth:{value:cameraXR.z},depthHeight:{value:cameraXR.w}}}),this.mesh=new Mesh(new PlaneGeometry(20,20),cameraXR));return this.mesh};WebXRDepthSensing.prototype.reset=function(){this.mesh=this.texture=null};WebXRDepthSensing.prototype.getDepthTexture=function(){return this.texture};var WebXRManager=function(renderer,gl){function onSessionEvent(event){var controllerIndex=controllerInputSources.indexOf(event.inputSource);-1!==controllerIndex&&(controllerIndex=
controllers[controllerIndex],void 0!==controllerIndex&&(controllerIndex.update(event.inputSource,event.frame,customReferenceSpace||referenceSpace),controllerIndex.dispatchEvent({type:event.type,data:event.inputSource})))}function onSessionEnd(){session.removeEventListener("select",onSessionEvent);session.removeEventListener("selectstart",onSessionEvent);session.removeEventListener("selectend",onSessionEvent);session.removeEventListener("squeeze",onSessionEvent);session.removeEventListener("squeezestart",
onSessionEvent);session.removeEventListener("squeezeend",onSessionEvent);session.removeEventListener("end",onSessionEnd);session.removeEventListener("inputsourceschange",onInputSourcesChange);for(var i=0;i<controllers.length;i++){var inputSource=controllerInputSources[i];null!==inputSource&&(controllerInputSources[i]=null,controllers[i].disconnect(inputSource))}_currentDepthFar=_currentDepthNear=null;depthSensing.reset();for(var key in cameraAccessTextures)delete cameraAccessTextures[key];renderer.setRenderTarget(initialRenderTarget);
newRenderTarget=session=glBinding=glProjLayer=glBaseLayer=null;animation.stop();scope.isPresenting=!1;renderer.setPixelRatio(currentPixelRatio);renderer.setSize(currentSize.width,currentSize.height,!1);scope.dispatchEvent({type:"sessionend"})}function onInputSourcesChange(event){for(var i=0;i<event.removed.length;i++){var inputSource=event.removed[i],index=controllerInputSources.indexOf(inputSource);0<=index&&(controllerInputSources[index]=null,controllers[index].disconnect(inputSource))}for(i=0;i<
event.added.length;i++){inputSource=event.added[i];index=controllerInputSources.indexOf(inputSource);if(-1===index){for(var i$361=0;i$361<controllers.length;i$361++)if(i$361>=controllerInputSources.length){controllerInputSources.push(inputSource);index=i$361;break}else if(null===controllerInputSources[i$361]){controllerInputSources[i$361]=inputSource;index=i$361;break}if(-1===index)break}(index=controllers[index])&&index.connect(inputSource)}}function updateCamera(camera,parent){null===parent?camera.matrixWorld.copy(camera.matrix):
camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);camera.matrixWorldInverse.copy(camera.matrixWorld).invert()}var scope=this,session=null,framebufferScaleFactor=1,referenceSpace=null,referenceSpaceType="local-floor",foveation=1,customReferenceSpace=null,pose=null,glBinding=null,glProjLayer=null,glBaseLayer=null,xrFrame=null,supportsGlBinding="undefined"!==typeof XRWebGLBinding,depthSensing=new WebXRDepthSensing,cameraAccessTextures={},attributes=gl.getContextAttributes(),initialRenderTarget=
null,newRenderTarget=null,controllers=[],controllerInputSources=[],currentSize=new Vector2,currentPixelRatio=null,cameraL=new PerspectiveCamera;cameraL.viewport=new Vector4;var cameraR=new PerspectiveCamera;cameraR.viewport=new Vector4;var cameras=[cameraL,cameraR],cameraXR=new ArrayCamera,_currentDepthNear=null,_currentDepthFar=null;this.cameraAutoUpdate=!0;this.isPresenting=this.enabled=!1;this.getController=function(index){var controller=controllers[index];void 0===controller&&(controller=new WebXRController,
controllers[index]=controller);return controller.getTargetRaySpace()};this.getControllerGrip=function(index){var controller=controllers[index];void 0===controller&&(controller=new WebXRController,controllers[index]=controller);return controller.getGripSpace()};this.getHand=function(index){var controller=controllers[index];void 0===controller&&(controller=new WebXRController,controllers[index]=controller);return controller.getHandSpace()};this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=
value;!0===scope.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")};this.setReferenceSpaceType=function(value){referenceSpaceType=value;!0===scope.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")};this.getReferenceSpace=function(){return customReferenceSpace||referenceSpace};this.setReferenceSpace=function(space){customReferenceSpace=space};this.getBaseLayer=function(){return null!==glProjLayer?
glProjLayer:glBaseLayer};this.getBinding=function(){null===glBinding&&supportsGlBinding&&(glBinding=new XRWebGLBinding(session,gl));return glBinding};this.getFrame=function(){return xrFrame};this.getSession=function(){return session};this.setSession=function(value){var $jscomp$async$this=this,supportsLayers,layerInit,depthFormat,depthType,glDepthFormat,projectionlayerInit;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==$jscomp$generator$context.nextAddress){session=
value;if(null===session)return $jscomp$generator$context.jumpTo(0);initialRenderTarget=renderer.getRenderTarget();session.addEventListener("select",onSessionEvent);session.addEventListener("selectstart",onSessionEvent);session.addEventListener("selectend",onSessionEvent);session.addEventListener("squeeze",onSessionEvent);session.addEventListener("squeezestart",onSessionEvent);session.addEventListener("squeezeend",onSessionEvent);session.addEventListener("end",onSessionEnd);session.addEventListener("inputsourceschange",
onInputSourcesChange);return!0===attributes.xrCompatible?$jscomp$generator$context.jumpTo(3):$jscomp$generator$context.yield(gl.makeXRCompatible(),3)}if(5!=$jscomp$generator$context.nextAddress)return currentPixelRatio=renderer.getPixelRatio(),renderer.getSize(currentSize),(supportsLayers=supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype)?(glDepthFormat=depthType=depthFormat=null,attributes.depth&&(glDepthFormat=attributes.stencil?gl.DEPTH24_STENCIL8:gl.DEPTH_COMPONENT24,depthFormat=
attributes.stencil?1027:1026,depthType=attributes.stencil?1020:1014),projectionlayerInit={colorFormat:gl.RGBA8,depthFormat:glDepthFormat,scaleFactor:framebufferScaleFactor},glBinding=$jscomp$async$this.getBinding(),glProjLayer=glBinding.createProjectionLayer(projectionlayerInit),session.updateRenderState({layers:[glProjLayer]}),renderer.setPixelRatio(1),renderer.setSize(glProjLayer.textureWidth,glProjLayer.textureHeight,!1),newRenderTarget=new WebGLRenderTarget(glProjLayer.textureWidth,glProjLayer.textureHeight,
{format:1023,type:1009,depthTexture:new DepthTexture(glProjLayer.textureWidth,glProjLayer.textureHeight,depthType,void 0,void 0,void 0,void 0,void 0,void 0,depthFormat),stencilBuffer:attributes.stencil,colorSpace:renderer.outputColorSpace,samples:attributes.antialias?4:0,resolveDepthBuffer:!1===glProjLayer.ignoreDepthValues,resolveStencilBuffer:!1===glProjLayer.ignoreDepthValues})):(layerInit={antialias:attributes.antialias,alpha:!0,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor},
glBaseLayer=new XRWebGLLayer(session,gl,layerInit),session.updateRenderState({baseLayer:glBaseLayer}),renderer.setPixelRatio(1),renderer.setSize(glBaseLayer.framebufferWidth,glBaseLayer.framebufferHeight,!1),newRenderTarget=new WebGLRenderTarget(glBaseLayer.framebufferWidth,glBaseLayer.framebufferHeight,{format:1023,type:1009,colorSpace:renderer.outputColorSpace,stencilBuffer:attributes.stencil,resolveDepthBuffer:!1===glBaseLayer.ignoreDepthValues,resolveStencilBuffer:!1===glBaseLayer.ignoreDepthValues})),
newRenderTarget.isXRRenderTarget=!0,$jscomp$async$this.setFoveation(foveation),customReferenceSpace=null,$jscomp$generator$context.yield(session.requestReferenceSpace(referenceSpaceType),5);referenceSpace=$jscomp$generator$context.yieldResult;animation.setContext(session);animation.start();scope.isPresenting=!0;scope.dispatchEvent({type:"sessionstart"});$jscomp$generator$context.jumpToEnd()})};this.getEnvironmentBlendMode=function(){if(null!==session)return session.environmentBlendMode};this.getDepthTexture=
function(){return depthSensing.getDepthTexture()};var cameraLPos=new Vector3,cameraRPos=new Vector3;this.updateCamera=function(camera){if(null!==session){var depthNear=camera.near,depthFar=camera.far;null!==depthSensing.texture&&(0<depthSensing.depthNear&&(depthNear=depthSensing.depthNear),0<depthSensing.depthFar&&(depthFar=depthSensing.depthFar));cameraXR.near=cameraR.near=cameraL.near=depthNear;cameraXR.far=cameraR.far=cameraL.far=depthFar;if(_currentDepthNear!==cameraXR.near||_currentDepthFar!==
cameraXR.far)session.updateRenderState({depthNear:cameraXR.near,depthFar:cameraXR.far}),_currentDepthNear=cameraXR.near,_currentDepthFar=cameraXR.far;cameraXR.layers.mask=camera.layers.mask|6;cameraL.layers.mask=cameraXR.layers.mask&3;cameraR.layers.mask=cameraXR.layers.mask&5;depthNear=camera.parent;depthFar=cameraXR.cameras;updateCamera(cameraXR,depthNear);for(var i=0;i<depthFar.length;i++)updateCamera(depthFar[i],depthNear);if(2===depthFar.length){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);
cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);depthFar=cameraLPos.distanceTo(cameraRPos);var projL=cameraL.projectionMatrix.elements,projR=cameraR.projectionMatrix.elements,near=projL[14]/(projL[10]-1);i=projL[14]/(projL[10]+1);var topFov=(projL[9]+1)/projL[5],bottomFov=(projL[9]-1)/projL[5],leftFov=(projL[8]-1)/projL[0],rightFov=(projR[8]+1)/projR[0];projR=near*leftFov;var right=near*rightFov;rightFov=depthFar/(-leftFov+rightFov);leftFov=rightFov*-leftFov;cameraL.matrixWorld.decompose(cameraXR.position,
cameraXR.quaternion,cameraXR.scale);cameraXR.translateX(leftFov);cameraXR.translateZ(rightFov);cameraXR.matrixWorld.compose(cameraXR.position,cameraXR.quaternion,cameraXR.scale);cameraXR.matrixWorldInverse.copy(cameraXR.matrixWorld).invert();-1===projL[10]?(cameraXR.projectionMatrix.copy(cameraL.projectionMatrix),cameraXR.projectionMatrixInverse.copy(cameraL.projectionMatrixInverse)):(projL=near+rightFov,near=i+rightFov,cameraXR.projectionMatrix.makePerspective(projR-leftFov,right+(depthFar-leftFov),
topFov*i/near*projL,bottomFov*i/near*projL,projL,near),cameraXR.projectionMatrixInverse.copy(cameraXR.projectionMatrix).invert())}else cameraXR.projectionMatrix.copy(cameraL.projectionMatrix);null===depthNear?camera.matrix.copy(cameraXR.matrixWorld):(camera.matrix.copy(depthNear.matrixWorld),camera.matrix.invert(),camera.matrix.multiply(cameraXR.matrixWorld));camera.matrix.decompose(camera.position,camera.quaternion,camera.scale);camera.updateMatrixWorld(!0);camera.projectionMatrix.copy(cameraXR.projectionMatrix);
camera.projectionMatrixInverse.copy(cameraXR.projectionMatrixInverse);camera.isPerspectiveCamera&&(camera.fov=2*RAD2DEG*Math.atan(1/camera.projectionMatrix.elements[5]),camera.zoom=1)}};this.getCamera=function(){return cameraXR};this.getFoveation=function(){if(null!==glProjLayer||null!==glBaseLayer)return foveation};this.setFoveation=function(value){foveation=value;null!==glProjLayer&&(glProjLayer.fixedFoveation=value);null!==glBaseLayer&&void 0!==glBaseLayer.fixedFoveation&&(glBaseLayer.fixedFoveation=
value)};this.hasDepthSensing=function(){return null!==depthSensing.texture};this.getDepthSensingMesh=function(){return depthSensing.getMesh(cameraXR)};this.getCameraTexture=function(xrCamera){return cameraAccessTextures[xrCamera]};var onAnimationFrameCallback=null,animation=new WebGLAnimation;animation.setAnimationLoop(function(time,frame){pose=frame.getViewerPose(customReferenceSpace||referenceSpace);xrFrame=frame;if(null!==pose){var views=pose.views;null!==glBaseLayer&&(renderer.setRenderTargetFramebuffer(newRenderTarget,
glBaseLayer.framebuffer),renderer.setRenderTarget(newRenderTarget));var cameraXRNeedsUpdate=!1;views.length!==cameraXR.cameras.length&&(cameraXR.cameras.length=0,cameraXRNeedsUpdate=!0);for(var i=0;i<views.length;i++){var view=views[i];if(null!==glBaseLayer)var viewport=glBaseLayer.getViewport(view);else{var glSubImage=glBinding.getViewSubImage(glProjLayer,view);viewport=glSubImage.viewport;0===i&&(renderer.setRenderTargetTextures(newRenderTarget,glSubImage.colorTexture,glSubImage.depthStencilTexture),
renderer.setRenderTarget(newRenderTarget))}glSubImage=cameras[i];void 0===glSubImage&&(glSubImage=new PerspectiveCamera,glSubImage.layers.enable(i),glSubImage.viewport=new Vector4,cameras[i]=glSubImage);glSubImage.matrix.fromArray(view.transform.matrix);glSubImage.matrix.decompose(glSubImage.position,glSubImage.quaternion,glSubImage.scale);glSubImage.projectionMatrix.fromArray(view.projectionMatrix);glSubImage.projectionMatrixInverse.copy(glSubImage.projectionMatrix).invert();glSubImage.viewport.set(viewport.x,
viewport.y,viewport.width,viewport.height);0===i&&(cameraXR.matrix.copy(glSubImage.matrix),cameraXR.matrix.decompose(cameraXR.position,cameraXR.quaternion,cameraXR.scale));!0===cameraXRNeedsUpdate&&cameraXR.cameras.push(glSubImage)}(cameraXRNeedsUpdate=session.enabledFeatures)&&cameraXRNeedsUpdate.includes("depth-sensing")&&"gpu-optimized"==session.depthUsage&&supportsGlBinding&&(glBinding=scope.getBinding(),(i=glBinding.getDepthInformation(views[0]))&&i.isValid&&i.texture&&depthSensing.init(i,session.renderState));
if(cameraXRNeedsUpdate&&cameraXRNeedsUpdate.includes("camera-access")&&supportsGlBinding)for(renderer.state.unbindTexture(),glBinding=scope.getBinding(),cameraXRNeedsUpdate=0;cameraXRNeedsUpdate<views.length;cameraXRNeedsUpdate++)if(view=views[cameraXRNeedsUpdate].camera)i=cameraAccessTextures[view],i||(i=new ExternalTexture,cameraAccessTextures[view]=i),view=glBinding.getCameraImage(view),i.sourceTexture=view}for(views=0;views<controllers.length;views++)cameraXRNeedsUpdate=controllerInputSources[views],
i=controllers[views],null!==cameraXRNeedsUpdate&&void 0!==i&&i.update(cameraXRNeedsUpdate,frame,customReferenceSpace||referenceSpace);onAnimationFrameCallback&&onAnimationFrameCallback(time,frame);frame.detectedPlanes&&scope.dispatchEvent({type:"planesdetected",data:frame});xrFrame=null});this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback};this.dispose=function(){};return this};$jscomp.inherits(WebXRManager,EventDispatcher);var _e1=new Euler,_m1=new Matrix4,WebGLRenderer=function(parameters$jscomp$0){function initGLContext(){extensions=
new WebGLExtensions(_gl);extensions.init();utils=new WebGLUtils(_gl,extensions);capabilities=new WebGLCapabilities(_gl,extensions,parameters$jscomp$0,utils);state=new WebGLState(_gl,extensions);capabilities.reversedDepthBuffer&&reversedDepthBuffer&&state.buffers.depth.setReversed(!0);info=new WebGLInfo(_gl);properties=new WebGLProperties;textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);cubemaps=new WebGLCubeMaps(_this);cubeuvmaps=new WebGLCubeUVMaps(_this);attributes=
new WebGLAttributes(_gl);bindingStates=new WebGLBindingStates(_gl,attributes);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl,capabilities,textures);clipping=new WebGLClipping(properties);programCache=new WebGLPrograms(_this,cubemaps,cubeuvmaps,extensions,capabilities,bindingStates,clipping);materials$jscomp$0=new WebGLMaterials(_this,properties);renderLists=new WebGLRenderLists;renderStates=
new WebGLRenderStates(extensions);background=new WebGLBackground(_this,cubemaps,cubeuvmaps,state,objects,_alpha,premultipliedAlpha);shadowMap=new WebGLShadowMap(_this,objects,capabilities);uniformsGroups=new WebGLUniformsGroups(_gl,info,capabilities,state);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=
properties;_this.renderLists=renderLists;_this.shadowMap=shadowMap;_this.state=state;_this.info=info}function onContextLost(event){event.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");_isContextLost=!0}function onContextRestore(){console.log("THREE.WebGLRenderer: Context Restored.");_isContextLost=!1;var infoAutoReset=info.autoReset,shadowMapEnabled=shadowMap.enabled,shadowMapAutoUpdate=shadowMap.autoUpdate,shadowMapNeedsUpdate=shadowMap.needsUpdate,shadowMapType=shadowMap.type;
initGLContext();info.autoReset=infoAutoReset;shadowMap.enabled=shadowMapEnabled;shadowMap.autoUpdate=shadowMapAutoUpdate;shadowMap.needsUpdate=shadowMapNeedsUpdate;shadowMap.type=shadowMapType}function onContextCreationError(event){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",event.statusMessage)}function onMaterialDispose(event){event=event.target;event.removeEventListener("dispose",onMaterialDispose);releaseMaterialProgramReferences(event);properties.remove(event)}
function releaseMaterialProgramReferences(material){var programs=properties.get(material).programs;void 0!==programs&&(programs.forEach(function(program){programCache.releaseProgram(program)}),material.isShaderMaterial&&programCache.releaseShaderCache(material))}function prepareMaterial(material,scene,object){!0===material.transparent&&2===material.side&&!1===material.forceSinglePass?(material.side=1,material.needsUpdate=!0,getProgram(material,scene,object),material.side=0,material.needsUpdate=!0,
getProgram(material,scene,object),material.side=2):getProgram(material,scene,object)}function onXRSessionStart(){animation.stop()}function onXRSessionEnd(){animation.start()}function projectObject(object,camera,groupOrder,sortObjects){if(!1!==object.visible){if(object.layers.test(camera.layers))if(object.isGroup)groupOrder=object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(camera);else if(object.isLight)currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object);
else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){sortObjects&&_vector4.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);var geometry=objects.update(object),material=object.material;material.visible&&currentRenderList.push(object,geometry,material,groupOrder,_vector4.z,null)}}else if(object.isMesh||object.isLine||object.isPoints)if(!object.frustumCulled||_frustum.intersectsObject(object))if(geometry=objects.update(object),material=object.material,
sortObjects&&(void 0!==object.boundingSphere?(null===object.boundingSphere&&object.computeBoundingSphere(),_vector4.copy(object.boundingSphere.center)):(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_vector4.copy(geometry.boundingSphere.center)),_vector4.applyMatrix4(object.matrixWorld).applyMatrix4(_projScreenMatrix)),Array.isArray(material))for(var groups=geometry.groups,i=0,l=groups.length;i<l;i++){var group=groups[i],groupMaterial=material[group.materialIndex];groupMaterial&&
groupMaterial.visible&&currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector4.z,group)}else material.visible&&currentRenderList.push(object,geometry,material,groupOrder,_vector4.z,null);object=object.children;geometry=0;for(material=object.length;geometry<material;geometry++)projectObject(object[geometry],camera,groupOrder,sortObjects)}}function renderScene(currentRenderList,scene,camera,viewport){var opaqueObjects=currentRenderList.opaque,transmissiveObjects=currentRenderList.transmissive;
currentRenderList=currentRenderList.transparent;currentRenderState.setupLightsView(camera);!0===_clippingEnabled&&clipping.setGlobalState(_this.clippingPlanes,camera);viewport&&state.viewport(_currentViewport.copy(viewport));0<opaqueObjects.length&&renderObjects(opaqueObjects,scene,camera);0<transmissiveObjects.length&&renderObjects(transmissiveObjects,scene,camera);0<currentRenderList.length&&renderObjects(currentRenderList,scene,camera);state.buffers.depth.setTest(!0);state.buffers.depth.setMask(!0);
state.buffers.color.setMask(!0);state.setPolygonOffset(!1)}function renderTransmissionPass(opaqueObjects,transmissiveObjects,scene,camera){if(null===(!0===scene.isScene?scene.overrideMaterial:null)){void 0===currentRenderState.state.transmissionRenderTarget[camera.id]&&(currentRenderState.state.transmissionRenderTarget[camera.id]=new WebGLRenderTarget(1,1,{generateMipmaps:!0,type:extensions.has("EXT_color_buffer_half_float")||extensions.has("EXT_color_buffer_float")?1016:1009,minFilter:1008,samples:4,
stencilBuffer:stencil$jscomp$0,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ColorManagement.workingColorSpace}));var transmissionRenderTarget=currentRenderState.state.transmissionRenderTarget[camera.id],activeViewport=camera.viewport||_currentViewport;transmissionRenderTarget.setSize(activeViewport.z*_this.transmissionResolutionScale,activeViewport.w*_this.transmissionResolutionScale);activeViewport=_this.getRenderTarget();var currentActiveCubeFace=_this.getActiveCubeFace(),currentActiveMipmapLevel=
_this.getActiveMipmapLevel();_this.setRenderTarget(transmissionRenderTarget);_this.getClearColor(_currentClearColor);_currentClearAlpha=_this.getClearAlpha();1>_currentClearAlpha&&_this.setClearColor(16777215,.5);_this.clear();_renderBackground&&background.render(scene);var currentToneMapping=_this.toneMapping;_this.toneMapping=0;var currentCameraViewport=camera.viewport;void 0!==camera.viewport&&(camera.viewport=void 0);currentRenderState.setupLightsView(camera);!0===_clippingEnabled&&clipping.setGlobalState(_this.clippingPlanes,
camera);renderObjects(opaqueObjects,scene,camera);textures.updateMultisampleRenderTarget(transmissionRenderTarget);textures.updateRenderTargetMipmap(transmissionRenderTarget);if(!1===extensions.has("WEBGL_multisampled_render_to_texture")){var renderTargetNeedsUpdate=!1;opaqueObjects=0;for(var l=transmissiveObjects.length;opaqueObjects<l;opaqueObjects++){var renderItem=transmissiveObjects[opaqueObjects],object=renderItem.object,geometry=renderItem.geometry,material=renderItem.material;renderItem=renderItem.group;
2===material.side&&object.layers.test(camera.layers)&&(renderTargetNeedsUpdate=material.side,material.side=1,material.needsUpdate=!0,renderObject(object,scene,camera,geometry,material,renderItem),material.side=renderTargetNeedsUpdate,renderTargetNeedsUpdate=material.needsUpdate=!0)}!0===renderTargetNeedsUpdate&&(textures.updateMultisampleRenderTarget(transmissionRenderTarget),textures.updateRenderTargetMipmap(transmissionRenderTarget))}_this.setRenderTarget(activeViewport,currentActiveCubeFace,currentActiveMipmapLevel);
_this.setClearColor(_currentClearColor,_currentClearAlpha);void 0!==currentCameraViewport&&(camera.viewport=currentCameraViewport);_this.toneMapping=currentToneMapping}}function renderObjects(renderList,scene,camera){for(var overrideMaterial=!0===scene.isScene?scene.overrideMaterial:null,i=0,l=renderList.length;i<l;i++){var renderItem=renderList[i],object=renderItem.object,geometry=renderItem.geometry,group=renderItem.group;renderItem=renderItem.material;!0===renderItem.allowOverride&&null!==overrideMaterial&&
(renderItem=overrideMaterial);object.layers.test(camera.layers)&&renderObject(object,scene,camera,geometry,renderItem,group)}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);material.onBeforeRender(_this,scene,camera,geometry,object,group);!0===material.transparent&&2===
material.side&&!1===material.forceSinglePass?(material.side=1,material.needsUpdate=!0,_this.renderBufferDirect(camera,scene,geometry,material,object,group),material.side=0,material.needsUpdate=!0,_this.renderBufferDirect(camera,scene,geometry,material,object,group),material.side=2):_this.renderBufferDirect(camera,scene,geometry,material,object,group);object.onAfterRender(_this,scene,camera,geometry,material,group)}function getProgram(material,scene,object){!0!==scene.isScene&&(scene=_emptyScene);
var materialProperties=properties.get(material),lights=currentRenderState.state.lights,lightsStateVersion=lights.state.version;object=programCache.getParameters(material,lights.state,currentRenderState.state.shadowsArray,scene,object);var programCacheKey=programCache.getProgramCacheKey(object),programs=materialProperties.programs;materialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;materialProperties.envMap=(material.isMeshStandardMaterial?
cubeuvmaps:cubemaps).get(material.envMap||materialProperties.environment);materialProperties.envMapRotation=null!==materialProperties.environment&&null===material.envMap?scene.environmentRotation:material.envMapRotation;void 0===programs&&(material.addEventListener("dispose",onMaterialDispose),programs=new Map,materialProperties.programs=programs);scene=programs.get(programCacheKey);if(void 0!==scene){if(materialProperties.currentProgram===scene&&materialProperties.lightsStateVersion===lightsStateVersion)return updateCommonMaterialProperties(material,
object),scene}else object.uniforms=programCache.getUniforms(material),material.onBeforeCompile(object,_this),scene=programCache.acquireProgram(object,programCacheKey),programs.set(programCacheKey,scene),materialProperties.uniforms=object.uniforms;programCacheKey=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||!0===material.clipping)programCacheKey.clippingPlanes=clipping.uniform;updateCommonMaterialProperties(material,object);materialProperties.needsLights=
material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&!0===material.lights;materialProperties.lightsStateVersion=lightsStateVersion;materialProperties.needsLights&&(programCacheKey.ambientLightColor.value=lights.state.ambient,programCacheKey.lightProbe.value=lights.state.probe,programCacheKey.directionalLights.value=lights.state.directional,programCacheKey.directionalLightShadows.value=
lights.state.directionalShadow,programCacheKey.spotLights.value=lights.state.spot,programCacheKey.spotLightShadows.value=lights.state.spotShadow,programCacheKey.rectAreaLights.value=lights.state.rectArea,programCacheKey.ltc_1.value=lights.state.rectAreaLTC1,programCacheKey.ltc_2.value=lights.state.rectAreaLTC2,programCacheKey.pointLights.value=lights.state.point,programCacheKey.pointLightShadows.value=lights.state.pointShadow,programCacheKey.hemisphereLights.value=lights.state.hemi,programCacheKey.directionalShadowMap.value=
lights.state.directionalShadowMap,programCacheKey.directionalShadowMatrix.value=lights.state.directionalShadowMatrix,programCacheKey.spotShadowMap.value=lights.state.spotShadowMap,programCacheKey.spotLightMatrix.value=lights.state.spotLightMatrix,programCacheKey.spotLightMap.value=lights.state.spotLightMap,programCacheKey.pointShadowMap.value=lights.state.pointShadowMap,programCacheKey.pointShadowMatrix.value=lights.state.pointShadowMatrix);materialProperties.currentProgram=scene;materialProperties.uniformsList=
null;return scene}function getUniformList(materialProperties){if(null===materialProperties.uniformsList){var progUniforms=materialProperties.currentProgram.getUniforms();materialProperties.uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,materialProperties.uniforms)}return materialProperties.uniformsList}function updateCommonMaterialProperties(material,parameters){material=properties.get(material);material.outputColorSpace=parameters.outputColorSpace;material.batching=parameters.batching;
material.batchingColor=parameters.batchingColor;material.instancing=parameters.instancing;material.instancingColor=parameters.instancingColor;material.instancingMorph=parameters.instancingMorph;material.skinning=parameters.skinning;material.morphTargets=parameters.morphTargets;material.morphNormals=parameters.morphNormals;material.morphColors=parameters.morphColors;material.morphTargetsCount=parameters.morphTargetsCount;material.numClippingPlanes=parameters.numClippingPlanes;material.numIntersection=
parameters.numClipIntersection;material.vertexAlphas=parameters.vertexAlphas;material.vertexTangents=parameters.vertexTangents;material.toneMapping=parameters.toneMapping}var $jscomp$destructuring$var15=parameters$jscomp$0=void 0===parameters$jscomp$0?{}:parameters$jscomp$0,canvas=void 0===$jscomp$destructuring$var15.canvas?createCanvasElement():$jscomp$destructuring$var15.canvas,context=void 0===$jscomp$destructuring$var15.context?null:$jscomp$destructuring$var15.context,depth$jscomp$0=void 0===
$jscomp$destructuring$var15.depth?!0:$jscomp$destructuring$var15.depth,stencil$jscomp$0=void 0===$jscomp$destructuring$var15.stencil?!1:$jscomp$destructuring$var15.stencil,alpha=void 0===$jscomp$destructuring$var15.alpha?!1:$jscomp$destructuring$var15.alpha,antialias=void 0===$jscomp$destructuring$var15.antialias?!1:$jscomp$destructuring$var15.antialias,premultipliedAlpha=void 0===$jscomp$destructuring$var15.premultipliedAlpha?!0:$jscomp$destructuring$var15.premultipliedAlpha,preserveDrawingBuffer=
void 0===$jscomp$destructuring$var15.preserveDrawingBuffer?!1:$jscomp$destructuring$var15.preserveDrawingBuffer,powerPreference=void 0===$jscomp$destructuring$var15.powerPreference?"default":$jscomp$destructuring$var15.powerPreference,failIfMajorPerformanceCaveat=void 0===$jscomp$destructuring$var15.failIfMajorPerformanceCaveat?!1:$jscomp$destructuring$var15.failIfMajorPerformanceCaveat,reversedDepthBuffer=void 0===$jscomp$destructuring$var15.reversedDepthBuffer?!1:$jscomp$destructuring$var15.reversedDepthBuffer;
this.isWebGLRenderer=!0;if(null!==context){if("undefined"!==typeof WebGLRenderingContext&&context instanceof WebGLRenderingContext)throw Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");var _alpha=context.getContextAttributes().alpha}else _alpha=alpha;var uintClearColor=new Uint32Array(4),intClearColor=new Int32Array(4),currentRenderList=null,currentRenderState=null,renderListStack=[],renderStateStack=[];this.domElement=canvas;this.debug={checkShaderErrors:!0,onShaderError:null};
this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.toneMapping=0;this.transmissionResolutionScale=this.toneMappingExposure=1;var _this=this,_isContextLost=!1;this._outputColorSpace="srgb";var _currentActiveCubeFace=0,_currentActiveMipmapLevel=0,_currentRenderTarget=null,_currentMaterialId=-1,_currentCamera=null,_currentViewport=new Vector4,_currentScissor=new Vector4,_currentScissorTest=null,_currentClearColor=
new Color(0),_currentClearAlpha=0,_width=canvas.width,_height=canvas.height,_pixelRatio=1,_opaqueSort=null,_transparentSort=null,_viewport=new Vector4(0,0,_width,_height),_scissor=new Vector4(0,0,_width,_height),_scissorTest=!1,_frustum=new Frustum,_clippingEnabled=!1,_localClippingEnabled=!1,_projScreenMatrix=new Matrix4,_vector3=new Vector3,_vector4=new Vector4,_emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0},_renderBackground=!1,_gl=context;try{if($jscomp$destructuring$var15=
{alpha:!0,depth:depth$jscomp$0,stencil:stencil$jscomp$0,antialias:antialias,premultipliedAlpha:premultipliedAlpha,preserveDrawingBuffer:preserveDrawingBuffer,powerPreference:powerPreference,failIfMajorPerformanceCaveat:failIfMajorPerformanceCaveat},"setAttribute"in canvas&&canvas.setAttribute("data-engine","three.js r180"),canvas.addEventListener("webglcontextlost",onContextLost,!1),canvas.addEventListener("webglcontextrestored",onContextRestore,!1),canvas.addEventListener("webglcontextcreationerror",
onContextCreationError,!1),null===_gl&&(_gl=canvas.getContext("webgl2",$jscomp$destructuring$var15),null===_gl)){if(canvas.getContext("webgl2",void 0))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.");}}catch(error){throw console.error("THREE.WebGLRenderer: "+error.message),error;}var extensions,capabilities,state,info,properties,textures,cubemaps,cubeuvmaps,attributes,geometries,objects,programCache,materials$jscomp$0,renderLists,
renderStates,clipping,shadowMap,background,morphtargets,bufferRenderer,indexedBufferRenderer,utils,bindingStates,uniformsGroups;initGLContext();var xr=new WebXRManager(_this,_gl);this.xr=xr;this.getContext=function(){return _gl};this.getContextAttributes=function(){return _gl.getContextAttributes()};this.forceContextLoss=function(){var extension=extensions.get("WEBGL_lose_context");extension&&extension.loseContext()};this.forceContextRestore=function(){var extension=extensions.get("WEBGL_lose_context");
extension&&extension.restoreContext()};this.getPixelRatio=function(){return _pixelRatio};this.setPixelRatio=function(value){void 0!==value&&(_pixelRatio=value,this.setSize(_width,_height,!1))};this.getSize=function(target){return target.set(_width,_height)};this.setSize=function(width,height,updateStyle){updateStyle=void 0===updateStyle?!0:updateStyle;xr.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_width=width,_height=height,canvas.width=Math.floor(width*
_pixelRatio),canvas.height=Math.floor(height*_pixelRatio),!0===updateStyle&&(canvas.style.width=width+"px",canvas.style.height=height+"px"),this.setViewport(0,0,width,height))};this.getDrawingBufferSize=function(target){return target.set(_width*_pixelRatio,_height*_pixelRatio).floor()};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;canvas.width=Math.floor(width*pixelRatio);canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,
0,width,height)};this.getCurrentViewport=function(target){return target.copy(_currentViewport)};this.getViewport=function(target){return target.copy(_viewport)};this.setViewport=function(x,y,width,height){x.isVector4?_viewport.set(x.x,x.y,x.z,x.w):_viewport.set(x,y,width,height);state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).round())};this.getScissor=function(target){return target.copy(_scissor)};this.setScissor=function(x,y,width,height){x.isVector4?_scissor.set(x.x,
x.y,x.z,x.w):_scissor.set(x,y,width,height);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).round())};this.getScissorTest=function(){return _scissorTest};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean)};this.setOpaqueSort=function(method){_opaqueSort=method};this.setTransparentSort=function(method){_transparentSort=method};this.getClearColor=function(target){return target.copy(background.getClearColor())};this.setClearColor=function(){background.setClearColor.apply(background,
arguments)};this.getClearAlpha=function(){return background.getClearAlpha()};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments)};this.clear=function(color,depth,stencil){depth=void 0===depth?!0:depth;stencil=void 0===stencil?!0:stencil;var bits=0;if(void 0===color||color)if(color=!1,null!==_currentRenderTarget&&(color=_currentRenderTarget.texture.format,color=1033===color||1031===color||1029===color),color){color=_currentRenderTarget.texture.type;color=1009===color||
1014===color||1012===color||1020===color||1017===color||1018===color;var clearColor=background.getClearColor(),a=background.getClearAlpha(),r=clearColor.r,g=clearColor.g;clearColor=clearColor.b;color?(uintClearColor[0]=r,uintClearColor[1]=g,uintClearColor[2]=clearColor,uintClearColor[3]=a,_gl.clearBufferuiv(_gl.COLOR,0,uintClearColor)):(intClearColor[0]=r,intClearColor[1]=g,intClearColor[2]=clearColor,intClearColor[3]=a,_gl.clearBufferiv(_gl.COLOR,0,intClearColor))}else bits|=_gl.COLOR_BUFFER_BIT;
depth&&(bits|=_gl.DEPTH_BUFFER_BIT);stencil&&(bits|=_gl.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295));_gl.clear(bits)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.dispose=function(){canvas.removeEventListener("webglcontextlost",onContextLost,!1);canvas.removeEventListener("webglcontextrestored",onContextRestore,!1);canvas.removeEventListener("webglcontextcreationerror",
onContextCreationError,!1);background.dispose();renderLists.dispose();renderStates.dispose();properties.dispose();cubemaps.dispose();cubeuvmaps.dispose();objects.dispose();bindingStates.dispose();uniformsGroups.dispose();programCache.dispose();xr.dispose();xr.removeEventListener("sessionstart",onXRSessionStart);xr.removeEventListener("sessionend",onXRSessionEnd);animation.stop()};this.renderBufferDirect=function(camera,scene$jscomp$0,geometry,material,object,group){null===scene$jscomp$0&&(scene$jscomp$0=
_emptyScene);var frontFaceCW=object.isMesh&&0>object.matrixWorld.determinant(),scene=scene$jscomp$0;!0!==scene.isScene&&(scene=_emptyScene);textures.resetTextureUnits();scene$jscomp$0=scene.fog;var environment=material.isMeshStandardMaterial?scene.environment:null,colorSpace=null===_currentRenderTarget?_this.outputColorSpace:!0===_currentRenderTarget.isXRRenderTarget?_currentRenderTarget.texture.colorSpace:"srgb-linear";environment=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||
environment);var vertexAlphas=!0===material.vertexColors&&!!geometry.attributes.color&&4===geometry.attributes.color.itemSize,vertexTangents=!!geometry.attributes.tangent&&(!!material.normalMap||0<material.anisotropy),morphTargets=!!geometry.morphAttributes.position,morphNormals=!!geometry.morphAttributes.normal,morphColors=!!geometry.morphAttributes.color,toneMapping=0;!material.toneMapped||null!==_currentRenderTarget&&!0!==_currentRenderTarget.isXRRenderTarget||(toneMapping=_this.toneMapping);var morphAttribute=
geometry.morphAttributes.position||geometry.morphAttributes.normal||geometry.morphAttributes.color,morphTargetsCount=void 0!==morphAttribute?morphAttribute.length:0;morphAttribute=properties.get(material);var lights=currentRenderState.state.lights;!0!==_clippingEnabled||!0!==_localClippingEnabled&&camera===_currentCamera||clipping.setState(material,camera,camera===_currentCamera&&material.id===_currentMaterialId);var needsProgramChange=!1;material.version===morphAttribute.__version?morphAttribute.needsLights&&
morphAttribute.lightsStateVersion!==lights.state.version?needsProgramChange=!0:morphAttribute.outputColorSpace!==colorSpace?needsProgramChange=!0:object.isBatchedMesh&&!1===morphAttribute.batching?needsProgramChange=!0:object.isBatchedMesh||!0!==morphAttribute.batching?object.isBatchedMesh&&!0===morphAttribute.batchingColor&&null===object.colorTexture?needsProgramChange=!0:object.isBatchedMesh&&!1===morphAttribute.batchingColor&&null!==object.colorTexture?needsProgramChange=!0:object.isInstancedMesh&&
!1===morphAttribute.instancing?needsProgramChange=!0:object.isInstancedMesh||!0!==morphAttribute.instancing?object.isSkinnedMesh&&!1===morphAttribute.skinning?needsProgramChange=!0:object.isSkinnedMesh||!0!==morphAttribute.skinning?object.isInstancedMesh&&!0===morphAttribute.instancingColor&&null===object.instanceColor?needsProgramChange=!0:object.isInstancedMesh&&!1===morphAttribute.instancingColor&&null!==object.instanceColor?needsProgramChange=!0:object.isInstancedMesh&&!0===morphAttribute.instancingMorph&&
null===object.morphTexture?needsProgramChange=!0:object.isInstancedMesh&&!1===morphAttribute.instancingMorph&&null!==object.morphTexture?needsProgramChange=!0:morphAttribute.envMap!==environment?needsProgramChange=!0:!0===material.fog&&morphAttribute.fog!==scene$jscomp$0?needsProgramChange=!0:void 0===morphAttribute.numClippingPlanes||morphAttribute.numClippingPlanes===clipping.numPlanes&&morphAttribute.numIntersection===clipping.numIntersection?morphAttribute.vertexAlphas!==vertexAlphas?needsProgramChange=
!0:morphAttribute.vertexTangents!==vertexTangents?needsProgramChange=!0:morphAttribute.morphTargets!==morphTargets?needsProgramChange=!0:morphAttribute.morphNormals!==morphNormals?needsProgramChange=!0:morphAttribute.morphColors!==morphColors?needsProgramChange=!0:morphAttribute.toneMapping!==toneMapping?needsProgramChange=!0:morphAttribute.morphTargetsCount!==morphTargetsCount&&(needsProgramChange=!0):needsProgramChange=!0:needsProgramChange=!0:needsProgramChange=!0:needsProgramChange=!0:(needsProgramChange=
!0,morphAttribute.__version=material.version);colorSpace=morphAttribute.currentProgram;!0===needsProgramChange&&(colorSpace=getProgram(material,scene,object));morphNormals=morphTargets=morphColors=!1;vertexAlphas=colorSpace.getUniforms();vertexTangents=morphAttribute.uniforms;state.useProgram(colorSpace.program)&&(morphNormals=morphTargets=morphColors=!0);material.id!==_currentMaterialId&&(_currentMaterialId=material.id,morphTargets=!0);if(morphColors||_currentCamera!==camera)state.buffers.depth.getReversed()&&
!0!==camera.reversedDepth&&(camera._reversedDepth=!0,camera.updateProjectionMatrix()),vertexAlphas.setValue(_gl,"projectionMatrix",camera.projectionMatrix),vertexAlphas.setValue(_gl,"viewMatrix",camera.matrixWorldInverse),morphColors=vertexAlphas.map.cameraPosition,void 0!==morphColors&&morphColors.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld)),capabilities.logarithmicDepthBuffer&&vertexAlphas.setValue(_gl,"logDepthBufFC",2/(Math.log(camera.far+1)/Math.LN2)),(material.isMeshPhongMaterial||
material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial)&&vertexAlphas.setValue(_gl,"isOrthographic",!0===camera.isOrthographicCamera),_currentCamera!==camera&&(_currentCamera=camera,morphNormals=morphTargets=!0);object.isSkinnedMesh&&(vertexAlphas.setOptional(_gl,object,"bindMatrix"),vertexAlphas.setOptional(_gl,object,"bindMatrixInverse"),morphColors=object.skeleton)&&(null===morphColors.boneTexture&&morphColors.computeBoneTexture(),
vertexAlphas.setValue(_gl,"boneTexture",morphColors.boneTexture,textures));object.isBatchedMesh&&(vertexAlphas.setOptional(_gl,object,"batchingTexture"),vertexAlphas.setValue(_gl,"batchingTexture",object._matricesTexture,textures),vertexAlphas.setOptional(_gl,object,"batchingIdTexture"),vertexAlphas.setValue(_gl,"batchingIdTexture",object._indirectTexture,textures),vertexAlphas.setOptional(_gl,object,"batchingColorTexture"),null!==object._colorsTexture&&vertexAlphas.setValue(_gl,"batchingColorTexture",
object._colorsTexture,textures));morphColors=geometry.morphAttributes;void 0===morphColors.position&&void 0===morphColors.normal&&void 0===morphColors.color||morphtargets.update(object,geometry,colorSpace);if(morphTargets||morphAttribute.receiveShadow!==object.receiveShadow)morphAttribute.receiveShadow=object.receiveShadow,vertexAlphas.setValue(_gl,"receiveShadow",object.receiveShadow);material.isMeshGouraudMaterial&&null!==material.envMap&&(vertexTangents.envMap.value=environment,vertexTangents.flipEnvMap.value=
environment.isCubeTexture&&!1===environment.isRenderTargetTexture?-1:1);material.isMeshStandardMaterial&&null===material.envMap&&null!==scene.environment&&(vertexTangents.envMapIntensity.value=scene.environmentIntensity);morphTargets&&(vertexAlphas.setValue(_gl,"toneMappingExposure",_this.toneMappingExposure),morphAttribute.needsLights&&(scene=morphNormals,vertexTangents.ambientLightColor.needsUpdate=scene,vertexTangents.lightProbe.needsUpdate=scene,vertexTangents.directionalLights.needsUpdate=scene,
vertexTangents.directionalLightShadows.needsUpdate=scene,vertexTangents.pointLights.needsUpdate=scene,vertexTangents.pointLightShadows.needsUpdate=scene,vertexTangents.spotLights.needsUpdate=scene,vertexTangents.spotLightShadows.needsUpdate=scene,vertexTangents.rectAreaLights.needsUpdate=scene,vertexTangents.hemisphereLights.needsUpdate=scene),scene$jscomp$0&&!0===material.fog&&materials$jscomp$0.refreshFogUniforms(vertexTangents,scene$jscomp$0),materials$jscomp$0.refreshMaterialUniforms(vertexTangents,
material,_pixelRatio,_height,currentRenderState.state.transmissionRenderTarget[camera.id]),WebGLUniforms.upload(_gl,getUniformList(morphAttribute),vertexTangents,textures));material.isShaderMaterial&&!0===material.uniformsNeedUpdate&&(WebGLUniforms.upload(_gl,getUniformList(morphAttribute),vertexTangents,textures),material.uniformsNeedUpdate=!1);material.isSpriteMaterial&&vertexAlphas.setValue(_gl,"center",object.center);vertexAlphas.setValue(_gl,"modelViewMatrix",object.modelViewMatrix);vertexAlphas.setValue(_gl,
"normalMatrix",object.normalMatrix);vertexAlphas.setValue(_gl,"modelMatrix",object.matrixWorld);if(material.isShaderMaterial||material.isRawShaderMaterial)for(camera=material.uniformsGroups,scene$jscomp$0=0,scene=camera.length;scene$jscomp$0<scene;scene$jscomp$0++)environment=camera[scene$jscomp$0],uniformsGroups.update(environment,colorSpace),uniformsGroups.bind(environment,colorSpace);scene$jscomp$0=colorSpace;state.setMaterial(material,frontFaceCW);frontFaceCW=geometry.index;scene=1;if(!0===material.wireframe){frontFaceCW=
geometries.getWireframeAttribute(geometry);if(void 0===frontFaceCW)return;scene=2}morphAttribute=geometry.drawRange;environment=geometry.attributes.position;camera=morphAttribute.start*scene;morphAttribute=(morphAttribute.start+morphAttribute.count)*scene;null!==group&&(camera=Math.max(camera,group.start*scene),morphAttribute=Math.min(morphAttribute,(group.start+group.count)*scene));null!==frontFaceCW?(camera=Math.max(camera,0),morphAttribute=Math.min(morphAttribute,frontFaceCW.count)):void 0!==environment&&
null!==environment&&(camera=Math.max(camera,0),morphAttribute=Math.min(morphAttribute,environment.count));scene=morphAttribute-camera;if(!(0>scene||Infinity===scene))if(bindingStates.setup(object,material,scene$jscomp$0,geometry,frontFaceCW),group=bufferRenderer,null!==frontFaceCW&&(scene$jscomp$0=attributes.get(frontFaceCW),group=indexedBufferRenderer,group.setIndex(scene$jscomp$0)),object.isMesh?!0===material.wireframe?(state.setLineWidth(material.wireframeLinewidth*(null===_currentRenderTarget?
_pixelRatio:1)),group.setMode(_gl.LINES)):group.setMode(_gl.TRIANGLES):object.isLine?(scene$jscomp$0=material.linewidth,void 0===scene$jscomp$0&&(scene$jscomp$0=1),state.setLineWidth(scene$jscomp$0*(null===_currentRenderTarget?_pixelRatio:1)),object.isLineSegments?group.setMode(_gl.LINES):object.isLineLoop?group.setMode(_gl.LINE_LOOP):group.setMode(_gl.LINE_STRIP)):object.isPoints?group.setMode(_gl.POINTS):object.isSprite&&group.setMode(_gl.TRIANGLES),object.isBatchedMesh)if(null!==object._multiDrawInstances)warnOnce("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),
group.renderMultiDrawInstances(object._multiDrawStarts,object._multiDrawCounts,object._multiDrawCount,object._multiDrawInstances);else if(extensions.get("WEBGL_multi_draw"))group.renderMultiDraw(object._multiDrawStarts,object._multiDrawCounts,object._multiDrawCount);else for(geometry=object._multiDrawStarts,camera=object._multiDrawCounts,object=object._multiDrawCount,frontFaceCW=frontFaceCW?attributes.get(frontFaceCW).bytesPerElement:1,material=properties.get(material).currentProgram.getUniforms(),
scene$jscomp$0=0;scene$jscomp$0<object;scene$jscomp$0++)material.setValue(_gl,"_gl_DrawID",scene$jscomp$0),group.render(geometry[scene$jscomp$0]/frontFaceCW,camera[scene$jscomp$0]);else object.isInstancedMesh?group.renderInstances(camera,scene,object.count):geometry.isInstancedBufferGeometry?group.renderInstances(camera,scene,Math.min(geometry.instanceCount,void 0!==geometry._maxInstanceCount?geometry._maxInstanceCount:Infinity)):group.render(camera,scene)};this.compile=function(scene,camera,targetScene){targetScene=
void 0===targetScene?null:targetScene;null===targetScene&&(targetScene=scene);currentRenderState=renderStates.get(targetScene);currentRenderState.init(camera);renderStateStack.push(currentRenderState);targetScene.traverseVisible(function(object){object.isLight&&object.layers.test(camera.layers)&&(currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object))});scene!==targetScene&&scene.traverseVisible(function(object){object.isLight&&object.layers.test(camera.layers)&&
(currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object))});currentRenderState.setupLights();var materials=new Set;scene.traverse(function(object){if(object.isMesh||object.isPoints||object.isLine||object.isSprite){var material=object.material;if(material)if(Array.isArray(material))for(var i=0;i<material.length;i++){var material2=material[i];prepareMaterial(material2,targetScene,object);materials.add(material2)}else prepareMaterial(material,targetScene,object),
materials.add(material)}});currentRenderState=renderStateStack.pop();return materials};this.compileAsync=function(scene,camera,targetScene){var materials=this.compile(scene,camera,void 0===targetScene?null:targetScene);return new Promise(function(resolve){function checkMaterialsReady(){materials.forEach(function(material){properties.get(material).currentProgram.isReady()&&materials.delete(material)});0===materials.size?resolve(scene):setTimeout(checkMaterialsReady,10)}null!==extensions.get("KHR_parallel_shader_compile")?
checkMaterialsReady():setTimeout(checkMaterialsReady,10)})};var onAnimationFrameCallback=null,animation=new WebGLAnimation;animation.setAnimationLoop(function(time){onAnimationFrameCallback&&onAnimationFrameCallback(time)});"undefined"!==typeof self&&animation.setContext(self);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);null===callback?animation.stop():animation.start()};xr.addEventListener("sessionstart",onXRSessionStart);xr.addEventListener("sessionend",
onXRSessionEnd);this.render=function(scene,camera){if(void 0!==camera&&!0!==camera.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!0!==_isContextLost){!0===scene.matrixWorldAutoUpdate&&scene.updateMatrixWorld();null===camera.parent&&!0===camera.matrixWorldAutoUpdate&&camera.updateMatrixWorld();!0===xr.enabled&&!0===xr.isPresenting&&(!0===xr.cameraAutoUpdate&&xr.updateCamera(camera),camera=xr.getCamera());if(!0===scene.isScene)scene.onBeforeRender(_this,
scene,camera,_currentRenderTarget);currentRenderState=renderStates.get(scene,renderStateStack.length);currentRenderState.init(camera);renderStateStack.push(currentRenderState);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix,2E3,camera.reversedDepth);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled);currentRenderList=renderLists.get(scene,
renderListStack.length);currentRenderList.init();renderListStack.push(currentRenderList);if(!0===xr.enabled&&!0===xr.isPresenting){var depthSensingMesh=_this.xr.getDepthSensingMesh();null!==depthSensingMesh&&projectObject(depthSensingMesh,camera,-Infinity,_this.sortObjects)}projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();!0===_this.sortObjects&&currentRenderList.sort(_opaqueSort,_transparentSort);(_renderBackground=!1===xr.enabled||!1===xr.isPresenting||!1===xr.hasDepthSensing())&&
background.addToRenderList(currentRenderList,scene);this.info.render.frame++;!0===_clippingEnabled&&clipping.beginShadows();shadowMap.render(currentRenderState.state.shadowsArray,scene,camera);!0===_clippingEnabled&&clipping.endShadows();!0===this.info.autoReset&&this.info.reset();var opaqueObjects=currentRenderList.opaque,transmissiveObjects=currentRenderList.transmissive;currentRenderState.setupLights();if(camera.isArrayCamera){depthSensingMesh=camera.cameras;if(0<transmissiveObjects.length)for(var i=
0,l=depthSensingMesh.length;i<l;i++)renderTransmissionPass(opaqueObjects,transmissiveObjects,scene,depthSensingMesh[i]);_renderBackground&&background.render(scene);opaqueObjects=0;for(transmissiveObjects=depthSensingMesh.length;opaqueObjects<transmissiveObjects;opaqueObjects++)i=depthSensingMesh[opaqueObjects],renderScene(currentRenderList,scene,i,i.viewport)}else 0<transmissiveObjects.length&&renderTransmissionPass(opaqueObjects,transmissiveObjects,scene,camera),_renderBackground&&background.render(scene),
renderScene(currentRenderList,scene,camera);null!==_currentRenderTarget&&0===_currentActiveMipmapLevel&&(textures.updateMultisampleRenderTarget(_currentRenderTarget),textures.updateRenderTargetMipmap(_currentRenderTarget));if(!0===scene.isScene)scene.onAfterRender(_this,scene,camera);bindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;renderStateStack.pop();0<renderStateStack.length?(currentRenderState=renderStateStack[renderStateStack.length-1],!0===_clippingEnabled&&clipping.setGlobalState(_this.clippingPlanes,
currentRenderState.state.camera)):currentRenderState=null;renderListStack.pop();currentRenderList=0<renderListStack.length?renderListStack[renderListStack.length-1]:null}};this.getActiveCubeFace=function(){return _currentActiveCubeFace};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel};this.getRenderTarget=function(){return _currentRenderTarget};this.setRenderTargetTextures=function(renderTarget,colorTexture,depthTexture){var renderTargetProperties=properties.get(renderTarget);
renderTargetProperties.__autoAllocateDepthBuffer=!1===renderTarget.resolveDepthBuffer;!1===renderTargetProperties.__autoAllocateDepthBuffer&&(renderTargetProperties.__useRenderToTexture=!1);properties.get(renderTarget.texture).__webglTexture=colorTexture;properties.get(renderTarget.depthTexture).__webglTexture=renderTargetProperties.__autoAllocateDepthBuffer?void 0:depthTexture;renderTargetProperties.__hasExternalTextures=!0};this.setRenderTargetFramebuffer=function(renderTarget,defaultFramebuffer){renderTarget=
properties.get(renderTarget);renderTarget.__webglFramebuffer=defaultFramebuffer;renderTarget.__useDefaultFramebuffer=void 0===defaultFramebuffer};var _scratchFrameBuffer=_gl.createFramebuffer();this.setRenderTarget=function(renderTarget,activeCubeFace,activeMipmapLevel){activeCubeFace=void 0===activeCubeFace?0:activeCubeFace;activeMipmapLevel=void 0===activeMipmapLevel?0:activeMipmapLevel;_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;
var useDefaultFramebuffer=!0,framebuffer=null,isCube=!1,isRenderTarget3D=!1;if(renderTarget){framebuffer=properties.get(renderTarget);if(void 0!==framebuffer.__useDefaultFramebuffer)state.bindFramebuffer(_gl.FRAMEBUFFER,null),useDefaultFramebuffer=!1;else if(void 0===framebuffer.__webglFramebuffer)textures.setupRenderTarget(renderTarget);else if(framebuffer.__hasExternalTextures)textures.rebindTextures(renderTarget,properties.get(renderTarget.texture).__webglTexture,properties.get(renderTarget.depthTexture).__webglTexture);
else if(renderTarget.depthBuffer){var depthTexture=renderTarget.depthTexture;if(framebuffer.__boundDepthTexture!==depthTexture){if(null!==depthTexture&&properties.has(depthTexture)&&(renderTarget.width!==depthTexture.image.width||renderTarget.height!==depthTexture.image.height))throw Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");textures.setupDepthRenderbuffer(renderTarget)}}framebuffer=renderTarget.texture;if(framebuffer.isData3DTexture||framebuffer.isDataArrayTexture||
framebuffer.isCompressedArrayTexture)isRenderTarget3D=!0;framebuffer=properties.get(renderTarget).__webglFramebuffer;renderTarget.isWebGLCubeRenderTarget?(framebuffer=Array.isArray(framebuffer[activeCubeFace])?framebuffer[activeCubeFace][activeMipmapLevel]:framebuffer[activeCubeFace],isCube=!0):framebuffer=0<renderTarget.samples&&!1===textures.useMultisampledRTT(renderTarget)?properties.get(renderTarget).__webglMultisampledFramebuffer:Array.isArray(framebuffer)?framebuffer[activeMipmapLevel]:framebuffer;
_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest}else _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor(),_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor(),_currentScissorTest=_scissorTest;0!==activeMipmapLevel&&(framebuffer=_scratchFrameBuffer);state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer)&&useDefaultFramebuffer&&state.drawBuffers(renderTarget,framebuffer);state.viewport(_currentViewport);
state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube)renderTarget=properties.get(renderTarget.texture),_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+activeCubeFace,renderTarget.__webglTexture,activeMipmapLevel);else if(isRenderTarget3D)for(useDefaultFramebuffer=0;useDefaultFramebuffer<renderTarget.textures.length;useDefaultFramebuffer++)isCube=properties.get(renderTarget.textures[useDefaultFramebuffer]),_gl.framebufferTextureLayer(_gl.FRAMEBUFFER,
_gl.COLOR_ATTACHMENT0+useDefaultFramebuffer,isCube.__webglTexture,activeMipmapLevel,activeCubeFace);else null!==renderTarget&&0!==activeMipmapLevel&&(renderTarget=properties.get(renderTarget.texture),_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D,renderTarget.__webglTexture,activeMipmapLevel));_currentMaterialId=-1};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex,textureIndex){textureIndex=void 0===textureIndex?0:textureIndex;
if(renderTarget&&renderTarget.isWebGLRenderTarget){var framebuffer=properties.get(renderTarget).__webglFramebuffer;renderTarget.isWebGLCubeRenderTarget&&void 0!==activeCubeFaceIndex&&(framebuffer=framebuffer[activeCubeFaceIndex]);if(framebuffer){state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);try{var texture=renderTarget.textures[textureIndex],textureFormat=texture.format,textureType=texture.type;capabilities.textureFormatReadable(textureFormat)?capabilities.textureTypeReadable(textureType)?0<=
x&&x<=renderTarget.width-width&&0<=y&&y<=renderTarget.height-height&&(1<renderTarget.textures.length&&_gl.readBuffer(_gl.COLOR_ATTACHMENT0+textureIndex),_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer)):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.")}finally{renderTarget=
null!==_currentRenderTarget?properties.get(_currentRenderTarget).__webglFramebuffer:null,state.bindFramebuffer(_gl.FRAMEBUFFER,renderTarget)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")};this.readRenderTargetPixelsAsync=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex,textureIndex){textureIndex=void 0===textureIndex?0:textureIndex;var framebuffer,texture,textureFormat,textureType,glBuffer,currFramebuffer,sync;return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context){if(1==
$jscomp$generator$context.nextAddress){if(!renderTarget||!renderTarget.isWebGLRenderTarget)throw Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");framebuffer=properties.get(renderTarget).__webglFramebuffer;renderTarget.isWebGLCubeRenderTarget&&void 0!==activeCubeFaceIndex&&(framebuffer=framebuffer[activeCubeFaceIndex]);if(!framebuffer)return $jscomp$generator$context.jumpTo(0);if(!(0<=x&&x<=renderTarget.width-width&&0<=y&&y<=renderTarget.height-height))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.");
state.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);texture=renderTarget.textures[textureIndex];textureFormat=texture.format;textureType=texture.type;if(!capabilities.textureFormatReadable(textureFormat))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!capabilities.textureTypeReadable(textureType))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");
glBuffer=_gl.createBuffer();_gl.bindBuffer(_gl.PIXEL_PACK_BUFFER,glBuffer);_gl.bufferData(_gl.PIXEL_PACK_BUFFER,buffer.byteLength,_gl.STREAM_READ);1<renderTarget.textures.length&&_gl.readBuffer(_gl.COLOR_ATTACHMENT0+textureIndex);_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),0);currFramebuffer=null!==_currentRenderTarget?properties.get(_currentRenderTarget).__webglFramebuffer:null;state.bindFramebuffer(_gl.FRAMEBUFFER,currFramebuffer);sync=_gl.fenceSync(_gl.SYNC_GPU_COMMANDS_COMPLETE,
0);_gl.flush();return $jscomp$generator$context.yield(probeAsync(_gl,sync,4),4)}_gl.bindBuffer(_gl.PIXEL_PACK_BUFFER,glBuffer);_gl.getBufferSubData(_gl.PIXEL_PACK_BUFFER,0,buffer);_gl.deleteBuffer(glBuffer);_gl.deleteSync(sync);return $jscomp$generator$context.return(buffer)})};this.copyFramebufferToTexture=function(texture,position,level){position=void 0===position?null:position;level=void 0===level?0:level;var levelScale=Math.pow(2,-level),width=Math.floor(texture.image.width*levelScale);levelScale=
Math.floor(texture.image.height*levelScale);var x=null!==position?position.x:0;position=null!==position?position.y:0;textures.setTexture2D(texture,0);_gl.copyTexSubImage2D(_gl.TEXTURE_2D,level,0,0,x,position,width,levelScale);state.unbindTexture()};var _srcFramebuffer=_gl.createFramebuffer(),_dstFramebuffer=_gl.createFramebuffer();this.copyTextureToTexture=function(srcTexture,dstTexture,srcRegion,dstPosition,srcLevel,dstLevel){srcRegion=void 0===srcRegion?null:srcRegion;dstPosition=void 0===dstPosition?
null:dstPosition;srcLevel=void 0===srcLevel?0:srcLevel;dstLevel=void 0===dstLevel?null:dstLevel;null===dstLevel&&(0!==srcLevel?(warnOnce("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),dstLevel=srcLevel,srcLevel=0):dstLevel=0);var image=srcTexture.isCompressedTexture?srcTexture.mipmaps[dstLevel]:srcTexture.image;if(null!==srcRegion){var width=srcRegion.max.x-srcRegion.min.x;var height=srcRegion.max.y-srcRegion.min.y;var depth=srcRegion.isBox3?
srcRegion.max.z-srcRegion.min.z:1;var minX=srcRegion.min.x;var minY=srcRegion.min.y;srcRegion=srcRegion.isBox3?srcRegion.min.z:0}else depth=Math.pow(2,-srcLevel),width=Math.floor(image.width*depth),height=Math.floor(image.height*depth),depth=srcTexture.isDataArrayTexture?image.depth:srcTexture.isData3DTexture?Math.floor(image.depth*depth):1,srcRegion=minY=minX=0;if(null!==dstPosition){var dstX=dstPosition.x;var dstY=dstPosition.y;dstPosition=dstPosition.z}else dstPosition=dstY=dstX=0;var glFormat=
utils.convert(dstTexture.format),glType=utils.convert(dstTexture.type);if(dstTexture.isData3DTexture){textures.setTexture3D(dstTexture,0);var glTarget=_gl.TEXTURE_3D}else dstTexture.isDataArrayTexture||dstTexture.isCompressedArrayTexture?(textures.setTexture2DArray(dstTexture,0),glTarget=_gl.TEXTURE_2D_ARRAY):(textures.setTexture2D(dstTexture,0),glTarget=_gl.TEXTURE_2D);_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,dstTexture.flipY);_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,dstTexture.premultiplyAlpha);
_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,dstTexture.unpackAlignment);var currentUnpackRowLen=_gl.getParameter(_gl.UNPACK_ROW_LENGTH),currentUnpackImageHeight=_gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT),currentUnpackSkipPixels=_gl.getParameter(_gl.UNPACK_SKIP_PIXELS),currentUnpackSkipRows=_gl.getParameter(_gl.UNPACK_SKIP_ROWS),currentUnpackSkipImages=_gl.getParameter(_gl.UNPACK_SKIP_IMAGES);_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH,image.width);_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT,image.height);_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS,
minX);_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS,minY);_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES,srcRegion);var isSrc3D=srcTexture.isDataArrayTexture||srcTexture.isData3DTexture,isDst3D=dstTexture.isDataArrayTexture||dstTexture.isData3DTexture;if(srcTexture.isDepthTexture){isDst3D=properties.get(srcTexture);image=properties.get(dstTexture);isDst3D=properties.get(isDst3D.__renderTarget);image=properties.get(image.__renderTarget);state.bindFramebuffer(_gl.READ_FRAMEBUFFER,isDst3D.__webglFramebuffer);state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,
image.__webglFramebuffer);for(image=0;image<depth;image++)isSrc3D&&(_gl.framebufferTextureLayer(_gl.READ_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,properties.get(srcTexture).__webglTexture,srcLevel,srcRegion+image),_gl.framebufferTextureLayer(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,properties.get(dstTexture).__webglTexture,dstLevel,dstPosition+image)),_gl.blitFramebuffer(minX,minY,width,height,dstX,dstY,width,height,_gl.DEPTH_BUFFER_BIT,_gl.NEAREST);state.bindFramebuffer(_gl.READ_FRAMEBUFFER,null);state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,
null)}else if(0!==srcLevel||srcTexture.isRenderTargetTexture||properties.has(srcTexture)){srcTexture=properties.get(srcTexture);image=properties.get(dstTexture);state.bindFramebuffer(_gl.READ_FRAMEBUFFER,_srcFramebuffer);state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,_dstFramebuffer);for(glFormat=0;glFormat<depth;glFormat++)isSrc3D?_gl.framebufferTextureLayer(_gl.READ_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,srcTexture.__webglTexture,srcLevel,srcRegion+glFormat):_gl.framebufferTexture2D(_gl.READ_FRAMEBUFFER,
_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D,srcTexture.__webglTexture,srcLevel),isDst3D?_gl.framebufferTextureLayer(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,image.__webglTexture,dstLevel,dstPosition+glFormat):_gl.framebufferTexture2D(_gl.DRAW_FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,_gl.TEXTURE_2D,image.__webglTexture,dstLevel),0!==srcLevel?_gl.blitFramebuffer(minX,minY,width,height,dstX,dstY,width,height,_gl.COLOR_BUFFER_BIT,_gl.NEAREST):isDst3D?_gl.copyTexSubImage3D(glTarget,dstLevel,dstX,dstY,dstPosition+
glFormat,minX,minY,width,height):_gl.copyTexSubImage2D(glTarget,dstLevel,dstX,dstY,minX,minY,width,height);state.bindFramebuffer(_gl.READ_FRAMEBUFFER,null);state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER,null)}else isDst3D?srcTexture.isDataTexture||srcTexture.isData3DTexture?_gl.texSubImage3D(glTarget,dstLevel,dstX,dstY,dstPosition,width,height,depth,glFormat,glType,image.data):dstTexture.isCompressedArrayTexture?_gl.compressedTexSubImage3D(glTarget,dstLevel,dstX,dstY,dstPosition,width,height,depth,glFormat,
image.data):_gl.texSubImage3D(glTarget,dstLevel,dstX,dstY,dstPosition,width,height,depth,glFormat,glType,image):srcTexture.isDataTexture?_gl.texSubImage2D(_gl.TEXTURE_2D,dstLevel,dstX,dstY,width,height,glFormat,glType,image.data):srcTexture.isCompressedTexture?_gl.compressedTexSubImage2D(_gl.TEXTURE_2D,dstLevel,dstX,dstY,image.width,image.height,glFormat,image.data):_gl.texSubImage2D(_gl.TEXTURE_2D,dstLevel,dstX,dstY,width,height,glFormat,glType,image);_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH,currentUnpackRowLen);
_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT,currentUnpackImageHeight);_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS,currentUnpackSkipPixels);_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS,currentUnpackSkipRows);_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES,currentUnpackSkipImages);0===dstLevel&&dstTexture.generateMipmaps&&_gl.generateMipmap(glTarget);state.unbindTexture()};this.initRenderTarget=function(target){void 0===properties.get(target).__webglFramebuffer&&textures.setupRenderTarget(target)};this.initTexture=function(texture){texture.isCubeTexture?
textures.setTextureCube(texture,0):texture.isData3DTexture?textures.setTexture3D(texture,0):texture.isDataArrayTexture||texture.isCompressedArrayTexture?textures.setTexture2DArray(texture,0):textures.setTexture2D(texture,0);state.unbindTexture()};this.resetState=function(){_currentActiveMipmapLevel=_currentActiveCubeFace=0;_currentRenderTarget=null;state.reset();bindingStates.reset()};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))};
$jscomp.global.Object.defineProperties(WebGLRenderer.prototype,{coordinateSystem:{configurable:!0,enumerable:!0,get:function(){return 2E3}},outputColorSpace:{configurable:!0,enumerable:!0,get:function(){return this._outputColorSpace},set:function(colorSpace){this._outputColorSpace=colorSpace;var gl=this.getContext();gl.drawingBufferColorSpace=ColorManagement._getDrawingBufferColorSpace(colorSpace);gl.unpackColorSpace=ColorManagement._getUnpackColorSpace()}}});exports.ACESFilmicToneMapping=4;exports.AddEquation=
100;exports.AddOperation=2;exports.AdditiveAnimationBlendMode=2501;exports.AdditiveBlending=2;exports.AgXToneMapping=6;exports.AlphaFormat=1021;exports.AlwaysCompare=519;exports.AlwaysDepth=1;exports.AlwaysStencilFunc=519;exports.AmbientLight=AmbientLight;exports.AnimationAction=AnimationAction;exports.AnimationClip=AnimationClip;exports.AnimationLoader=AnimationLoader;exports.AnimationMixer=AnimationMixer;exports.AnimationObjectGroup=AnimationObjectGroup;exports.AnimationUtils=AnimationUtils;exports.ArcCurve=
ArcCurve;exports.ArrayCamera=ArrayCamera;exports.ArrowHelper=ArrowHelper;exports.AttachedBindMode="attached";exports.Audio=Audio;exports.AudioAnalyser=AudioAnalyser;exports.AudioContext=AudioContext;exports.AudioListener=AudioListener;exports.AudioLoader=AudioLoader;exports.AxesHelper=AxesHelper;exports.BackSide=1;exports.BasicDepthPacking=3200;exports.BasicShadowMap=0;exports.BatchedMesh=BatchedMesh;exports.Bone=Bone;exports.BooleanKeyframeTrack=BooleanKeyframeTrack;exports.Box2=Box2;exports.Box3=
Box3;exports.Box3Helper=Box3Helper;exports.BoxGeometry=BoxGeometry;exports.BoxHelper=BoxHelper;exports.BufferAttribute=BufferAttribute;exports.BufferGeometry=BufferGeometry;exports.BufferGeometryLoader=BufferGeometryLoader;exports.ByteType=1010;exports.Cache=Cache;exports.Camera=Camera;exports.CameraHelper=CameraHelper;exports.CanvasTexture=CanvasTexture;exports.CapsuleGeometry=CapsuleGeometry;exports.CatmullRomCurve3=CatmullRomCurve3;exports.CineonToneMapping=3;exports.CircleGeometry=CircleGeometry;
exports.ClampToEdgeWrapping=1001;exports.Clock=Clock;exports.Color=Color;exports.ColorKeyframeTrack=ColorKeyframeTrack;exports.ColorManagement=ColorManagement;exports.CompressedArrayTexture=CompressedArrayTexture;exports.CompressedCubeTexture=CompressedCubeTexture;exports.CompressedTexture=CompressedTexture;exports.CompressedTextureLoader=CompressedTextureLoader;exports.ConeGeometry=ConeGeometry;exports.ConstantAlphaFactor=213;exports.ConstantColorFactor=211;exports.Controls=Controls;exports.CubeCamera=
CubeCamera;exports.CubeReflectionMapping=301;exports.CubeRefractionMapping=302;exports.CubeTexture=CubeTexture;exports.CubeTextureLoader=CubeTextureLoader;exports.CubeUVReflectionMapping=306;exports.CubicBezierCurve=CubicBezierCurve;exports.CubicBezierCurve3=CubicBezierCurve3;exports.CubicInterpolant=CubicInterpolant;exports.CullFaceBack=1;exports.CullFaceFront=2;exports.CullFaceFrontBack=3;exports.CullFaceNone=0;exports.Curve=Curve;exports.CurvePath=CurvePath;exports.CustomBlending=5;exports.CustomToneMapping=
5;exports.CylinderGeometry=CylinderGeometry;exports.Cylindrical=Cylindrical;exports.Data3DTexture=Data3DTexture;exports.DataArrayTexture=DataArrayTexture;exports.DataTexture=DataTexture;exports.DataTextureLoader=DataTextureLoader;exports.DataUtils=DataUtils;exports.DecrementStencilOp=7683;exports.DecrementWrapStencilOp=34056;exports.DefaultLoadingManager=DefaultLoadingManager;exports.DepthFormat=1026;exports.DepthStencilFormat=1027;exports.DepthTexture=DepthTexture;exports.DetachedBindMode="detached";
exports.DirectionalLight=DirectionalLight;exports.DirectionalLightHelper=DirectionalLightHelper;exports.DiscreteInterpolant=DiscreteInterpolant;exports.DodecahedronGeometry=DodecahedronGeometry;exports.DoubleSide=2;exports.DstAlphaFactor=206;exports.DstColorFactor=208;exports.DynamicCopyUsage=35050;exports.DynamicDrawUsage=35048;exports.DynamicReadUsage=35049;exports.EdgesGeometry=EdgesGeometry;exports.EllipseCurve=EllipseCurve;exports.EqualCompare=514;exports.EqualDepth=4;exports.EqualStencilFunc=
514;exports.EquirectangularReflectionMapping=303;exports.EquirectangularRefractionMapping=304;exports.Euler=Euler;exports.EventDispatcher=EventDispatcher;exports.ExternalTexture=ExternalTexture;exports.ExtrudeGeometry=ExtrudeGeometry;exports.FileLoader=FileLoader;exports.Float16BufferAttribute=Float16BufferAttribute;exports.Float32BufferAttribute=Float32BufferAttribute;exports.FloatType=1015;exports.Fog=Fog;exports.FogExp2=FogExp2;exports.FramebufferTexture=FramebufferTexture;exports.FrontSide=0;
exports.Frustum=Frustum;exports.FrustumArray=FrustumArray;exports.GLBufferAttribute=GLBufferAttribute;exports.GLSL1="100";exports.GLSL3="300 es";exports.GreaterCompare=516;exports.GreaterDepth=6;exports.GreaterEqualCompare=518;exports.GreaterEqualDepth=5;exports.GreaterEqualStencilFunc=518;exports.GreaterStencilFunc=516;exports.GridHelper=GridHelper;exports.Group=Group;exports.HalfFloatType=1016;exports.HemisphereLight=HemisphereLight;exports.HemisphereLightHelper=HemisphereLightHelper;exports.IcosahedronGeometry=
IcosahedronGeometry;exports.ImageBitmapLoader=ImageBitmapLoader;exports.ImageLoader=ImageLoader;exports.ImageUtils=ImageUtils;exports.IncrementStencilOp=7682;exports.IncrementWrapStencilOp=34055;exports.InstancedBufferAttribute=InstancedBufferAttribute;exports.InstancedBufferGeometry=InstancedBufferGeometry;exports.InstancedInterleavedBuffer=InstancedInterleavedBuffer;exports.InstancedMesh=InstancedMesh;exports.Int16BufferAttribute=Int16BufferAttribute;exports.Int32BufferAttribute=Int32BufferAttribute;
exports.Int8BufferAttribute=Int8BufferAttribute;exports.IntType=1013;exports.InterleavedBuffer=InterleavedBuffer;exports.InterleavedBufferAttribute=InterleavedBufferAttribute;exports.Interpolant=Interpolant;exports.InterpolateDiscrete=2300;exports.InterpolateLinear=2301;exports.InterpolateSmooth=2302;exports.InterpolationSamplingMode={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};exports.InterpolationSamplingType={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"};
exports.InvertStencilOp=5386;exports.KeepStencilOp=7680;exports.KeyframeTrack=KeyframeTrack;exports.LOD=LOD;exports.LatheGeometry=LatheGeometry;exports.Layers=Layers;exports.LessCompare=513;exports.LessDepth=2;exports.LessEqualCompare=515;exports.LessEqualDepth=3;exports.LessEqualStencilFunc=515;exports.LessStencilFunc=513;exports.Light=Light;exports.LightProbe=LightProbe;exports.Line=Line;exports.Line3=Line3;exports.LineBasicMaterial=LineBasicMaterial;exports.LineCurve=LineCurve;exports.LineCurve3=
LineCurve3;exports.LineDashedMaterial=LineDashedMaterial;exports.LineLoop=LineLoop;exports.LineSegments=LineSegments;exports.LinearFilter=1006;exports.LinearInterpolant=LinearInterpolant;exports.LinearMipMapLinearFilter=1008;exports.LinearMipMapNearestFilter=1007;exports.LinearMipmapLinearFilter=1008;exports.LinearMipmapNearestFilter=1007;exports.LinearSRGBColorSpace="srgb-linear";exports.LinearToneMapping=1;exports.LinearTransfer="linear";exports.Loader=Loader;exports.LoaderUtils=LoaderUtils;exports.LoadingManager=
LoadingManager;exports.LoopOnce=2200;exports.LoopPingPong=2202;exports.LoopRepeat=2201;exports.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};exports.Material=Material;exports.MaterialLoader=MaterialLoader;exports.MathUtils=MathUtils;exports.Matrix2=Matrix2;exports.Matrix3=Matrix3;exports.Matrix4=Matrix4;exports.MaxEquation=104;exports.Mesh=Mesh;exports.MeshBasicMaterial=MeshBasicMaterial;exports.MeshDepthMaterial=MeshDepthMaterial;exports.MeshDistanceMaterial=MeshDistanceMaterial;exports.MeshLambertMaterial=
MeshLambertMaterial;exports.MeshMatcapMaterial=MeshMatcapMaterial;exports.MeshNormalMaterial=MeshNormalMaterial;exports.MeshPhongMaterial=MeshPhongMaterial;exports.MeshPhysicalMaterial=MeshPhysicalMaterial;exports.MeshStandardMaterial=MeshStandardMaterial;exports.MeshToonMaterial=MeshToonMaterial;exports.MinEquation=103;exports.MirroredRepeatWrapping=1002;exports.MixOperation=1;exports.MultiplyBlending=4;exports.MultiplyOperation=0;exports.NearestFilter=1003;exports.NearestMipMapLinearFilter=1005;
exports.NearestMipMapNearestFilter=1004;exports.NearestMipmapLinearFilter=1005;exports.NearestMipmapNearestFilter=1004;exports.NeutralToneMapping=7;exports.NeverCompare=512;exports.NeverDepth=0;exports.NeverStencilFunc=512;exports.NoBlending=0;exports.NoColorSpace="";exports.NoToneMapping=0;exports.NormalAnimationBlendMode=2500;exports.NormalBlending=1;exports.NotEqualCompare=517;exports.NotEqualDepth=7;exports.NotEqualStencilFunc=517;exports.NumberKeyframeTrack=NumberKeyframeTrack;exports.Object3D=
Object3D;exports.ObjectLoader=ObjectLoader;exports.ObjectSpaceNormalMap=1;exports.OctahedronGeometry=OctahedronGeometry;exports.OneFactor=201;exports.OneMinusConstantAlphaFactor=214;exports.OneMinusConstantColorFactor=212;exports.OneMinusDstAlphaFactor=207;exports.OneMinusDstColorFactor=209;exports.OneMinusSrcAlphaFactor=205;exports.OneMinusSrcColorFactor=203;exports.OrthographicCamera=OrthographicCamera;exports.PCFShadowMap=1;exports.PCFSoftShadowMap=2;exports.PMREMGenerator=PMREMGenerator;exports.Path=
Path;exports.PerspectiveCamera=PerspectiveCamera;exports.Plane=Plane;exports.PlaneGeometry=PlaneGeometry;exports.PlaneHelper=PlaneHelper;exports.PointLight=PointLight;exports.PointLightHelper=PointLightHelper;exports.Points=Points;exports.PointsMaterial=PointsMaterial;exports.PolarGridHelper=PolarGridHelper;exports.PolyhedronGeometry=PolyhedronGeometry;exports.PositionalAudio=PositionalAudio;exports.PropertyBinding=PropertyBinding;exports.PropertyMixer=PropertyMixer;exports.QuadraticBezierCurve=QuadraticBezierCurve;
exports.QuadraticBezierCurve3=QuadraticBezierCurve3;exports.Quaternion=Quaternion;exports.QuaternionKeyframeTrack=QuaternionKeyframeTrack;exports.QuaternionLinearInterpolant=QuaternionLinearInterpolant;exports.RED_GREEN_RGTC2_Format=36285;exports.RED_RGTC1_Format=36283;exports.REVISION="180";exports.RGBADepthPacking=3201;exports.RGBAFormat=1023;exports.RGBAIntegerFormat=1033;exports.RGBA_ASTC_10x10_Format=37819;exports.RGBA_ASTC_10x5_Format=37816;exports.RGBA_ASTC_10x6_Format=37817;exports.RGBA_ASTC_10x8_Format=
37818;exports.RGBA_ASTC_12x10_Format=37820;exports.RGBA_ASTC_12x12_Format=37821;exports.RGBA_ASTC_4x4_Format=37808;exports.RGBA_ASTC_5x4_Format=37809;exports.RGBA_ASTC_5x5_Format=37810;exports.RGBA_ASTC_6x5_Format=37811;exports.RGBA_ASTC_6x6_Format=37812;exports.RGBA_ASTC_8x5_Format=37813;exports.RGBA_ASTC_8x6_Format=37814;exports.RGBA_ASTC_8x8_Format=37815;exports.RGBA_BPTC_Format=36492;exports.RGBA_ETC2_EAC_Format=37496;exports.RGBA_PVRTC_2BPPV1_Format=35843;exports.RGBA_PVRTC_4BPPV1_Format=35842;
exports.RGBA_S3TC_DXT1_Format=33777;exports.RGBA_S3TC_DXT3_Format=33778;exports.RGBA_S3TC_DXT5_Format=33779;exports.RGBDepthPacking=3202;exports.RGBFormat=1022;exports.RGBIntegerFormat=1032;exports.RGB_BPTC_SIGNED_Format=36494;exports.RGB_BPTC_UNSIGNED_Format=36495;exports.RGB_ETC1_Format=36196;exports.RGB_ETC2_Format=37492;exports.RGB_PVRTC_2BPPV1_Format=35841;exports.RGB_PVRTC_4BPPV1_Format=35840;exports.RGB_S3TC_DXT1_Format=33776;exports.RGDepthPacking=3203;exports.RGFormat=1030;exports.RGIntegerFormat=
1031;exports.RawShaderMaterial=RawShaderMaterial;exports.Ray=Ray;exports.Raycaster=Raycaster;exports.RectAreaLight=RectAreaLight;exports.RedFormat=1028;exports.RedIntegerFormat=1029;exports.ReinhardToneMapping=2;exports.RenderTarget=RenderTarget;exports.RenderTarget3D=RenderTarget3D;exports.RepeatWrapping=1E3;exports.ReplaceStencilOp=7681;exports.ReverseSubtractEquation=102;exports.RingGeometry=RingGeometry;exports.SIGNED_RED_GREEN_RGTC2_Format=36286;exports.SIGNED_RED_RGTC1_Format=36284;exports.SRGBColorSpace=
"srgb";exports.SRGBTransfer="srgb";exports.Scene=Scene;exports.ShaderChunk=ShaderChunk;exports.ShaderLib=ShaderLib;exports.ShaderMaterial=ShaderMaterial;exports.ShadowMaterial=ShadowMaterial;exports.Shape=Shape;exports.ShapeGeometry=ShapeGeometry;exports.ShapePath=ShapePath;exports.ShapeUtils=ShapeUtils;exports.ShortType=1011;exports.Skeleton=Skeleton;exports.SkeletonHelper=SkeletonHelper;exports.SkinnedMesh=SkinnedMesh;exports.Source=Source;exports.Sphere=Sphere;exports.SphereGeometry=SphereGeometry;
exports.Spherical=Spherical;exports.SphericalHarmonics3=SphericalHarmonics3;exports.SplineCurve=SplineCurve;exports.SpotLight=SpotLight;exports.SpotLightHelper=SpotLightHelper;exports.Sprite=Sprite;exports.SpriteMaterial=SpriteMaterial;exports.SrcAlphaFactor=204;exports.SrcAlphaSaturateFactor=210;exports.SrcColorFactor=202;exports.StaticCopyUsage=35046;exports.StaticDrawUsage=35044;exports.StaticReadUsage=35045;exports.StereoCamera=StereoCamera;exports.StreamCopyUsage=35042;exports.StreamDrawUsage=
35040;exports.StreamReadUsage=35041;exports.StringKeyframeTrack=StringKeyframeTrack;exports.SubtractEquation=101;exports.SubtractiveBlending=3;exports.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};exports.TangentSpaceNormalMap=0;exports.TetrahedronGeometry=TetrahedronGeometry;exports.Texture=Texture;exports.TextureLoader=TextureLoader;exports.TextureUtils=TextureUtils;exports.Timer=Timer;exports.TimestampQuery={COMPUTE:"compute",RENDER:"render"};exports.TorusGeometry=TorusGeometry;exports.TorusKnotGeometry=
TorusKnotGeometry;exports.Triangle=Triangle;exports.TriangleFanDrawMode=2;exports.TriangleStripDrawMode=1;exports.TrianglesDrawMode=0;exports.TubeGeometry=TubeGeometry;exports.UVMapping=300;exports.Uint16BufferAttribute=Uint16BufferAttribute;exports.Uint32BufferAttribute=Uint32BufferAttribute;exports.Uint8BufferAttribute=Uint8BufferAttribute;exports.Uint8ClampedBufferAttribute=Uint8ClampedBufferAttribute;exports.Uniform=Uniform;exports.UniformsGroup=UniformsGroup;exports.UniformsLib=UniformsLib;exports.UniformsUtils=
UniformsUtils;exports.UnsignedByteType=1009;exports.UnsignedInt101111Type=35899;exports.UnsignedInt248Type=1020;exports.UnsignedInt5999Type=35902;exports.UnsignedIntType=1014;exports.UnsignedShort4444Type=1017;exports.UnsignedShort5551Type=1018;exports.UnsignedShortType=1012;exports.VSMShadowMap=3;exports.Vector2=Vector2;exports.Vector3=Vector3;exports.Vector4=Vector4;exports.VectorKeyframeTrack=VectorKeyframeTrack;exports.VideoFrameTexture=VideoFrameTexture;exports.VideoTexture=VideoTexture;exports.WebGL3DRenderTarget=
WebGL3DRenderTarget;exports.WebGLArrayRenderTarget=WebGLArrayRenderTarget;exports.WebGLCoordinateSystem=2E3;exports.WebGLCubeRenderTarget=WebGLCubeRenderTarget;exports.WebGLRenderTarget=WebGLRenderTarget;exports.WebGLRenderer=WebGLRenderer;exports.WebGLUtils=WebGLUtils;exports.WebGPUCoordinateSystem=2001;exports.WebXRController=WebXRController;exports.WireframeGeometry=WireframeGeometry;exports.WrapAroundEnding=2402;exports.ZeroCurvatureEnding=2400;exports.ZeroFactor=200;exports.ZeroSlopeEnding=2401;
exports.ZeroStencilOp=0;exports.createCanvasElement=createCanvasElement}
//# sourceMappingURL=module$node_modules$three$build$three_cjs.js.map
