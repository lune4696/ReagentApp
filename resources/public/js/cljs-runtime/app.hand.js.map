{"version":3,"sources":["app/hand.cljs"],"mappings":"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","names":["p__45980","map__45981","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.hand/hand-joint-three","radius","color","xyz","cljs.core.partition_all","cljs.core.map","p__45983","vec__45984","cljs.core.nth","x","y","z","mesh","app.three/sphere-three","cljs.core/vec","app.hand/hand-line-three","spheres","bones","p__45987","vec__45988","i","j","p1","p2","app.three/line-three","app.hand/hand-bones","app.hand/get-bone-pos0","xyzs","cljs.core/first","app.hand/get-bone-pos1","cljs.core/second","app.hand/hand-landmark","p__45998","map__45999","app.hand/hand-skeleton","width","height","ratio","stream","with-let46001","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__34574__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init46002","cljs.core/not","res46003","destroy__34573__auto__","reagent.ratom/reactive?","node","cljs.core.atom","scene","js/module$node_modules$three$build$three_cjs.Scene","camera","js/module$node_modules$three$build$three_cjs.PerspectiveCamera","renderer","js/module$node_modules$three$build$three_cjs.WebGLRenderer","light","js/module$node_modules$three$build$three_cjs.DirectionalLight","ambient","js/module$node_modules$three$build$three_cjs.AmbientLight","hand-joints","cljs.core/deref","cljs.core.range","cljs.core.mapv","cljs.core.partial","cljs.core/*","hand-lines","f","el","cljs.core/reset!","reagent.core/after-render","or__4126__auto__","controls","js/module$node_modules$three$examples$jsm$controls$OrbitControls.OrbitControls","update-ctrl","app.three/resize-view","js/window.addEventListener","app.three/init-view","seq__46004","cljs.core/seq","chunk__46005","count__46006","i__46007","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/next","a","seq__46008","chunk__46009","count__46010","i__46011","js/requestAnimationFrame","tick","cljs.core.partition","x__4217__auto__","y__4218__auto__","seq__46044","chunk__46045","count__46046","i__46047","vec__46054","vec__46057","sphere","cljs.core.map_indexed","cljs.core/vector","app.three/repos","seq__46060","chunk__46061","count__46062","i__46063","vec__46070","vec__46073","line","pos","p1__45991#","p2__45992#","p3__45993#","p1__45994#","p2__45995#","p3__45996#","p1__45997#","cljs.core.swap_BANG_","idx","cljs.core/mod","knob","cljs.core.assoc","js/window.removeEventListener"],"sourcesContent":["(ns app.hand\n  (:require [reagent.core :as r]\n            [\"three\" :as Three]\n            [\"three/examples/jsm/controls/OrbitControls.js\" :refer [OrbitControls]]\n            ;; [\"three/addons/controls/OrbitControls.js\" :refer [OrbitControls]]\n            [app.three :as three]))\n\n(defn hand-joint-three [{:keys [radius color xyz]}]\n  (->> xyz\n       (partition-all 3)\n       (map (fn [[x y z]]\n              (let [mesh (three/sphere-three {:radius radius :color color})]\n                (.set (.-position mesh) x y z)\n                mesh)))\n       vec))\n\n(defn hand-line-three [spheres bones color]\n  (map (fn [[i j]]\n         (let [p1 (.-position (nth spheres i))\n               p2 (.-position (nth spheres j))]\n           (three/line-three p1 p2 {:color color})))\n       bones))\n\n(def hand-bones [[0 1]\n                 [0 5]\n                 [0 17]\n                 [1 2]\n                 [2 3]\n                 [3 4]\n                 [5 6]\n                 [5 9]\n                 [6 7]\n                 [7 8]\n                 [9 10]\n                 [9 13]\n                 [10 11]\n                 [11 12]\n                 [13 14]\n                 [13 17]\n                 [14 15]\n                 [15 16]\n                 [17 18]\n                 [18 19]\n                 [19 20]])\n\n(defn get-bone-pos0 [xyzs i] (nth xyzs (first (nth hand-bones i))))\n(defn get-bone-pos1 [xyzs i] (nth xyzs (second (nth hand-bones i))))\n\n(def hand-landmark\n  ^{:doc \"https://ai.google.dev/edge/mediapipe/solutions/vision/hand_landmarker?hl=ja\"}\n  {:indices {0 \"WRIST\"\n             1 \"THUMB_CMC\"\n             2 \"THUMB_MCP\"\n             3 \"THUMB_IP\"\n             4 \"THUMB_TIP\"\n             5 \"INDEX_FINGER_MCP\"\n             6 \"INDEX_FINGER_PIP\"\n             7 \"INDEX_FINGER_DIP\"\n             8 \"INDEX_FINGER_TIP\"\n             9 \"MIDDLE_FINGER_MCP\"\n             10 \"MIDDLE_FINGER_PIP\"\n             11 \"MIDDLE_FINGER_DIP\"\n             12 \"MIDDLE_FINGER_TIP\"\n             13 \"RING_FINGER_MCP\"\n             14 \"RING_FINGER_PIP\"\n             15 \"RING_FINGER_DIP\"\n             16 \"RING_FINGER_TIP\"\n             17 \"PINKY_MCP\"\n             18 \"PINKY_PIP\"\n             19 \"PINKY_DIP\"\n             20 \"PINKY_TIP\"}})\n\n(defn hand-skeleton [{:keys [width height ratio stream]\n                      :or {ratio (/ 9 16)}}]\n\n  (r/with-let\n      [node (atom nil)\n       scene (Three/Scene.)\n       camera (Three/PerspectiveCamera. 90 1 0.1 1000)\n       renderer (Three/WebGLRenderer. #js {:alpha true})\n       light (Three/DirectionalLight. 0xFFFFFF 2)\n       ambient (Three/AmbientLight. 0xFFFFFF 0.5)\n       hand-joints (hand-joint-three {:radius 0.025 :color 0x00FF00\n                                      :xyz (if (:frames @stream)\n                                             (first (:frames @stream))\n                                             (->> (range 63) (mapv (partial * 0))))})\n       hand-lines (hand-line-three hand-joints hand-bones 0xFF0000)\n       f (fn [el]\n           (when el (reset! node el))\n           (r/after-render\n            (fn []\n              (when @node\n                (when-not (.contains @node (.-domElement renderer))\n                  (.appendChild @node (.-domElement renderer)))\n                (let [width (or width (.-clientWidth @node))\n                      height (or height (* width ratio))\n                      controls (OrbitControls. camera (.-domElement renderer))\n                      update-ctrl (partial three/resize-view node width height ratio renderer camera)]\n                  (update-ctrl)\n                  (js/window.addEventListener \"resize\" update-ctrl)\n                  (three/init-view scene renderer camera light ambient)\n                  (.set camera.position 0 0 1)\n                  (doseq [a hand-joints] (.add scene a))\n                  (doseq [a hand-lines] (.add scene a))\n                  (.render renderer scene camera)\n                  (letfn\n                      [(tick []\n                         (js/requestAnimationFrame tick)\n                         (when (some? (:frames @stream))\n                           ;; \u5ea7\u6a19\u66f4\u65b0\u51e6\u7406\n                           (let [xyzs\n                                 (partition 3 (nth (:frames @stream)\n                                                   (min (dec (:length @stream))\n                                                        (int (:idx @stream)))))]\n                             (doseq [[i sphere] (map-indexed vector hand-joints)]\n                               (three/repos sphere (nth xyzs i)))\n                             (doseq [[i line] (map-indexed vector hand-lines)]\n                               (let [pos (.. line -geometry -attributes -position)] \n                                 (apply #(.setXYZ pos 0 %1 %2 %3) (get-bone-pos0 xyzs i))\n                                 (apply #(.setXYZ pos 1 %1 %2 %3) (get-bone-pos1 xyzs i))\n                                 (set! pos.needsUpdate true))))\n\n                           ;; \u30eb\u30fc\u30d7\u51e6\u7406\n                           (when (not (:pause @stream))\n                             (swap! stream #(let [idx (mod (+ (:idx %) 0.1) (:length %))\n                                                  knob (* idx (/ 1 (:length %)) 1000)]\n                                              (assoc % :idx idx :knob knob)))))\n                         (.update controls)\n                         (.render renderer scene camera))]\n                    (tick)))))))]\n      [:div {:ref f}]\n      (finally (when @node\n                 (.removeChild @node (.-domElement renderer))\n                 (js/window.removeEventListener \"resize\")))))\n"]}