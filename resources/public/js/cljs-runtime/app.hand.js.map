{"version":3,"sources":["app/hand.cljs"],"mappings":"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","names":["p__36920","map__36921","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.hand/hand-joint-three","radius","color","xyz","cljs.core.partition_all","cljs.core.map","p__36923","vec__36924","cljs.core.nth","x","y","z","mesh","app.three/sphere-three","cljs.core/vec","app.hand/hand-bone-three","spheres","bones","p__36927","vec__36928","i","j","p1","p2","app.three/line-three","app.hand/hand-bones","app.hand/hand-landmark","p__36931","map__36932","app.hand/hand-skeleton","width","height","ratio","hand-pos","opt","with-let36934","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__35403__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init36935","cljs.core/not","res36936","destroy__35402__auto__","reagent.ratom/reactive?","node","cljs.core.atom","scene","js/module$node_modules$three$build$three_cjs.Scene","camera","js/module$node_modules$three$build$three_cjs.PerspectiveCamera","renderer","js/module$node_modules$three$build$three_cjs.WebGLRenderer","light","js/module$node_modules$three$build$three_cjs.DirectionalLight","ambient","js/module$node_modules$three$build$three_cjs.AmbientLight","hand-joints","cljs.core/deref","cljs.core/first","cljs.core.range","cljs.core.mapv","cljs.core.partial","cljs.core/*","hand-lines","f","el","cljs.core/reset!","reagent.core/after-render","or__4126__auto__","controls","js/module$node_modules$three$examples$jsm$controls$OrbitControls.OrbitControls","update","app.three/resize-view","js/window.addEventListener","app.three/init-view","seq__36937","cljs.core/seq","chunk__36938","count__36939","i__36940","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/next","a","seq__36941","chunk__36942","count__36943","i__36944","js/requestAnimationFrame","tick","js/window.removeEventListener","cljs.core/update"],"sourcesContent":["(ns app.hand\n  (:require [reagent.core :as r]\n            [\"three\" :as Three]\n            [\"three/examples/jsm/controls/OrbitControls.js\" :refer [OrbitControls]]\n            ;; [\"three/addons/controls/OrbitControls.js\" :refer [OrbitControls]]\n            [app.three :as three]))\n\n(defn hand-joint-three [{:keys [radius color xyz]}]\n  (->> xyz\n       (partition-all 3)\n       (map (fn [[x y z]]\n              (let [mesh (three/sphere-three {:radius radius :color color})]\n                (.set (.-position mesh) x y z)\n                mesh)))\n       vec))\n\n(defn hand-bone-three [spheres bones color]\n  (map (fn [[i j]]\n         (let [p1 (.-position (nth spheres i))\n               p2 (.-position (nth spheres j))]\n           (three/line-three p1 p2 {:color color})))\n       bones))\n\n(def hand-bones [[0 1]\n                 [0 5]\n                 [0 17]\n                 [1 2]\n                 [2 3]\n                 [3 4]\n                 [5 6]\n                 [5 9]\n                 [6 7]\n                 [7 8]\n                 [9 10]\n                 [9 13]\n                 [10 11]\n                 [11 12]\n                 [13 14]\n                 [13 17]\n                 [14 15]\n                 [15 16]\n                 [17 18]\n                 [18 19]\n                 [19 20]])\n\n(def hand-landmark\n  ^{:doc \"https://ai.google.dev/edge/mediapipe/solutions/vision/hand_landmarker?hl=ja\"}\n  {:indices {0 \"WRIST\"\n             1 \"THUMB_CMC\"\n             2 \"THUMB_MCP\"\n             3 \"THUMB_IP\"\n             4 \"THUMB_TIP\"\n             5 \"INDEX_FINGER_MCP\"\n             6 \"INDEX_FINGER_PIP\"\n             7 \"INDEX_FINGER_DIP\"\n             8 \"INDEX_FINGER_TIP\"\n             9 \"MIDDLE_FINGER_MCP\"\n             10 \"MIDDLE_FINGER_PIP\"\n             11 \"MIDDLE_FINGER_DIP\"\n             12 \"MIDDLE_FINGER_TIP\"\n             13 \"RING_FINGER_MCP\"\n             14 \"RING_FINGER_PIP\"\n             15 \"RING_FINGER_DIP\"\n             16 \"RING_FINGER_TIP\"\n             17 \"PINKY_MCP\"\n             18 \"PINKY_PIP\"\n             19 \"PINKY_DIP\"\n             20 \"PINKY_TIP\"}})\n\n(defn hand-skeleton [{:keys [width height ratio hand-pos]\n                    :or {ratio (/ 9 16)}\n                    :as opt}]\n\n  (r/with-let\n      [node (atom nil)\n       scene (Three/Scene.)\n       camera (Three/PerspectiveCamera. 90 1 0.1 1000)\n       renderer (Three/WebGLRenderer. #js {:alpha true})\n       light (Three/DirectionalLight. 0xFFFFFF 2)\n       ambient (Three/AmbientLight. 0xFFFFFF 0.5)\n       hand-joints (hand-joint-three {:radius 0.025 :color 0x00FF00\n                                      :xyz (if @hand-pos\n                                             (first @hand-pos)\n                                             (->> (range 63) (mapv (partial * 0))))})\n       hand-lines (hand-bone-three hand-joints hand-bones 0xFF0000)\n       f (fn [el]\n           (when el (reset! node el))\n           (r/after-render\n            #(when @node\n               (when-not (.contains @node (.-domElement renderer))\n                 (.appendChild @node (.-domElement renderer)))\n               (let [width (or width (.-clientWidth @node))\n                     height (or height (* width ratio))\n                     controls (OrbitControls. camera (.-domElement renderer))\n                     update (partial three/resize-view node width height ratio renderer camera)]\n                 (update)\n                 (js/window.addEventListener \"resize\" update)\n                 (three/init-view scene renderer camera light ambient)\n                 (.set camera.position 0 0 1)\n                 (doseq [a hand-joints] (.add scene a))\n                 (doseq [a hand-lines] (.add scene a))\n                 (.render renderer scene camera)\n                 (letfn\n                     [(tick []\n                        (js/requestAnimationFrame tick)\n                        (.update controls)\n                        (.render renderer scene camera))]\n                     (tick))))))]\n      [:div {:ref f}]\n      (finally (when @node\n                 (.removeChild @node (.-domElement renderer))\n                 (js/window.removeEventListener \"resize\" update)))))\n"]}