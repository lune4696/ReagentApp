{"version":3,"sources":["app/hello.cljs"],"mappings":"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","names":["cljs.core/deref","app.hello/click-counter","c","cljs.core.swap_BANG_","cljs.core/inc","app.hello/map-with-key","f","coll","cljs.core.map_indexed","i","app.hello/example-modifying-atom","a","app.ui/text-input","p__50459","map__50460","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.hello/calc-bmi","height","weight","bmi","data","h","cljs.core.assoc","app.hello/bmi","map__50462","vec__50463","cljs.core.nth","color","diagnose","app.ui/slider","app.hello/counters","reagent.core.atom","app.hello/bmi-data","app.hello/plot-data","cljs.core.range","cljs.core.map","cljs.core/identity","cljs.core.take","p1__50467#","app.hello/hand-data","app.hello/layout","app.hello/plot-node","cljs.core.atom","app.hello/current-page","app.hello/page-home","app.ui/lister","app.ui/timer","app.plot/plot","app.plot/update-plot","app.box/rolling-box","app.hand/hand-skeleton","app.hello/page-plot","app.hello/rooter","G__50468","cljs.core/Keyword","js/Error","app.hello/hello"],"sourcesContent":["(ns app.hello\n  (:require [reagent.core :as r]\n            [app.ui :as ui]\n            [app.plot :as plt]\n            [app.box :as box]\n            [app.hand :as hand]))\n\n(defn click-counter [c]\n  [:div \"The atom \" [:code \"click-count\"] \" has value: \" @c \". \"\n   [:input {:type \"button\" :value \"Click me!\" :on-click #(swap! c inc)}]])\n\n(defn map-with-key\n  {:doc \"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5404\u8981\u7d20\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8fd4\u5374\u3059\u308b\u95a2\u6570 f \u3092\u9069\u7528\u3057\u305f\u3046\u3048\u3067\u3001react key \u3092\u4ed8\u4e0e\"}\n  [f coll]\n  (->> coll (map-indexed (fn [i c] ^{:key i} [f c]))))\n\n(defn example-modifying-atom [a] [:div [:p \"The value is now: \" @a [:br] \"Change it here: \" [ui/text-input a]]])\n\n(defn calc-bmi [{:keys [height weight bmi] :as data}]\n  (let [h (/ height 100)]\n    (if (nil? bmi)\n      (assoc data :bmi (/ weight (* h h)))\n      (assoc data :weight (* bmi h h)))))\n\n(defn bmi [data]\n  (let [{:keys [weight height bmi]} @data\n        [color diagnose] (cond\n                          (< bmi 18.5) [\"orange\" \"underweight\"]\n                          (< bmi 25) [\"inherit\" \"normal\"]\n                          (< bmi 30) [\"orange\" \"overweight\"]\n                          :else [\"red\" \"obese\"])]\n    [:div\n     [:h3 \"BMI calculator\"]\n     [:div\n      \"Height: \" (int height) \"cm\"\n      [ui/slider data :height height 100 220 :bmi calc-bmi]]\n     [:div\n      \"Weight: \" (int weight) \"kg\"\n      [ui/slider data :weight weight 30 150 :bmi calc-bmi]]\n     [:div\n      \"BMI: \" (int bmi) \" \"\n      [:span {:style {:color color}} diagnose]\n      [ui/slider data :bmi bmi 10 50 :weight calc-bmi]]]))\n\n\n(def counters [(r/atom 0) (r/atom 1) (r/atom 2)])\n(def bmi-data (r/atom (calc-bmi {:height 100 :weight 80})))\n(def plot-data (r/atom  [{:x (->> (range) (map identity) (take 5) )\n                     :y (->> (range) (map #(* % %)) (take 5) )\n                     :type \"scatter\"}]))\n\n(def hand-data [ 3.56702536e-01,  1.25448644e-01, -3.78144911e-08,  2.58442879e-01,\n        1.67962849e-01, -1.59394536e-02,  1.99230939e-01,  2.85911858e-01,\n       -3.80800664e-02,  2.03225508e-01,  4.03543383e-01, -5.00700623e-02,\n        2.29443818e-01,  4.89487439e-01, -5.64782768e-02,  2.37581402e-01,\n        3.12023699e-01, -1.27338260e-01,  2.10384965e-01,  5.30334234e-01,\n       -1.51995942e-01,  2.20977604e-01,  4.92553204e-01, -1.32310286e-01,\n        2.29686156e-01,  4.23452169e-01, -1.09627999e-01,  3.22596401e-01,\n        3.29260826e-01, -1.24592729e-01,  2.80629992e-01,  5.70023417e-01,\n       -1.57182232e-01,  2.78808087e-01,  5.22696495e-01, -1.32588208e-01,\n        2.88175613e-01,  4.45645958e-01, -1.07170537e-01,  3.93074065e-01,\n        3.47538948e-01, -1.15016364e-01,  3.58776480e-01,  5.64299107e-01,\n       -1.29306167e-01,  3.44347358e-01,  5.19447327e-01, -9.43925604e-02,\n        3.46303612e-01,  4.50459629e-01, -6.68169409e-02,  4.44388539e-01,\n        3.54201496e-01, -1.03972860e-01,  4.14635360e-01,  5.18915653e-01,\n       -1.06505439e-01,  3.98395956e-01,  4.98268008e-01, -8.09545070e-02,\n                    3.97958905e-01,  4.46671903e-01, -5.99709116e-02])\n\n(def layout (r/atom {:title \"Sample\"}))\n\n(def plot-node (atom nil))\n\n(def current-page (r/atom :home))\n\n(def page-home\n  [:<>\n   [:p.someclass \"Hello world, \" [:strong \"ReagentApp\"] \" is running!\"]\n   [:p [:strong \"\u518d\u63cf\u753b\"] \"\u53ef\u80fd\u306a\u30ea\u30b9\u30c8\"] [ui/lister (->> counters (map-with-key click-counter))]\n   [:p [:strong \"\u518d\u63cf\u753b\"] \"\u53ef\u80fd\u306a\u30ea\u30b9\u30c8\"] [ui/lister (range 3)]\n   [:p] [ui/timer]\n   [:p] [example-modifying-atom (r/atom \"foo\")]\n   [:p] [bmi bmi-data]\n   [:p] [:section\n         [:p \"plotly.js \u306b\u3088\u308b\u30d7\u30ed\u30c3\u30c8\"]\n         [plt/plot {:data plot-data :layout layout :node plot-node}]\n         [:button {:on-click #(plt/update-plot {:data plot-data :node plot-node})} \"Update Plot\"]]\n   [:p] [box/rolling-box {}]\n   [:p] [hand/hand-skeleton {:hand-pos hand-data}]])\n\n(def page-plot [:<>\n   [:p.someclass \"This is \" [:strong \"Plot\"] \" page\"]\n   [:p] [:section\n         [:p \"plotly.js \u306b\u3088\u308b\u30d7\u30ed\u30c3\u30c8\"]\n         [plt/plot {:data plot-data :layout layout :node plot-node}]\n         [:button {:on-click #(plt/update-plot {:data plot-data :node plot-node})} \"Update Plot\"]]])\n\n(defn rooter []\n  (fn []\n    (case @current-page\n      :home page-home\n      :plot page-plot)))\n\n(defn hello [] (rooter))\n"]}