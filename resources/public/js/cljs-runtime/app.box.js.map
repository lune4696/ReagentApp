{"version":3,"sources":["app/box.cljs"],"mappings":"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","names":["p__44029","map__44030","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app.box/rolling-box","width","height","ratio","opt","with-let44035","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__42143__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init44036","cljs.core/not","res44039","destroy__42142__auto__","reagent.ratom/reactive?","node","cljs.core.atom","scene","js/module$node_modules$three$build$three_cjs.Scene","camera","js/module$node_modules$three$build$three_cjs.PerspectiveCamera","renderer","js/module$node_modules$three$build$three_cjs.WebGLRenderer","light","js/module$node_modules$three$build$three_cjs.DirectionalLight","ambient","js/module$node_modules$three$build$three_cjs.AmbientLight","geometry","js/module$node_modules$three$build$three_cjs.BoxGeometry","box-material","js/module$node_modules$three$build$three_cjs.MeshStandardMaterial","box","js/module$node_modules$three$build$three_cjs.Mesh","f","el","cljs.core/reset!","reagent.core/after-render","cljs.core/deref","or__4126__auto__","controls","js/module$node_modules$three$examples$jsm$controls$OrbitControls.OrbitControls","update","cljs.core.partial","app.three/resize-view","js/window.addEventListener","app.three/init-view","js/requestAnimationFrame","tick","js/window.removeEventListener","cljs.core/update"],"sourcesContent":["(ns app.box\n  (:require [reagent.core :as r]\n            [\"three\" :as Three]\n            [\"three/examples/jsm/controls/OrbitControls.js\" :refer [OrbitControls]]\n            ;; [\"three/addons/controls/OrbitControls.js\" :refer [OrbitControls]]\n            [app.three :as three]\n            ))\n\n(defn rolling-box [{:keys [width height ratio]\n                    :or {ratio (/ 9 16)}\n                    :as opt}]\n  (r/with-let\n      [node (atom nil)\n       scene (Three/Scene.)\n       camera (Three/PerspectiveCamera. 90 1 0.1 3000)\n       renderer (Three/WebGLRenderer. #js {:alpha true})\n       light (Three/DirectionalLight. 0xFFFFFF 2)\n       ambient (Three/AmbientLight. 0xFFFFFF 0.5)\n       geometry (Three/BoxGeometry. 500 500 500)\n       box-material (Three/MeshStandardMaterial. #js {:color 0x0000FF})\n       box (Three/Mesh. geometry box-material)\n       f (fn [el]\n           (when el (reset! node el))\n           (r/after-render\n            #(when @node\n               (when-not (.contains @node (.-domElement renderer))\n                 (.appendChild @node (.-domElement renderer)))\n               (let [width (or width (.-clientWidth @node))\n                     height (or height (* width ratio))\n                     controls (OrbitControls. camera (.-domElement renderer))\n                     update (partial three/resize-view node width height ratio renderer camera)]\n                 (update)\n                 (js/window.addEventListener \"resize\" update)\n                 (three/init-view scene renderer camera light ambient)\n                 (.add scene box)\n                 (.render renderer scene camera) ;; render \u30e1\u30bd\u30c3\u30c9\u306f\u500b\u5225\u306b\u547c\u3070\u306a\u3044\u3068\u6b63\u3057\u304f\u63cf\u753b\u3055\u308c\u306a\u3044\n                 (letfn\n                     [(tick []\n                        (js/requestAnimationFrame tick)\n                        (set! (.. box -rotation -x) (+ (.. box -rotation -x) 0.01))\n                        (set! (.. box -rotation -y) (+ (.. box -rotation -y) 0.01))\n                        (.update controls)\n                        (.render renderer scene camera))]\n                     (tick))))))]\n      [:div {:ref f}]\n      (finally (when @node\n                 (.removeChild @node (.-domElement renderer))\n                 (js/window.removeEventListener \"resize\" update)))))\n"]}